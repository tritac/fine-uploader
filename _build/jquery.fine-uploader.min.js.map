{"version":3,"sources":["?","../client/js/jquery-plugin.js","../client/js/jquery-dnd.js","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/traditional/traditional.form.upload.handler.js","../client/js/traditional/traditional.xhr.upload.handler.js","../client/js/traditional/all-chunks-done.ajax.requester.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js"],"names":["global","$","init","options","xformedOpts","transformVariables","newUploaderInstance","getNewUploaderInstance","uploader","addCallbacks","$el","params","uploaderType","pluginOption","namespace","charAt","toUpperCase","slice","toLowerCase","qq","FineUploader","dataStore","key","val","data","undefined","instanceToStore","option","optionVal","transformedOpts","callbacks","each","_options","prop","nonJqueryCallback","name","callbackEventTarget","exec","substring","nonJqueryCallbackRetVal","jqueryEventCallbackRetVal","originalArgs","Array","prototype","call","arguments","transformedArgs","idx","arg","push","maybeWrapInJquery","apply","this","triggerHandler","error","log","message","source","dest","xformed","arrayVals","element","inArray","pluginOptions","isPlainObject","isArray","arrayVal","arrayObjDest","merge","isValidCommand","command","type","match","delegateCommand","retVal","xformedArgs","origArgs","transformedVal","nodeType","cloneNode","fn","fineUploader","optionsOrCommand","self","selfArgs","retVals","index","el","length","jQuery","dropZoneElements","dnd","DragAndDrop","func","$callbackEl","args","fineUploaderDnd","hide","style","display","attach","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filters","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","getFirstByClass","children","child","firstChild","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","level","console","isObject","variable","Object","toString","isFunction","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","newStr","nextIdxToReplace","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","override","target","sourceFn","super_","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","Storage","getItem","bind","oldFunc","context","newArgs","concat","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome14OrHigher","isCrossOriginXhrSupported","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","title","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","file","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","removeFileRef","record","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_FINALIZING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","normalizeData","fileContainer","_prepareItemsForUpload","cancel","uploadData","_uploadData","getName","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","enabled","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","uploadDataRecord","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","isResumable","hasResumeRecord","debug","pauseUpload","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","_customResumeDataStore","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setCustomResumeData","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","xhr","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadResult","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkResult","partIndex","onUploadChunkSuccess","_onUploadChunkSuccess","onResume","customResumeData","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","isInProgress","getCustomResumeData","_getCustomResumeData","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","enableAuto","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","warnBeforeUnload","filenameParam","forceMultipart","omitDefaultParams","paramsInBody","requireSuccessJson","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","jsonPayload","resetOnStatus","recordsExpireIn","resuming","customKeys","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","normalizedResponse","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgressChunksArray","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","requestOverrides","uploadChunkData","overrides","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","traditional","onFinalizing","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","_getLocalStorageId","isAttemptingResume","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","getChunkSize","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","chunkingState","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","localStorageId","forEach","_getMimeType","_getPersistableData","ceil","_markNotResumable","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","getIframeContentJson","doc","innerHtml","contentWindow","nodeValue","createForm","responseFromMessage","multipart","addChunkingSpecificParams","allChunksDoneRequester","AllChunksDoneAjaxRequester","createReadyStateChangedHandler","onUploadOrChunkComplete","getChunksCompleteParams","isErrorUploadResponse","parseResponse","sendChunksCompleteRequest","complete","setParamsAndGetEntityToSend","entityToSendParams","xhrOverrides","customParams","defaultParams","xhrOverrideParams","setUploadHeaders","headersOptions","headerOverrides","headerName","headerValue","extraHeaders","uploadChunkParams","toSend","promises","endpointHandler","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","qqPath","extractDirectoryPath","droppedFiles","fileError","fullPath","isDirectory","getFilesInDirectory","entriesLeft","indexOfNameInFullPath","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","dragEnter","stopPropagation","onLeaveNotDescendants","dragLeave","onDrop","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","y","setupDragDrop","dropZones","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","includes","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","relatedTarget","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","placeholders","waitUntilResponse","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateDom","showThumbnails","serverScale","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListEl","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"jquery.fine-uploader.min.js","sourcesContent":[null,"/*globals jQuery, qq*/\r\n(function($) {\r\n    \"use strict\";\r\n    var $el,\r\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\r\n\r\n    function init(options) {\r\n        var xformedOpts = transformVariables(options || {}),\r\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\r\n\r\n        uploader(newUploaderInstance);\r\n        addCallbacks(xformedOpts, newUploaderInstance);\r\n\r\n        return $el;\r\n    }\r\n\r\n    function getNewUploaderInstance(params) {\r\n        var uploaderType = pluginOption(\"uploaderType\"),\r\n            namespace = pluginOption(\"endpointType\");\r\n\r\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\r\n        if (uploaderType) {\r\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\r\n            // with the upper camel cased `uploaderType` value.\r\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\r\n\r\n            if (namespace) {\r\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\r\n            }\r\n\r\n            return new qq[\"FineUploader\" + uploaderType](params);\r\n        }\r\n        else {\r\n            if (namespace) {\r\n                return new qq[namespace].FineUploader(params);\r\n            }\r\n\r\n            return new qq.FineUploader(params);\r\n        }\r\n    }\r\n\r\n    function dataStore(key, val) {\r\n        var data = $el.data(\"fineuploader\");\r\n\r\n        if (val) {\r\n            if (data === undefined) {\r\n                data = {};\r\n            }\r\n            data[key] = val;\r\n            $el.data(\"fineuploader\", data);\r\n        }\r\n        else {\r\n            if (data === undefined) {\r\n                return null;\r\n            }\r\n            return data[key];\r\n        }\r\n    }\r\n\r\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\r\n    // tied to this instance of the plug-in\r\n    function uploader(instanceToStore) {\r\n        return dataStore(\"uploader\", instanceToStore);\r\n    }\r\n\r\n    function pluginOption(option, optionVal) {\r\n        return dataStore(option, optionVal);\r\n    }\r\n\r\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\r\n    // return the result of executing the bound handler back to Fine Uploader\r\n    function addCallbacks(transformedOpts, newUploaderInstance) {\r\n        var callbacks = transformedOpts.callbacks = {};\r\n\r\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\r\n            var name, callbackEventTarget;\r\n\r\n            name = /^on(\\w+)/.exec(prop)[1];\r\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\r\n            callbackEventTarget = $el;\r\n\r\n            callbacks[prop] = function() {\r\n                var originalArgs = Array.prototype.slice.call(arguments),\r\n                    transformedArgs = [],\r\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\r\n\r\n                $.each(originalArgs, function(idx, arg) {\r\n                    transformedArgs.push(maybeWrapInJquery(arg));\r\n                });\r\n\r\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\r\n\r\n                try {\r\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\r\n                }\r\n                catch (error) {\r\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\r\n                }\r\n\r\n                /*jshint -W116*/\r\n                if (nonJqueryCallbackRetVal != null) {\r\n                    return nonJqueryCallbackRetVal;\r\n                }\r\n                return jqueryEventCallbackRetVal;\r\n            };\r\n        });\r\n\r\n        newUploaderInstance._options.callbacks = callbacks;\r\n    }\r\n\r\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\r\n    function transformVariables(source, dest) {\r\n        var xformed, arrayVals;\r\n\r\n        if (dest === undefined) {\r\n            if (source.uploaderType !== \"basic\") {\r\n                xformed = { element: $el[0] };\r\n            }\r\n            else {\r\n                xformed = {};\r\n            }\r\n        }\r\n        else {\r\n            xformed = dest;\r\n        }\r\n\r\n        $.each(source, function(prop, val) {\r\n            if ($.inArray(prop, pluginOptions) >= 0) {\r\n                pluginOption(prop, val);\r\n            }\r\n            else if (val instanceof $) {\r\n                xformed[prop] = val[0];\r\n            }\r\n            else if ($.isPlainObject(val)) {\r\n                xformed[prop] = {};\r\n                transformVariables(val, xformed[prop]);\r\n            }\r\n            else if ($.isArray(val)) {\r\n                arrayVals = [];\r\n                $.each(val, function(idx, arrayVal) {\r\n                    var arrayObjDest = {};\r\n\r\n                    if (arrayVal instanceof $) {\r\n                        $.merge(arrayVals, arrayVal);\r\n                    }\r\n                    else if ($.isPlainObject(arrayVal)) {\r\n                        transformVariables(arrayVal, arrayObjDest);\r\n                        arrayVals.push(arrayObjDest);\r\n                    }\r\n                    else {\r\n                        arrayVals.push(arrayVal);\r\n                    }\r\n                });\r\n                xformed[prop] = arrayVals;\r\n            }\r\n            else {\r\n                xformed[prop] = val;\r\n            }\r\n        });\r\n\r\n        if (dest === undefined) {\r\n            return xformed;\r\n        }\r\n    }\r\n\r\n    function isValidCommand(command) {\r\n        return $.type(command) === \"string\" &&\r\n            !command.match(/^_/) && //enforce private methods convention\r\n            uploader()[command] !== undefined;\r\n    }\r\n\r\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\r\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\r\n    function delegateCommand(command) {\r\n        var xformedArgs = [],\r\n            origArgs = Array.prototype.slice.call(arguments, 1),\r\n            retVal;\r\n\r\n        transformVariables(origArgs, xformedArgs);\r\n\r\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\r\n\r\n        return maybeWrapInJquery(retVal);\r\n    }\r\n\r\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\r\n    function maybeWrapInJquery(val) {\r\n        var transformedVal = val;\r\n\r\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\r\n        /*jshint -W116*/\r\n        if (val != null && typeof val === \"object\" &&\r\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\r\n\r\n            transformedVal = $(val);\r\n        }\r\n\r\n        return transformedVal;\r\n    }\r\n\r\n    $.fn.fineUploader = function(optionsOrCommand) {\r\n        var self = this, selfArgs = arguments, retVals = [];\r\n\r\n        this.each(function(index, el) {\r\n            $el = $(el);\r\n\r\n            if (uploader() && isValidCommand(optionsOrCommand)) {\r\n                retVals.push(delegateCommand.apply(self, selfArgs));\r\n\r\n                if (self.length === 1) {\r\n                    return false;\r\n                }\r\n            }\r\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\r\n                init.apply(self, selfArgs);\r\n            }\r\n            else {\r\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\r\n            }\r\n        });\r\n\r\n        if (retVals.length === 1) {\r\n            return retVals[0];\r\n        }\r\n        else if (retVals.length > 1) {\r\n            return retVals;\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n}(jQuery));\r\n","/*globals jQuery, qq*/\r\n(function($) {\r\n    \"use strict\";\r\n    var rootDataKey = \"fineUploaderDnd\",\r\n        $el;\r\n\r\n    function init(options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n\r\n        options.dropZoneElements = [$el];\r\n        var xformedOpts = transformVariables(options);\r\n        addCallbacks(xformedOpts);\r\n        dnd(new qq.DragAndDrop(xformedOpts));\r\n\r\n        return $el;\r\n    }\r\n\r\n    function dataStore(key, val) {\r\n        var data = $el.data(rootDataKey);\r\n\r\n        if (val) {\r\n            if (data === undefined) {\r\n                data = {};\r\n            }\r\n            data[key] = val;\r\n            $el.data(rootDataKey, data);\r\n        }\r\n        else {\r\n            if (data === undefined) {\r\n                return null;\r\n            }\r\n            return data[key];\r\n        }\r\n    }\r\n\r\n    function dnd(instanceToStore) {\r\n        return dataStore(\"dndInstance\", instanceToStore);\r\n    }\r\n\r\n    function addCallbacks(transformedOpts) {\r\n        var callbacks = transformedOpts.callbacks = {};\r\n\r\n        $.each(new qq.DragAndDrop.callbacks(), function(prop, func) {\r\n            var name = prop,\r\n                $callbackEl;\r\n\r\n            $callbackEl = $el;\r\n\r\n            callbacks[prop] = function() {\r\n                var args = Array.prototype.slice.call(arguments),\r\n                    jqueryHandlerResult = $callbackEl.triggerHandler(name, args);\r\n\r\n                return jqueryHandlerResult;\r\n            };\r\n        });\r\n    }\r\n\r\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\r\n    function transformVariables(source, dest) {\r\n        var xformed, arrayVals;\r\n\r\n        if (dest === undefined) {\r\n            xformed = {};\r\n        }\r\n        else {\r\n            xformed = dest;\r\n        }\r\n\r\n        $.each(source, function(prop, val) {\r\n            if (val instanceof $) {\r\n                xformed[prop] = val[0];\r\n            }\r\n            else if ($.isPlainObject(val)) {\r\n                xformed[prop] = {};\r\n                transformVariables(val, xformed[prop]);\r\n            }\r\n            else if ($.isArray(val)) {\r\n                arrayVals = [];\r\n                $.each(val, function(idx, arrayVal) {\r\n                    if (arrayVal instanceof $) {\r\n                        $.merge(arrayVals, arrayVal);\r\n                    }\r\n                    else {\r\n                        arrayVals.push(arrayVal);\r\n                    }\r\n                });\r\n                xformed[prop] = arrayVals;\r\n            }\r\n            else {\r\n                xformed[prop] = val;\r\n            }\r\n        });\r\n\r\n        if (dest === undefined) {\r\n            return xformed;\r\n        }\r\n    }\r\n\r\n    function isValidCommand(command) {\r\n        return $.type(command) === \"string\" &&\r\n            command === \"dispose\" &&\r\n            dnd()[command] !== undefined;\r\n    }\r\n\r\n    function delegateCommand(command) {\r\n        var xformedArgs = [], origArgs = Array.prototype.slice.call(arguments, 1);\r\n        transformVariables(origArgs, xformedArgs);\r\n        return dnd()[command].apply(dnd(), xformedArgs);\r\n    }\r\n\r\n    $.fn.fineUploaderDnd = function(optionsOrCommand) {\r\n        var self = this, selfArgs = arguments, retVals = [];\r\n\r\n        this.each(function(index, el) {\r\n            $el = $(el);\r\n\r\n            if (dnd() && isValidCommand(optionsOrCommand)) {\r\n                retVals.push(delegateCommand.apply(self, selfArgs));\r\n\r\n                if (self.length === 1) {\r\n                    return false;\r\n                }\r\n            }\r\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\r\n                init.apply(self, selfArgs);\r\n            }\r\n            else {\r\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist in Fine Uploader's DnD module.\");\r\n            }\r\n        });\r\n\r\n        if (retVals.length === 1) {\r\n            return retVals[0];\r\n        }\r\n        else if (retVals.length > 1) {\r\n            return retVals;\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n}(jQuery));\r\n","/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\r\n/* jshint -W079 */\r\nvar qq = function (element) {\r\n  \"use strict\";\r\n\r\n  return {\r\n    hide: function () {\r\n      element.style.display = \"none\";\r\n      return this;\r\n    },\r\n\r\n    /** Returns the function which detaches attached event */\r\n    attach: function (type, fn) {\r\n      if (element.addEventListener) {\r\n        element.addEventListener(type, fn, false);\r\n      } else if (element.attachEvent) {\r\n        element.attachEvent(\"on\" + type, fn);\r\n      }\r\n      return function () {\r\n        qq(element).detach(type, fn);\r\n      };\r\n    },\r\n\r\n    detach: function (type, fn) {\r\n      if (element.removeEventListener) {\r\n        element.removeEventListener(type, fn, false);\r\n      } else if (element.attachEvent) {\r\n        element.detachEvent(\"on\" + type, fn);\r\n      }\r\n      return this;\r\n    },\r\n\r\n    contains: function (descendant) {\r\n      // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\r\n      // says a `null` (or ostensibly `undefined`) parameter\r\n      // passed into `Node.contains` should result in a false return value.\r\n      // IE7 throws an exception if the parameter is `undefined` though.\r\n      if (!descendant) {\r\n        return false;\r\n      }\r\n\r\n      // compareposition returns false in this case\r\n      if (element === descendant) {\r\n        return true;\r\n      }\r\n\r\n      if (element.contains) {\r\n        return element.contains(descendant);\r\n      } else {\r\n        /*jslint bitwise: true*/\r\n        return !!(descendant.compareDocumentPosition(element) & 8);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Insert this element before elementB.\r\n     */\r\n    insertBefore: function (elementB) {\r\n      elementB.parentNode.insertBefore(element, elementB);\r\n      return this;\r\n    },\r\n\r\n    remove: function () {\r\n      element.parentNode.removeChild(element);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets styles for an element.\r\n     * Fixes opacity in IE6-8.\r\n     */\r\n    css: function (styles) {\r\n      /*jshint eqnull: true*/\r\n      if (element.style == null) {\r\n        throw new qq.Error(\r\n          \"Can't apply style to node as it is not on the HTMLElement prototype chain!\"\r\n        );\r\n      }\r\n\r\n      /*jshint -W116*/\r\n      if (styles.opacity != null) {\r\n        if (\r\n          typeof element.style.opacity !== \"string\" &&\r\n          typeof element.filters !== \"undefined\"\r\n        ) {\r\n          styles.filter =\r\n            \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\r\n        }\r\n      }\r\n      qq.extend(element.style, styles);\r\n\r\n      return this;\r\n    },\r\n\r\n    hasClass: function (name, considerParent) {\r\n      var re = new RegExp(\"(^| )\" + name + \"( |$)\");\r\n      return (\r\n        re.test(element.className) ||\r\n        !!(considerParent && re.test(element.parentNode.className))\r\n      );\r\n    },\r\n\r\n    addClass: function (name) {\r\n      if (!qq(element).hasClass(name)) {\r\n        element.className += \" \" + name;\r\n      }\r\n      return this;\r\n    },\r\n\r\n    removeClass: function (name) {\r\n      var re = new RegExp(\"(^| )\" + name + \"( |$)\");\r\n      element.className = element.className\r\n        .replace(re, \" \")\r\n        .replace(/^\\s+|\\s+$/g, \"\");\r\n      return this;\r\n    },\r\n\r\n    getByClass: function (className, first) {\r\n      var candidates,\r\n        result = [];\r\n\r\n      if (first && element.querySelector) {\r\n        return element.querySelector(\".\" + className);\r\n      } else if (element.querySelectorAll) {\r\n        return element.querySelectorAll(\".\" + className);\r\n      }\r\n\r\n      candidates = element.getElementsByTagName(\"*\");\r\n\r\n      qq.each(candidates, function (idx, val) {\r\n        if (qq(val).hasClass(className)) {\r\n          result.push(val);\r\n        }\r\n      });\r\n      return first ? result[0] : result;\r\n    },\r\n\r\n    getFirstByClass: function (className) {\r\n      return qq(element).getByClass(className, true);\r\n    },\r\n\r\n    children: function () {\r\n      var children = [],\r\n        child = element.firstChild;\r\n\r\n      while (child) {\r\n        if (child.nodeType === 1) {\r\n          children.push(child);\r\n        }\r\n        child = child.nextSibling;\r\n      }\r\n\r\n      return children;\r\n    },\r\n\r\n    setText: function (text) {\r\n      element.innerText = text;\r\n      element.textContent = text;\r\n      return this;\r\n    },\r\n\r\n    clearText: function () {\r\n      return qq(element).setText(\"\");\r\n    },\r\n\r\n    // Returns true if the attribute exists on the element\r\n    // AND the value of the attribute is NOT \"false\" (case-insensitive)\r\n    hasAttribute: function (attrName) {\r\n      var attrVal;\r\n\r\n      if (element.hasAttribute) {\r\n        if (!element.hasAttribute(attrName)) {\r\n          return false;\r\n        }\r\n\r\n        /*jshint -W116*/\r\n        return /^false$/i.exec(element.getAttribute(attrName)) == null;\r\n      } else {\r\n        attrVal = element[attrName];\r\n\r\n        if (attrVal === undefined) {\r\n          return false;\r\n        }\r\n\r\n        /*jshint -W116*/\r\n        return /^false$/i.exec(attrVal) == null;\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\n(function () {\r\n  \"use strict\";\r\n\r\n  qq.canvasToBlob = function (canvas, mime, quality) {\r\n    return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\r\n  };\r\n\r\n  qq.dataUriToBlob = function (dataUri) {\r\n    var arrayBuffer,\r\n      byteString,\r\n      createBlob = function (data, mime) {\r\n        var BlobBuilder =\r\n            window.BlobBuilder ||\r\n            window.WebKitBlobBuilder ||\r\n            window.MozBlobBuilder ||\r\n            window.MSBlobBuilder,\r\n          blobBuilder = BlobBuilder && new BlobBuilder();\r\n\r\n        if (blobBuilder) {\r\n          blobBuilder.append(data);\r\n          return blobBuilder.getBlob(mime);\r\n        } else {\r\n          return new Blob([data], { type: mime });\r\n        }\r\n      },\r\n      intArray,\r\n      mimeString;\r\n\r\n    // convert base64 to raw binary data held in a string\r\n    if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\r\n      byteString = atob(dataUri.split(\",\")[1]);\r\n    } else {\r\n      byteString = decodeURI(dataUri.split(\",\")[1]);\r\n    }\r\n\r\n    // extract the MIME\r\n    mimeString = dataUri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\r\n\r\n    // write the bytes of the binary string to an ArrayBuffer\r\n    arrayBuffer = new ArrayBuffer(byteString.length);\r\n    intArray = new Uint8Array(arrayBuffer);\r\n    qq.each(byteString, function (idx, character) {\r\n      intArray[idx] = character.charCodeAt(0);\r\n    });\r\n\r\n    return createBlob(arrayBuffer, mimeString);\r\n  };\r\n\r\n  qq.log = function (message, level) {\r\n    if (window.console) {\r\n      if (!level || level === \"info\") {\r\n        window.console.log(message);\r\n      } else {\r\n        if (window.console[level]) {\r\n          window.console[level](message);\r\n        } else {\r\n          window.console.log(\"<\" + level + \"> \" + message);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  qq.isObject = function (variable) {\r\n    return (\r\n      variable &&\r\n      !variable.nodeType &&\r\n      Object.prototype.toString.call(variable) === \"[object Object]\"\r\n    );\r\n  };\r\n\r\n  qq.isFunction = function (variable) {\r\n    return typeof variable === \"function\";\r\n  };\r\n\r\n  /**\r\n   * Check the type of a value.  Is it an \"array\"?\r\n   *\r\n   * @param value value to test.\r\n   * @returns true if the value is an array or associated with an `ArrayBuffer`\r\n   */\r\n  qq.isArray = function (value) {\r\n    return (\r\n      Object.prototype.toString.call(value) === \"[object Array]\" ||\r\n      (value &&\r\n        window.ArrayBuffer &&\r\n        value.buffer &&\r\n        value.buffer.constructor === ArrayBuffer)\r\n    );\r\n  };\r\n\r\n  // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\r\n  qq.isItemList = function (maybeItemList) {\r\n    return (\r\n      Object.prototype.toString.call(maybeItemList) ===\r\n      \"[object DataTransferItemList]\"\r\n    );\r\n  };\r\n\r\n  // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\r\n  // object that is associated with collections of Nodes.\r\n  qq.isNodeList = function (maybeNodeList) {\r\n    return (\r\n      Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\r\n      // If `HTMLCollection` is the actual type of the object, we must determine this\r\n      // by checking for expected properties/methods on the object\r\n      (maybeNodeList.item && maybeNodeList.namedItem)\r\n    );\r\n  };\r\n\r\n  qq.isString = function (maybeString) {\r\n    return Object.prototype.toString.call(maybeString) === \"[object String]\";\r\n  };\r\n\r\n  qq.trimStr = function (string) {\r\n    if (String.prototype.trim) {\r\n      return string.trim();\r\n    }\r\n\r\n    return string.replace(/^\\s+|\\s+$/g, \"\");\r\n  };\r\n\r\n  /**\r\n   * @param str String to format.\r\n   * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\r\n   */\r\n  qq.format = function (str) {\r\n    var args = Array.prototype.slice.call(arguments, 1),\r\n      newStr = str,\r\n      nextIdxToReplace = newStr.indexOf(\"{}\");\r\n\r\n    qq.each(args, function (idx, val) {\r\n      var strBefore = newStr.substring(0, nextIdxToReplace),\r\n        strAfter = newStr.substring(nextIdxToReplace + 2);\r\n\r\n      newStr = strBefore + val + strAfter;\r\n      nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\r\n\r\n      // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\r\n      if (nextIdxToReplace < 0) {\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return newStr;\r\n  };\r\n\r\n  qq.isFile = function (maybeFile) {\r\n    return (\r\n      window.File &&\r\n      Object.prototype.toString.call(maybeFile) === \"[object File]\"\r\n    );\r\n  };\r\n\r\n  qq.isFileList = function (maybeFileList) {\r\n    return (\r\n      window.FileList &&\r\n      Object.prototype.toString.call(maybeFileList) === \"[object FileList]\"\r\n    );\r\n  };\r\n\r\n  qq.isFileOrInput = function (maybeFileOrInput) {\r\n    return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\r\n  };\r\n\r\n  qq.isInput = function (maybeInput, notFile) {\r\n    var evaluateType = function (type) {\r\n      var normalizedType = type.toLowerCase();\r\n\r\n      if (notFile) {\r\n        return normalizedType !== \"file\";\r\n      }\r\n\r\n      return normalizedType === \"file\";\r\n    };\r\n\r\n    if (window.HTMLInputElement) {\r\n      if (\r\n        Object.prototype.toString.call(maybeInput) ===\r\n        \"[object HTMLInputElement]\"\r\n      ) {\r\n        if (maybeInput.type && evaluateType(maybeInput.type)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    if (maybeInput.tagName) {\r\n      if (maybeInput.tagName.toLowerCase() === \"input\") {\r\n        if (maybeInput.type && evaluateType(maybeInput.type)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  qq.isBlob = function (maybeBlob) {\r\n    if (\r\n      window.Blob &&\r\n      Object.prototype.toString.call(maybeBlob) === \"[object Blob]\"\r\n    ) {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  qq.isXhrUploadSupported = function () {\r\n    var input = document.createElement(\"input\");\r\n    input.type = \"file\";\r\n\r\n    return (\r\n      input.multiple !== undefined &&\r\n      typeof File !== \"undefined\" &&\r\n      typeof FormData !== \"undefined\" &&\r\n      typeof qq.createXhrInstance().upload !== \"undefined\"\r\n    );\r\n  };\r\n\r\n  // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\r\n  qq.createXhrInstance = function () {\r\n    if (window.XMLHttpRequest) {\r\n      return new XMLHttpRequest();\r\n    }\r\n\r\n    try {\r\n      return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\r\n    } catch (error) {\r\n      qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\r\n      return null;\r\n    }\r\n  };\r\n\r\n  qq.isFolderDropSupported = function (dataTransfer) {\r\n    return (\r\n      dataTransfer.items &&\r\n      dataTransfer.items.length > 0 &&\r\n      dataTransfer.items[0].webkitGetAsEntry\r\n    );\r\n  };\r\n\r\n  qq.isFileChunkingSupported = function () {\r\n    return (\r\n      !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\r\n      qq.isXhrUploadSupported() &&\r\n      (File.prototype.slice !== undefined ||\r\n        File.prototype.webkitSlice !== undefined ||\r\n        File.prototype.mozSlice !== undefined)\r\n    );\r\n  };\r\n\r\n  qq.sliceBlob = function (fileOrBlob, start, end) {\r\n    var slicer =\r\n      fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\r\n\r\n    return slicer.call(fileOrBlob, start, end);\r\n  };\r\n\r\n  qq.arrayBufferToHex = function (buffer) {\r\n    var bytesAsHex = \"\",\r\n      bytes = new Uint8Array(buffer);\r\n\r\n    qq.each(bytes, function (idx, byt) {\r\n      var byteAsHexStr = byt.toString(16);\r\n\r\n      if (byteAsHexStr.length < 2) {\r\n        byteAsHexStr = \"0\" + byteAsHexStr;\r\n      }\r\n\r\n      bytesAsHex += byteAsHexStr;\r\n    });\r\n\r\n    return bytesAsHex;\r\n  };\r\n\r\n  qq.readBlobToHex = function (blob, startOffset, length) {\r\n    var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\r\n      fileReader = new FileReader(),\r\n      promise = new qq.Promise();\r\n\r\n    fileReader.onload = function () {\r\n      promise.success(qq.arrayBufferToHex(fileReader.result));\r\n    };\r\n\r\n    fileReader.onerror = promise.failure;\r\n\r\n    fileReader.readAsArrayBuffer(initialBlob);\r\n\r\n    return promise;\r\n  };\r\n\r\n  qq.extend = function (first, second, extendNested) {\r\n    qq.each(second, function (prop, val) {\r\n      if (extendNested && qq.isObject(val)) {\r\n        if (first[prop] === undefined) {\r\n          first[prop] = {};\r\n        }\r\n        qq.extend(first[prop], val, true);\r\n      } else {\r\n        first[prop] = val;\r\n      }\r\n    });\r\n\r\n    return first;\r\n  };\r\n\r\n  /**\r\n   * Allow properties in one object to override properties in another,\r\n   * keeping track of the original values from the target object.\r\n   *\r\n   * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\r\n   *\r\n   * @param target Update properties in this object from some source\r\n   * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\r\n   * @returns {object} The target object\r\n   */\r\n  qq.override = function (target, sourceFn) {\r\n    var super_ = {},\r\n      source = sourceFn(super_);\r\n\r\n    qq.each(source, function (srcPropName, srcPropVal) {\r\n      if (target[srcPropName] !== undefined) {\r\n        super_[srcPropName] = target[srcPropName];\r\n      }\r\n\r\n      target[srcPropName] = srcPropVal;\r\n    });\r\n\r\n    return target;\r\n  };\r\n\r\n  /**\r\n   * Searches for a given element (elt) in the array, returns -1 if it is not present.\r\n   */\r\n  qq.indexOf = function (arr, elt, from) {\r\n    if (arr.indexOf) {\r\n      return arr.indexOf(elt, from);\r\n    }\r\n\r\n    from = from || 0;\r\n    var len = arr.length;\r\n\r\n    if (from < 0) {\r\n      from += len;\r\n    }\r\n\r\n    for (; from < len; from += 1) {\r\n      if (arr.hasOwnProperty(from) && arr[from] === elt) {\r\n        return from;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  //this is a version 4 UUID\r\n  qq.getUniqueId = function () {\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\r\n      /[xy]/g,\r\n      function (c) {\r\n        /*jslint eqeq: true, bitwise: true*/\r\n        var r = (Math.random() * 16) | 0,\r\n          v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n      }\r\n    );\r\n  };\r\n\r\n  //\r\n  // Browsers and platforms detection\r\n  qq.ie = function () {\r\n    return (\r\n      navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\r\n      navigator.userAgent.indexOf(\"Trident\") !== -1\r\n    );\r\n  };\r\n\r\n  qq.ie7 = function () {\r\n    return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\r\n  };\r\n\r\n  qq.ie8 = function () {\r\n    return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\r\n  };\r\n\r\n  qq.ie10 = function () {\r\n    return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\r\n  };\r\n\r\n  qq.ie11 = function () {\r\n    return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\r\n  };\r\n\r\n  qq.edge = function () {\r\n    return navigator.userAgent.indexOf(\"Edge\") >= 0;\r\n  };\r\n\r\n  qq.safari = function () {\r\n    return (\r\n      navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1\r\n    );\r\n  };\r\n\r\n  qq.chrome = function () {\r\n    return (\r\n      navigator.vendor !== undefined &&\r\n      navigator.vendor.indexOf(\"Google\") !== -1\r\n    );\r\n  };\r\n\r\n  qq.opera = function () {\r\n    return (\r\n      navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1\r\n    );\r\n  };\r\n\r\n  qq.firefox = function () {\r\n    return (\r\n      !qq.edge() &&\r\n      !qq.ie11() &&\r\n      navigator.userAgent.indexOf(\"Mozilla\") !== -1 &&\r\n      navigator.vendor !== undefined &&\r\n      navigator.vendor === \"\"\r\n    );\r\n  };\r\n\r\n  qq.windows = function () {\r\n    return navigator.platform === \"Win32\";\r\n  };\r\n\r\n  qq.android = function () {\r\n    return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\r\n  };\r\n\r\n  // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\r\n  // such as the one that prevents a `Blob` from being uploaded.\r\n  qq.androidStock = function () {\r\n    return (\r\n      qq.android() &&\r\n      navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0 &&\r\n      navigator.userAgent.toLowerCase().indexOf(\"firefox\") < 0\r\n    );\r\n  };\r\n\r\n  qq.ios6 = function () {\r\n    return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\r\n  };\r\n\r\n  qq.ios7 = function () {\r\n    return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\r\n  };\r\n\r\n  qq.ios8 = function () {\r\n    return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\r\n  };\r\n\r\n  // iOS 8.0.0\r\n  qq.ios800 = function () {\r\n    return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\r\n  };\r\n\r\n  qq.ios = function () {\r\n    /*jshint -W014 */\r\n    return (\r\n      navigator.userAgent.indexOf(\"iPad\") !== -1 ||\r\n      navigator.userAgent.indexOf(\"iPod\") !== -1 ||\r\n      navigator.userAgent.indexOf(\"iPhone\") !== -1\r\n    );\r\n  };\r\n\r\n  qq.iosChrome = function () {\r\n    return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\r\n  };\r\n\r\n  qq.iosSafari = function () {\r\n    return (\r\n      qq.ios() &&\r\n      !qq.iosChrome() &&\r\n      navigator.userAgent.indexOf(\"Safari\") !== -1\r\n    );\r\n  };\r\n\r\n  qq.iosSafariWebView = function () {\r\n    return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\r\n  };\r\n\r\n  //\r\n  // Events\r\n\r\n  qq.preventDefault = function (e) {\r\n    if (e.preventDefault) {\r\n      e.preventDefault();\r\n    } else {\r\n      e.returnValue = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Creates and returns element from html string\r\n   * Uses innerHTML to create an element\r\n   */\r\n  qq.toElement = (function () {\r\n    var div = document.createElement(\"div\");\r\n    return function (html) {\r\n      div.innerHTML = html;\r\n      var element = div.firstChild;\r\n      div.removeChild(element);\r\n      return element;\r\n    };\r\n  })();\r\n\r\n  //key and value are passed to callback for each entry in the iterable item\r\n  qq.each = function (iterableItem, callback) {\r\n    var keyOrIndex, retVal;\r\n\r\n    if (iterableItem) {\r\n      // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\r\n      if (window.Storage && iterableItem.constructor === window.Storage) {\r\n        for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\r\n          retVal = callback(\r\n            iterableItem.key(keyOrIndex),\r\n            iterableItem.getItem(iterableItem.key(keyOrIndex))\r\n          );\r\n          if (retVal === false) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\r\n      // when iterating over items inside the object.\r\n      else if (\r\n        qq.isArray(iterableItem) ||\r\n        qq.isItemList(iterableItem) ||\r\n        qq.isNodeList(iterableItem)\r\n      ) {\r\n        for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\r\n          retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\r\n          if (retVal === false) {\r\n            break;\r\n          }\r\n        }\r\n      } else if (qq.isString(iterableItem)) {\r\n        for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\r\n          retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\r\n          if (retVal === false) {\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        for (keyOrIndex in iterableItem) {\r\n          if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\r\n            retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\r\n            if (retVal === false) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //include any args that should be passed to the new function after the context arg\r\n  qq.bind = function (oldFunc, context) {\r\n    if (qq.isFunction(oldFunc)) {\r\n      var args = Array.prototype.slice.call(arguments, 2);\r\n\r\n      return function () {\r\n        var newArgs = qq.extend([], args);\r\n        if (arguments.length) {\r\n          newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\r\n        }\r\n        return oldFunc.apply(context, newArgs);\r\n      };\r\n    }\r\n\r\n    throw new Error(\"first parameter must be a function!\");\r\n  };\r\n\r\n  /**\r\n   * obj2url() takes a json-object as argument and generates\r\n   * a querystring. pretty much like jQuery.param()\r\n   *\r\n   * how to use:\r\n   *\r\n   *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\r\n   *\r\n   * will result in:\r\n   *\r\n   *    `http://any.url/upload?otherParam=value&a=b&c=d`\r\n   *\r\n   * @param  Object JSON-Object\r\n   * @param  String current querystring-part\r\n   * @return String encoded querystring\r\n   */\r\n  qq.obj2url = function (obj, temp, prefixDone) {\r\n    /*jshint laxbreak: true*/\r\n    var uristrings = [],\r\n      prefix = \"&\",\r\n      add = function (nextObj, i) {\r\n        var nextTemp = temp\r\n          ? /\\[\\]$/.test(temp) // prevent double-encoding\r\n            ? temp\r\n            : temp + \"[\" + i + \"]\"\r\n          : i;\r\n        if (nextTemp !== \"undefined\" && i !== \"undefined\") {\r\n          uristrings.push(\r\n            typeof nextObj === \"object\"\r\n              ? qq.obj2url(nextObj, nextTemp, true)\r\n              : Object.prototype.toString.call(nextObj) === \"[object Function]\"\r\n              ? encodeURIComponent(nextTemp) +\r\n                \"=\" +\r\n                encodeURIComponent(nextObj())\r\n              : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\r\n          );\r\n        }\r\n      };\r\n\r\n    if (!prefixDone && temp) {\r\n      prefix = /\\?/.test(temp) ? (/\\?$/.test(temp) ? \"\" : \"&\") : \"?\";\r\n      uristrings.push(temp);\r\n      uristrings.push(qq.obj2url(obj));\r\n    } else if (\r\n      Object.prototype.toString.call(obj) === \"[object Array]\" &&\r\n      typeof obj !== \"undefined\"\r\n    ) {\r\n      qq.each(obj, function (idx, val) {\r\n        add(val, idx);\r\n      });\r\n    } else if (\r\n      typeof obj !== \"undefined\" &&\r\n      obj !== null &&\r\n      typeof obj === \"object\"\r\n    ) {\r\n      qq.each(obj, function (prop, val) {\r\n        add(val, prop);\r\n      });\r\n    } else {\r\n      uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\r\n    }\r\n\r\n    if (temp) {\r\n      return uristrings.join(prefix);\r\n    } else {\r\n      return uristrings.join(prefix).replace(/^&/, \"\").replace(/%20/g, \"+\");\r\n    }\r\n  };\r\n\r\n  qq.obj2FormData = function (obj, formData, arrayKeyName) {\r\n    if (!formData) {\r\n      formData = new FormData();\r\n    }\r\n\r\n    qq.each(obj, function (key, val) {\r\n      key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\r\n\r\n      if (qq.isObject(val)) {\r\n        qq.obj2FormData(val, formData, key);\r\n      } else if (qq.isFunction(val)) {\r\n        formData.append(key, val());\r\n      } else {\r\n        formData.append(key, val);\r\n      }\r\n    });\r\n\r\n    return formData;\r\n  };\r\n\r\n  qq.obj2Inputs = function (obj, form) {\r\n    var input;\r\n\r\n    if (!form) {\r\n      form = document.createElement(\"form\");\r\n    }\r\n\r\n    qq.obj2FormData(obj, {\r\n      append: function (key, val) {\r\n        input = document.createElement(\"input\");\r\n        input.setAttribute(\"name\", key);\r\n        input.setAttribute(\"value\", val);\r\n        form.appendChild(input);\r\n      },\r\n    });\r\n\r\n    return form;\r\n  };\r\n\r\n  /**\r\n   * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\r\n   * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\r\n   */\r\n  qq.parseJson = function (json) {\r\n    /*jshint evil: true*/\r\n    if (window.JSON && qq.isFunction(JSON.parse)) {\r\n      return JSON.parse(json);\r\n    } else {\r\n      throw new Error(\r\n        \"JSON.parse is not supported in this environment, the code is only meant to run katanaPIM\"\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Retrieve the extension of a file, if it exists.\r\n   *\r\n   * @param filename\r\n   * @returns {string || undefined}\r\n   */\r\n  qq.getExtension = function (filename) {\r\n    var extIdx = filename.lastIndexOf(\".\") + 1;\r\n\r\n    if (extIdx > 0) {\r\n      return filename.substr(extIdx, filename.length - extIdx);\r\n    }\r\n  };\r\n\r\n  qq.getFilename = function (blobOrFileInput) {\r\n    /*jslint regexp: true*/\r\n\r\n    if (qq.isInput(blobOrFileInput)) {\r\n      // get input value and remove path to normalize\r\n      return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\r\n    } else if (qq.isFile(blobOrFileInput)) {\r\n      if (\r\n        blobOrFileInput.fileName !== null &&\r\n        blobOrFileInput.fileName !== undefined\r\n      ) {\r\n        return blobOrFileInput.fileName;\r\n      }\r\n    }\r\n\r\n    return blobOrFileInput.name;\r\n  };\r\n\r\n  /**\r\n   * A generic module which supports object disposing in dispose() method.\r\n   * */\r\n  qq.DisposeSupport = function () {\r\n    var disposers = [];\r\n\r\n    return {\r\n      /** Run all registered disposers */\r\n      dispose: function () {\r\n        var disposer;\r\n        do {\r\n          disposer = disposers.shift();\r\n          if (disposer) {\r\n            disposer();\r\n          }\r\n        } while (disposer);\r\n      },\r\n\r\n      /** Attach event handler and register de-attacher as a disposer */\r\n      attach: function () {\r\n        var args = arguments;\r\n        /*jslint undef:true*/\r\n        this.addDisposer(\r\n          qq(args[0]).attach.apply(\r\n            this,\r\n            Array.prototype.slice.call(arguments, 1)\r\n          )\r\n        );\r\n      },\r\n\r\n      /** Add disposer to the collection */\r\n      addDisposer: function (disposeFunction) {\r\n        disposers.push(disposeFunction);\r\n      },\r\n    };\r\n  };\r\n})();\r\n","/* globals define, module, global, qq */\r\n(function() {\r\n    \"use strict\";\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return qq;\r\n        });\r\n    }\r\n    else if (typeof module !== \"undefined\" && module.exports) {\r\n        module.exports = qq;\r\n    }\r\n    else {\r\n        global.qq = qq;\r\n    }\r\n}());\r\n","/* globals qq */\r\n/**\r\n * Fine Uploader top-level Error container.  Inherits from `Error`.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.Error = function(message) {\r\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\r\n    };\r\n\r\n    qq.Error.prototype = new Error();\r\n}());\r\n","/*global qq */\r\nqq.version = \"5.16.2\";\r\n","/* globals qq */\r\nqq.supportedFeatures = (function() {\r\n    \"use strict\";\r\n\r\n    var supportsUploading,\r\n        supportsUploadingBlobs,\r\n        supportsFileDrop,\r\n        supportsAjaxFileUploading,\r\n        supportsFolderDrop,\r\n        supportsChunking,\r\n        supportsResume,\r\n        supportsUploadViaPaste,\r\n        supportsUploadCors,\r\n        supportsDeleteFileXdr,\r\n        supportsDeleteFileCorsXhr,\r\n        supportsDeleteFileCors,\r\n        supportsFolderSelection,\r\n        supportsImagePreviews,\r\n        supportsUploadProgress;\r\n\r\n    function testSupportsFileInputElement() {\r\n        var supported = true,\r\n            tempInput;\r\n\r\n        try {\r\n            tempInput = document.createElement(\"input\");\r\n            tempInput.type = \"file\";\r\n            qq(tempInput).hide();\r\n\r\n            if (tempInput.disabled) {\r\n                supported = false;\r\n            }\r\n        }\r\n        catch (ex) {\r\n            supported = false;\r\n        }\r\n\r\n        return supported;\r\n    }\r\n\r\n    //only way to test for complete Clipboard API support at this time\r\n    function isChrome14OrHigher() {\r\n        return (qq.chrome() || qq.opera()) &&\r\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\r\n    }\r\n\r\n    //Ensure we can send cross-origin `XMLHttpRequest`s\r\n    function isCrossOriginXhrSupported() {\r\n        if (window.XMLHttpRequest) {\r\n            var xhr = qq.createXhrInstance();\r\n\r\n            //Commonly accepted test for XHR CORS support.\r\n            return xhr.withCredentials !== undefined;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\r\n    function isXdrSupported() {\r\n        return window.XDomainRequest !== undefined;\r\n    }\r\n\r\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\r\n    // or if `XDomainRequest` is an available alternative.\r\n    function isCrossOriginAjaxSupported() {\r\n        if (isCrossOriginXhrSupported()) {\r\n            return true;\r\n        }\r\n\r\n        return isXdrSupported();\r\n    }\r\n\r\n    function isFolderSelectionSupported() {\r\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\r\n        return document.createElement(\"input\").webkitdirectory !== undefined;\r\n    }\r\n\r\n    function isLocalStorageSupported() {\r\n        try {\r\n            return !!window.localStorage &&\r\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\r\n                qq.isFunction(window.localStorage.setItem);\r\n        }\r\n        catch (error) {\r\n            // probably caught a security exception, so no localStorage for you\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function isDragAndDropSupported() {\r\n        var span = document.createElement(\"span\");\r\n\r\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\r\n            !qq.android() && !qq.ios();\r\n    }\r\n\r\n    supportsUploading = testSupportsFileInputElement();\r\n\r\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\r\n\r\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\r\n\r\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\r\n\r\n    // adapted from https://stackoverflow.com/a/23278460/486979\r\n    supportsFolderDrop = supportsFileDrop && (function() {\r\n        var input = document.createElement(\"input\");\r\n\r\n        input.type = \"file\";\r\n        return !!(\"webkitdirectory\" in (input || document.querySelectorAll(\"input[type=file]\")[0]));\r\n    }());\r\n\r\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\r\n\r\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\r\n\r\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\r\n\r\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\r\n\r\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\r\n\r\n    supportsDeleteFileXdr = isXdrSupported();\r\n\r\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\r\n\r\n    supportsFolderSelection = isFolderSelectionSupported();\r\n\r\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\r\n\r\n    supportsUploadProgress = (function() {\r\n        if (supportsAjaxFileUploading) {\r\n            return !qq.androidStock() && !qq.iosChrome();\r\n        }\r\n        return false;\r\n    }());\r\n\r\n    return {\r\n        ajaxUploading: supportsAjaxFileUploading,\r\n        blobUploading: supportsUploadingBlobs,\r\n        canDetermineSize: supportsAjaxFileUploading,\r\n        chunking: supportsChunking,\r\n        deleteFileCors: supportsDeleteFileCors,\r\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\r\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\r\n        dialogElement: !!window.HTMLDialogElement,\r\n        fileDrop: supportsFileDrop,\r\n        folderDrop: supportsFolderDrop,\r\n        folderSelection: supportsFolderSelection,\r\n        imagePreviews: supportsImagePreviews,\r\n        imageValidation: supportsImagePreviews,\r\n        itemSizeValidation: supportsAjaxFileUploading,\r\n        pause: supportsChunking,\r\n        progressBar: supportsUploadProgress,\r\n        resume: supportsResume,\r\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\r\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\r\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\r\n        uploading: supportsUploading,\r\n        uploadCors: supportsUploadCors,\r\n        uploadCustomHeaders: supportsAjaxFileUploading,\r\n        uploadNonMultipart: supportsAjaxFileUploading,\r\n        uploadViaPaste: supportsUploadViaPaste\r\n    };\r\n\r\n}());\r\n","/*globals qq*/\r\n\r\n// Is the passed object a promise instance?\r\nqq.isGenericPromise = function(maybePromise) {\r\n    \"use strict\";\r\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\r\n};\r\n\r\nqq.Promise = function() {\r\n    \"use strict\";\r\n\r\n    var successArgs, failureArgs,\r\n        successCallbacks = [],\r\n        failureCallbacks = [],\r\n        doneCallbacks = [],\r\n        state = 0;\r\n\r\n    qq.extend(this, {\r\n        then: function(onSuccess, onFailure) {\r\n            if (state === 0) {\r\n                if (onSuccess) {\r\n                    successCallbacks.push(onSuccess);\r\n                }\r\n                if (onFailure) {\r\n                    failureCallbacks.push(onFailure);\r\n                }\r\n            }\r\n            else if (state === -1) {\r\n                onFailure && onFailure.apply(null, failureArgs);\r\n            }\r\n            else if (onSuccess) {\r\n                onSuccess.apply(null, successArgs);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        done: function(callback) {\r\n            if (state === 0) {\r\n                doneCallbacks.push(callback);\r\n            }\r\n            else {\r\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        success: function() {\r\n            state = 1;\r\n            successArgs = arguments;\r\n\r\n            if (successCallbacks.length) {\r\n                qq.each(successCallbacks, function(idx, callback) {\r\n                    callback.apply(null, successArgs);\r\n                });\r\n            }\r\n\r\n            if (doneCallbacks.length) {\r\n                qq.each(doneCallbacks, function(idx, callback) {\r\n                    callback.apply(null, successArgs);\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        failure: function() {\r\n            state = -1;\r\n            failureArgs = arguments;\r\n\r\n            if (failureCallbacks.length) {\r\n                qq.each(failureCallbacks, function(idx, callback) {\r\n                    callback.apply(null, failureArgs);\r\n                });\r\n            }\r\n\r\n            if (doneCallbacks.length) {\r\n                qq.each(doneCallbacks, function(idx, callback) {\r\n                    callback.apply(null, failureArgs);\r\n                });\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Placeholder for a Blob that will be generated on-demand.\r\n *\r\n * @param referenceBlob Parent of the generated blob\r\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\r\n * @constructor\r\n */\r\nqq.BlobProxy = function(referenceBlob, onCreate) {\r\n    \"use strict\";\r\n\r\n    qq.extend(this, {\r\n        referenceBlob: referenceBlob,\r\n\r\n        create: function() {\r\n            return onCreate(referenceBlob);\r\n        }\r\n    });\r\n};\r\n","/*globals qq*/\r\n\r\n/**\r\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\r\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\r\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\r\n * provided here by adding CSS classes to the container on hover/focus.\r\n *\r\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\r\n * available on all supported browsers.\r\n *\r\n * @param o Options to override the default values\r\n */\r\nqq.UploadButton = function(o) {\r\n    \"use strict\";\r\n\r\n    var self = this,\r\n\r\n        disposeSupport = new qq.DisposeSupport(),\r\n\r\n        options = {\r\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\r\n            acceptFiles: null,\r\n\r\n            // \"Container\" element\r\n            element: null,\r\n\r\n            focusClass: \"qq-upload-button-focus\",\r\n\r\n            // A true value allows folders to be selected, if supported by the UA\r\n            folders: false,\r\n\r\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\r\n            hoverClass: \"qq-upload-button-hover\",\r\n\r\n            ios8BrowserCrashWorkaround: false,\r\n\r\n            // If true adds `multiple` attribute to `<input type=\"file\">`\r\n            multiple: false,\r\n\r\n            // `name` attribute of `<input type=\"file\">`\r\n            name: \"qqfile\",\r\n\r\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\r\n            onChange: function(input) {},\r\n\r\n            title: null\r\n        },\r\n        input, buttonId;\r\n\r\n    // Overrides any of the default option values with any option values passed in during construction.\r\n    qq.extend(options, o);\r\n\r\n    buttonId = qq.getUniqueId();\r\n\r\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\r\n    function createInput() {\r\n        var input = document.createElement(\"input\");\r\n\r\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\r\n        input.setAttribute(\"title\", options.title);\r\n\r\n        self.setMultiple(options.multiple, input);\r\n\r\n        if (options.folders && qq.supportedFeatures.folderSelection) {\r\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\r\n            input.setAttribute(\"webkitdirectory\", \"\");\r\n        }\r\n\r\n        if (options.acceptFiles) {\r\n            input.setAttribute(\"accept\", options.acceptFiles);\r\n        }\r\n\r\n        input.setAttribute(\"type\", \"file\");\r\n        input.setAttribute(\"name\", options.name);\r\n\r\n        qq(input).css({\r\n            position: \"absolute\",\r\n            // in Opera only 'browse' button\r\n            // is clickable and it is located at\r\n            // the right side of the input\r\n            right: 0,\r\n            top: 0,\r\n            fontFamily: \"Arial\",\r\n            // It's especially important to make this an arbitrarily large value\r\n            // to ensure the rendered input button in IE takes up the entire\r\n            // space of the container element.  Otherwise, the left side of the\r\n            // button will require a double-click to invoke the file chooser.\r\n            // In other browsers, this might cause other issues, so a large font-size\r\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\r\n            // in some cases when the font-size is large.  So, this workaround is not applied\r\n            // to IE8.\r\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\r\n            margin: 0,\r\n            padding: 0,\r\n            cursor: \"pointer\",\r\n            opacity: 0\r\n        });\r\n\r\n        // Setting the file input's height to 100% in IE7 causes\r\n        // most of the visible button to be unclickable.\r\n        !qq.ie7() && qq(input).css({height: \"100%\"});\r\n\r\n        options.element.appendChild(input);\r\n\r\n        disposeSupport.attach(input, \"change\", function() {\r\n            options.onChange(input);\r\n        });\r\n\r\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\r\n        disposeSupport.attach(input, \"mouseover\", function() {\r\n            qq(options.element).addClass(options.hoverClass);\r\n        });\r\n        disposeSupport.attach(input, \"mouseout\", function() {\r\n            qq(options.element).removeClass(options.hoverClass);\r\n        });\r\n\r\n        disposeSupport.attach(input, \"focus\", function() {\r\n            qq(options.element).addClass(options.focusClass);\r\n        });\r\n        disposeSupport.attach(input, \"blur\", function() {\r\n            qq(options.element).removeClass(options.focusClass);\r\n        });\r\n\r\n        return input;\r\n    }\r\n\r\n    // Make button suitable container for input\r\n    qq(options.element).css({\r\n        position: \"relative\",\r\n        overflow: \"hidden\",\r\n        // Make sure browse button is in the right side in Internet Explorer\r\n        direction: \"ltr\"\r\n    });\r\n\r\n    // Exposed API\r\n    qq.extend(this, {\r\n        getInput: function() {\r\n            return input;\r\n        },\r\n\r\n        getButtonId: function() {\r\n            return buttonId;\r\n        },\r\n\r\n        setMultiple: function(isMultiple, optInput) {\r\n            var input = optInput || this.getInput();\r\n\r\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\r\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\r\n            // See #1283.\r\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\r\n                input.setAttribute(\"multiple\", \"\");\r\n            }\r\n\r\n            else {\r\n                if (isMultiple) {\r\n                    input.setAttribute(\"multiple\", \"\");\r\n                }\r\n                else {\r\n                    input.removeAttribute(\"multiple\");\r\n                }\r\n            }\r\n        },\r\n\r\n        setAcceptFiles: function(acceptFiles) {\r\n            if (acceptFiles !== options.acceptFiles) {\r\n                input.setAttribute(\"accept\", acceptFiles);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            if (input.parentNode) {\r\n                qq(input).remove();\r\n            }\r\n\r\n            qq(options.element).removeClass(options.focusClass);\r\n            input = null;\r\n            input = createInput();\r\n        }\r\n    });\r\n\r\n    input = createInput();\r\n};\r\n\r\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\r\n","/*globals qq */\r\nqq.UploadData = function(uploaderProxy) {\r\n    \"use strict\";\r\n\r\n    var data = [],\r\n        byUuid = {},\r\n        byStatus = {},\r\n        byProxyGroupId = {},\r\n        byBatchId = {};\r\n\r\n    function getDataByIds(idOrIds) {\r\n        if (qq.isArray(idOrIds)) {\r\n            var entries = [];\r\n\r\n            qq.each(idOrIds, function(idx, id) {\r\n                entries.push(data[id]);\r\n            });\r\n\r\n            return entries;\r\n        }\r\n\r\n        return data[idOrIds];\r\n    }\r\n\r\n    function getDataByUuids(uuids) {\r\n        if (qq.isArray(uuids)) {\r\n            var entries = [];\r\n\r\n            qq.each(uuids, function(idx, uuid) {\r\n                entries.push(data[byUuid[uuid]]);\r\n            });\r\n\r\n            return entries;\r\n        }\r\n\r\n        return data[byUuid[uuids]];\r\n    }\r\n\r\n    function getDataByStatus(status) {\r\n        var statusResults = [],\r\n            statuses = [].concat(status);\r\n\r\n        qq.each(statuses, function(index, statusEnum) {\r\n            var statusResultIndexes = byStatus[statusEnum];\r\n\r\n            if (statusResultIndexes !== undefined) {\r\n                qq.each(statusResultIndexes, function(i, dataIndex) {\r\n                    statusResults.push(data[dataIndex]);\r\n                });\r\n            }\r\n        });\r\n\r\n        return statusResults;\r\n    }\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Adds a new file to the data cache for tracking purposes.\r\n         *\r\n         * @param spec Data that describes this file.  Possible properties are:\r\n         *\r\n         * - uuid: Initial UUID for this file.\r\n         * - name: Initial name of this file.\r\n         * - size: Size of this file, omit if this cannot be determined\r\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\r\n         * - batchId: ID of the batch this file belongs to\r\n         * - proxyGroupId: ID of the proxy group associated with this file\r\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\r\n         *\r\n         * @returns {number} Internal ID for this file.\r\n         */\r\n        addFile: function(spec) {\r\n            var status = spec.status || qq.status.SUBMITTING,\r\n                id = data.push({\r\n                    name: spec.name,\r\n                    originalName: spec.name,\r\n                    uuid: spec.uuid,\r\n                    size: spec.size == null ? -1 : spec.size,\r\n                    status: status,\r\n                    file: spec.file\r\n                }) - 1;\r\n\r\n            if (spec.batchId) {\r\n                data[id].batchId = spec.batchId;\r\n\r\n                if (byBatchId[spec.batchId] === undefined) {\r\n                    byBatchId[spec.batchId] = [];\r\n                }\r\n                byBatchId[spec.batchId].push(id);\r\n            }\r\n\r\n            if (spec.proxyGroupId) {\r\n                data[id].proxyGroupId = spec.proxyGroupId;\r\n\r\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\r\n                    byProxyGroupId[spec.proxyGroupId] = [];\r\n                }\r\n                byProxyGroupId[spec.proxyGroupId].push(id);\r\n            }\r\n\r\n            data[id].id = id;\r\n            byUuid[spec.uuid] = id;\r\n\r\n            if (byStatus[status] === undefined) {\r\n                byStatus[status] = [];\r\n            }\r\n            byStatus[status].push(id);\r\n\r\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\r\n            uploaderProxy.onStatusChange(id, null, status);\r\n\r\n            return id;\r\n        },\r\n\r\n        retrieve: function(optionalFilter) {\r\n            if (qq.isObject(optionalFilter) && data.length)  {\r\n                if (optionalFilter.id !== undefined) {\r\n                    return getDataByIds(optionalFilter.id);\r\n                }\r\n\r\n                else if (optionalFilter.uuid !== undefined) {\r\n                    return getDataByUuids(optionalFilter.uuid);\r\n                }\r\n\r\n                else if (optionalFilter.status) {\r\n                    return getDataByStatus(optionalFilter.status);\r\n                }\r\n            }\r\n            else {\r\n                return qq.extend([], data, true);\r\n            }\r\n        },\r\n\r\n        removeFileRef: function(id) {\r\n            var record = getDataByIds(id);\r\n\r\n            if (record) {\r\n                delete record.file;\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            data = [];\r\n            byUuid = {};\r\n            byStatus = {};\r\n            byBatchId = {};\r\n        },\r\n\r\n        setStatus: function(id, newStatus) {\r\n            var oldStatus = data[id].status,\r\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\r\n\r\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\r\n\r\n            data[id].status = newStatus;\r\n\r\n            if (byStatus[newStatus] === undefined) {\r\n                byStatus[newStatus] = [];\r\n            }\r\n            byStatus[newStatus].push(id);\r\n\r\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\r\n        },\r\n\r\n        uuidChanged: function(id, newUuid) {\r\n            var oldUuid = data[id].uuid;\r\n\r\n            data[id].uuid = newUuid;\r\n            byUuid[newUuid] = id;\r\n            delete byUuid[oldUuid];\r\n        },\r\n\r\n        updateName: function(id, newName) {\r\n            data[id].name = newName;\r\n        },\r\n\r\n        updateSize: function(id, newSize) {\r\n            data[id].size = newSize;\r\n        },\r\n\r\n        // Only applicable if this file has a parent that we may want to reference later.\r\n        setParentId: function(targetId, parentId) {\r\n            data[targetId].parentId = parentId;\r\n        },\r\n\r\n        getIdsInProxyGroup: function(id) {\r\n            var proxyGroupId = data[id].proxyGroupId;\r\n\r\n            if (proxyGroupId) {\r\n                return byProxyGroupId[proxyGroupId];\r\n            }\r\n            return [];\r\n        },\r\n\r\n        getIdsInBatch: function(id) {\r\n            var batchId = data[id].batchId;\r\n\r\n            return byBatchId[batchId];\r\n        }\r\n    });\r\n};\r\n\r\nqq.status = {\r\n    SUBMITTING: \"submitting\",\r\n    SUBMITTED: \"submitted\",\r\n    REJECTED: \"rejected\",\r\n    QUEUED: \"queued\",\r\n    CANCELED: \"canceled\",\r\n    PAUSED: \"paused\",\r\n    UPLOADING: \"uploading\",\r\n    UPLOAD_FINALIZING: \"upload finalizing\",\r\n    UPLOAD_RETRYING: \"retrying upload\",\r\n    UPLOAD_SUCCESSFUL: \"upload successful\",\r\n    UPLOAD_FAILED: \"upload failed\",\r\n    DELETE_FAILED: \"delete failed\",\r\n    DELETING: \"deleting\",\r\n    DELETED: \"deleted\"\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Defines the public API for FineUploaderBasic mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.basePublicApi = {\r\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\r\n        addBlobs: function(blobDataOrArray, params, endpoint) {\r\n            this.addFiles(blobDataOrArray, params, endpoint);\r\n        },\r\n\r\n        addInitialFiles: function(cannedFileList) {\r\n            var self = this;\r\n\r\n            qq.each(cannedFileList, function(index, cannedFile) {\r\n                self._addCannedFile(cannedFile);\r\n            });\r\n        },\r\n\r\n        addFiles: function(data, params, endpoint) {\r\n            this._maybeHandleIos8SafariWorkaround();\r\n\r\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\r\n\r\n                processBlob = qq.bind(function(blob) {\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: this._options.blobs.defaultName\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processBlobData = qq.bind(function(blobData) {\r\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processCanvas = qq.bind(function(canvas) {\r\n                    var blob = qq.canvasToBlob(canvas);\r\n\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: this._options.blobs.defaultName + \".png\"\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processCanvasData = qq.bind(function(canvasData) {\r\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\r\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\r\n\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: canvasData.name\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processFileOrInput = qq.bind(function(fileOrInput) {\r\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\r\n                        var files = Array.prototype.slice.call(fileOrInput.files),\r\n                            self = this;\r\n\r\n                        qq.each(files, function(idx, file) {\r\n                            self._handleNewFile(file, batchId, verifiedFiles);\r\n                        });\r\n                    }\r\n                    else {\r\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\r\n                    }\r\n                }, this),\r\n\r\n                normalizeData = function() {\r\n                    if (qq.isFileList(data)) {\r\n                        data = Array.prototype.slice.call(data);\r\n                    }\r\n                    data = [].concat(data);\r\n                },\r\n\r\n                self = this,\r\n                verifiedFiles = [];\r\n\r\n            this._currentBatchId = batchId;\r\n\r\n            if (data) {\r\n                normalizeData();\r\n\r\n                qq.each(data, function(idx, fileContainer) {\r\n                    if (qq.isFileOrInput(fileContainer)) {\r\n                        processFileOrInput(fileContainer);\r\n                    }\r\n                    else if (qq.isBlob(fileContainer)) {\r\n                        processBlob(fileContainer);\r\n                    }\r\n                    else if (qq.isObject(fileContainer)) {\r\n                        if (fileContainer.blob && fileContainer.name) {\r\n                            processBlobData(fileContainer);\r\n                        }\r\n                        else if (fileContainer.canvas && fileContainer.name) {\r\n                            processCanvasData(fileContainer);\r\n                        }\r\n                    }\r\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\r\n                        processCanvas(fileContainer);\r\n                    }\r\n                    else {\r\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\r\n                    }\r\n                });\r\n\r\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\r\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\r\n            }\r\n        },\r\n\r\n        cancel: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (uploadData && uploadData.status === qq.status.UPLOAD_FINALIZING) {\r\n                this.log(qq.format(\"Ignoring cancel for file ID {} ({}).  Finalizing upload.\", id, this.getName(id)), \"error\");\r\n            }\r\n            else {\r\n                this._handler.cancel(id);\r\n            }\r\n        },\r\n\r\n        cancelAll: function() {\r\n            var storedIdsCopy = [],\r\n                self = this;\r\n\r\n            qq.extend(storedIdsCopy, this._storedIds);\r\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\r\n                self.cancel(storedFileId);\r\n            });\r\n\r\n            this._handler.cancelAll();\r\n        },\r\n\r\n        clearStoredFiles: function() {\r\n            this._storedIds = [];\r\n        },\r\n\r\n        continueUpload: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\r\n                return false;\r\n            }\r\n\r\n            if (uploadData.status === qq.status.PAUSED) {\r\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\r\n                this._uploadFile(id);\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        deleteFile: function(id) {\r\n            return this._onSubmitDelete(id);\r\n        },\r\n\r\n        // TODO document?\r\n        doesExist: function(fileOrBlobId) {\r\n            return this._handler.isValid(fileOrBlobId);\r\n        },\r\n\r\n        // Generate a variable size thumbnail on an img or canvas,\r\n        // returning a promise that is fulfilled when the attempt completes.\r\n        // Thumbnail can either be based off of a URL for an image returned\r\n        // by the server in the upload response, or the associated `Blob`.\r\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\r\n            var promiseToReturn = new qq.Promise(),\r\n                fileOrUrl, options;\r\n\r\n            if (this._imageGenerator) {\r\n                fileOrUrl = this._thumbnailUrls[fileId];\r\n                options = {\r\n                    customResizeFunction: customResizeFunction,\r\n                    maxSize: maxSize > 0 ? maxSize : null,\r\n                    scale: maxSize > 0\r\n                };\r\n\r\n                // If client-side preview generation is possible\r\n                // and we are not specifically looking for the image URl returned by the server...\r\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\r\n                    fileOrUrl = this.getFile(fileId);\r\n                }\r\n\r\n                /* jshint eqeqeq:false,eqnull:true */\r\n                if (fileOrUrl == null) {\r\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\r\n                }\r\n                else {\r\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\r\n                        function success(modifiedContainer) {\r\n                            promiseToReturn.success(modifiedContainer);\r\n                        },\r\n\r\n                        function failure(container, reason) {\r\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\r\n            }\r\n\r\n            return promiseToReturn;\r\n        },\r\n\r\n        getButton: function(fileId) {\r\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\r\n        },\r\n\r\n        getEndpoint: function(fileId) {\r\n            return this._endpointStore.get(fileId);\r\n        },\r\n\r\n        getFile: function(fileOrBlobId) {\r\n            var file = this._handler.getFile(fileOrBlobId);\r\n            var uploadDataRecord;\r\n\r\n            if (!file) {\r\n                uploadDataRecord = this._uploadData.retrieve({id: fileOrBlobId});\r\n\r\n                if (uploadDataRecord) {\r\n                    file = uploadDataRecord.file;\r\n                }\r\n            }\r\n\r\n            return file || null;\r\n        },\r\n\r\n        getInProgress: function() {\r\n            return this._uploadData.retrieve({\r\n                status: [\r\n                    qq.status.UPLOADING,\r\n                    qq.status.UPLOAD_RETRYING,\r\n                    qq.status.QUEUED\r\n                ]\r\n            }).length;\r\n        },\r\n\r\n        getName: function(id) {\r\n            return this._uploadData.retrieve({id: id}).name;\r\n        },\r\n\r\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\r\n        getParentId: function(id) {\r\n            var uploadDataEntry = this.getUploads({id: id}),\r\n                parentId = null;\r\n\r\n            if (uploadDataEntry) {\r\n                if (uploadDataEntry.parentId !== undefined) {\r\n                    parentId = uploadDataEntry.parentId;\r\n                }\r\n            }\r\n\r\n            return parentId;\r\n        },\r\n\r\n        getResumableFilesData: function() {\r\n            return this._handler.getResumableFilesData();\r\n        },\r\n\r\n        getSize: function(id) {\r\n            return this._uploadData.retrieve({id: id}).size;\r\n        },\r\n\r\n        getNetUploads: function() {\r\n            return this._netUploaded;\r\n        },\r\n\r\n        getRemainingAllowedItems: function() {\r\n            var allowedItems = this._currentItemLimit;\r\n\r\n            if (allowedItems > 0) {\r\n                return allowedItems - this._netUploadedOrQueued;\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        getUploads: function(optionalFilter) {\r\n            return this._uploadData.retrieve(optionalFilter);\r\n        },\r\n\r\n        getUuid: function(id) {\r\n            return this._uploadData.retrieve({id: id}).uuid;\r\n        },\r\n\r\n        isResumable: function(id) {\r\n            return this._handler.hasResumeRecord(id);\r\n        },\r\n\r\n        log: function(str, level) {\r\n            if (this._options.debug && (!level || level === \"info\")) {\r\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\r\n            }\r\n            else if (level && level !== \"info\") {\r\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\r\n\r\n            }\r\n        },\r\n\r\n        pauseUpload: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\r\n                return false;\r\n            }\r\n\r\n            // Pause only really makes sense if the file is uploading or retrying\r\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\r\n                if (this._handler.pause(id)) {\r\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\r\n                    return true;\r\n                }\r\n                else {\r\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\r\n                }\r\n            }\r\n            else {\r\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        removeFileRef: function(id) {\r\n            this._handler.expunge(id);\r\n            this._uploadData.removeFileRef(id);\r\n        },\r\n\r\n        reset: function() {\r\n            this.log(\"Resetting uploader...\");\r\n\r\n            this._handler.reset();\r\n            this._storedIds = [];\r\n            this._autoRetries = [];\r\n            this._retryTimeouts = [];\r\n            this._preventRetries = [];\r\n            this._thumbnailUrls = [];\r\n\r\n            qq.each(this._buttons, function(idx, button) {\r\n                button.reset();\r\n            });\r\n\r\n            this._paramsStore.reset();\r\n            this._endpointStore.reset();\r\n            this._netUploadedOrQueued = 0;\r\n            this._netUploaded = 0;\r\n            this._uploadData.reset();\r\n            this._buttonIdsForFileIds = [];\r\n\r\n            this._pasteHandler && this._pasteHandler.reset();\r\n            this._options.session.refreshOnReset && this._refreshSessionData();\r\n\r\n            this._succeededSinceLastAllComplete = [];\r\n            this._failedSinceLastAllComplete = [];\r\n\r\n            this._totalProgress && this._totalProgress.reset();\r\n\r\n            this._customResumeDataStore.reset();\r\n        },\r\n\r\n        retry: function(id) {\r\n            return this._manualRetry(id);\r\n        },\r\n\r\n        scaleImage: function(id, specs) {\r\n            var self = this;\r\n\r\n            return qq.Scaler.prototype.scaleImage(id, specs, {\r\n                log: qq.bind(self.log, self),\r\n                getFile: qq.bind(self.getFile, self),\r\n                uploadData: self._uploadData\r\n            });\r\n        },\r\n\r\n        setCustomHeaders: function(headers, id) {\r\n            this._customHeadersStore.set(headers, id);\r\n        },\r\n\r\n        setCustomResumeData: function(id, data) {\r\n            this._customResumeDataStore.set(data, id);\r\n        },\r\n\r\n        setDeleteFileCustomHeaders: function(headers, id) {\r\n            this._deleteFileCustomHeadersStore.set(headers, id);\r\n        },\r\n\r\n        setDeleteFileEndpoint: function(endpoint, id) {\r\n            this._deleteFileEndpointStore.set(endpoint, id);\r\n        },\r\n\r\n        setDeleteFileParams: function(params, id) {\r\n            this._deleteFileParamsStore.set(params, id);\r\n        },\r\n\r\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\r\n        setEndpoint: function(endpoint, id) {\r\n            this._endpointStore.set(endpoint, id);\r\n        },\r\n\r\n        setForm: function(elementOrId) {\r\n            this._updateFormSupportAndParams(elementOrId);\r\n        },\r\n\r\n        setItemLimit: function(newItemLimit) {\r\n            this._currentItemLimit = newItemLimit;\r\n        },\r\n\r\n        setName: function(id, newName) {\r\n            this._uploadData.updateName(id, newName);\r\n        },\r\n\r\n        setParams: function(params, id) {\r\n            this._paramsStore.set(params, id);\r\n        },\r\n\r\n        setUuid: function(id, newUuid) {\r\n            return this._uploadData.uuidChanged(id, newUuid);\r\n        },\r\n\r\n        /**\r\n         * Expose the internal status of a file id to the public api for manual state changes\r\n         * @public\r\n         *\r\n         * @param {Number} id,\r\n         * @param {String} newStatus\r\n         *\r\n         * @todo Implement the remaining methods\r\n         */\r\n        setStatus: function(id, newStatus) {\r\n            var fileRecord = this.getUploads({id: id});\r\n            if (!fileRecord) {\r\n                throw new qq.Error(id + \" is not a valid file ID.\");\r\n            }\r\n\r\n            switch (newStatus) {\r\n                case qq.status.DELETED:\r\n                    this._onDeleteComplete(id, null, false);\r\n                    break;\r\n                case qq.status.DELETE_FAILED:\r\n                    this._onDeleteComplete(id, null, true);\r\n                    break;\r\n                default:\r\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\r\n                    this.log(errorMessage);\r\n                    throw new qq.Error(errorMessage);\r\n            }\r\n        },\r\n\r\n        uploadStoredFiles: function() {\r\n            if (this._storedIds.length === 0) {\r\n                this._itemError(\"noFilesError\");\r\n            }\r\n            else {\r\n                this._uploadStoredFiles();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Defines the private (internal) API for FineUploaderBasic mode.\r\n     */\r\n    qq.basePrivateApi = {\r\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\r\n        _addCannedFile: function(sessionData) {\r\n            var self = this;\r\n\r\n            return this._uploadData.addFile({\r\n                uuid: sessionData.uuid,\r\n                name: sessionData.name,\r\n                size: sessionData.size,\r\n                status: qq.status.UPLOAD_SUCCESSFUL,\r\n                onBeforeStatusChange: function(id) {\r\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\r\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\r\n\r\n                    if (sessionData.thumbnailUrl) {\r\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\r\n                    }\r\n\r\n                    self._netUploaded++;\r\n                    self._netUploadedOrQueued++;\r\n                }\r\n            });\r\n        },\r\n\r\n        _annotateWithButtonId: function(file, associatedInput) {\r\n            if (qq.isFile(file)) {\r\n                file.qqButtonId = this._getButtonId(associatedInput);\r\n            }\r\n        },\r\n\r\n        _batchError: function(message) {\r\n            this._options.callbacks.onError(null, null, message, undefined);\r\n        },\r\n\r\n        _createDeleteHandler: function() {\r\n            var self = this;\r\n\r\n            return new qq.DeleteFileAjaxRequester({\r\n                method: this._options.deleteFile.method.toUpperCase(),\r\n                maxConnections: this._options.maxConnections,\r\n                uuidParamName: this._options.request.uuidName,\r\n                customHeaders: this._deleteFileCustomHeadersStore,\r\n                paramsStore: this._deleteFileParamsStore,\r\n                endpointStore: this._deleteFileEndpointStore,\r\n                cors: this._options.cors,\r\n                log: qq.bind(self.log, self),\r\n                onDelete: function(id) {\r\n                    self._onDelete(id);\r\n                    self._options.callbacks.onDelete(id);\r\n                },\r\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\r\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\r\n                }\r\n\r\n            });\r\n        },\r\n\r\n        _createPasteHandler: function() {\r\n            var self = this;\r\n\r\n            return new qq.PasteSupport({\r\n                targetElement: this._options.paste.targetElement,\r\n                callbacks: {\r\n                    log: qq.bind(self.log, self),\r\n                    pasteReceived: function(blob) {\r\n                        self._handleCheckedCallback({\r\n                            name: \"onPasteReceived\",\r\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\r\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\r\n                            identifier: \"pasted image\"\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _createStore: function(initialValue, _readOnlyValues_) {\r\n            var store = {},\r\n                catchall = initialValue,\r\n                perIdReadOnlyValues = {},\r\n                readOnlyValues = _readOnlyValues_,\r\n                copy = function(orig) {\r\n                    if (qq.isObject(orig)) {\r\n                        return qq.extend({}, orig);\r\n                    }\r\n                    return orig;\r\n                },\r\n                getReadOnlyValues = function() {\r\n                    if (qq.isFunction(readOnlyValues)) {\r\n                        return readOnlyValues();\r\n                    }\r\n                    return readOnlyValues;\r\n                },\r\n                includeReadOnlyValues = function(id, existing) {\r\n                    if (readOnlyValues && qq.isObject(existing)) {\r\n                        qq.extend(existing, getReadOnlyValues());\r\n                    }\r\n\r\n                    if (perIdReadOnlyValues[id]) {\r\n                        qq.extend(existing, perIdReadOnlyValues[id]);\r\n                    }\r\n                };\r\n\r\n            return {\r\n                set: function(val, id) {\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    if (id == null) {\r\n                        store = {};\r\n                        catchall = copy(val);\r\n                    }\r\n                    else {\r\n                        store[id] = copy(val);\r\n                    }\r\n                },\r\n\r\n                get: function(id) {\r\n                    var values;\r\n\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    if (id != null && store[id]) {\r\n                        values = store[id];\r\n                    }\r\n                    else {\r\n                        values = copy(catchall);\r\n                    }\r\n\r\n                    includeReadOnlyValues(id, values);\r\n\r\n                    return copy(values);\r\n                },\r\n\r\n                addReadOnly: function(id, values) {\r\n                    // Only applicable to Object stores\r\n                    if (qq.isObject(store)) {\r\n                        // If null ID, apply readonly values to all files\r\n                        if (id === null) {\r\n                            if (qq.isFunction(values)) {\r\n                                readOnlyValues = values;\r\n                            }\r\n                            else {\r\n                                readOnlyValues = readOnlyValues || {};\r\n                                qq.extend(readOnlyValues, values);\r\n                            }\r\n                        }\r\n                        else {\r\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\r\n                            qq.extend(perIdReadOnlyValues[id], values);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                remove: function(fileId) {\r\n                    return delete store[fileId];\r\n                },\r\n\r\n                reset: function() {\r\n                    store = {};\r\n                    perIdReadOnlyValues = {};\r\n                    catchall = initialValue;\r\n                }\r\n            };\r\n        },\r\n\r\n        _createUploadDataTracker: function() {\r\n            var self = this;\r\n\r\n            return new qq.UploadData({\r\n                getName: function(id) {\r\n                    return self.getName(id);\r\n                },\r\n                getUuid: function(id) {\r\n                    return self.getUuid(id);\r\n                },\r\n                getSize: function(id) {\r\n                    return self.getSize(id);\r\n                },\r\n                onStatusChange: function(id, oldStatus, newStatus) {\r\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\r\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\r\n                    self._maybeAllComplete(id, newStatus);\r\n\r\n                    if (self._totalProgress) {\r\n                        setTimeout(function() {\r\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\r\n                        }, 0);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Generate a tracked upload button.\r\n         *\r\n         * @param spec Object containing a required `element` property\r\n         * along with optional `multiple`, `accept`, and `folders`.\r\n         * @returns {qq.UploadButton}\r\n         * @private\r\n         */\r\n        _createUploadButton: function(spec) {\r\n            var self = this,\r\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\r\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\r\n                button;\r\n\r\n            function allowMultiple() {\r\n                if (qq.supportedFeatures.ajaxUploading) {\r\n                    // Workaround for bug in iOS7+ (see #1039)\r\n                    if (self._options.workarounds.iosEmptyVideos &&\r\n                        qq.ios() &&\r\n                        !qq.ios6() &&\r\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    if (spec.multiple === undefined) {\r\n                        return self._options.multiple;\r\n                    }\r\n\r\n                    return spec.multiple;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            button = new qq.UploadButton({\r\n                acceptFiles: acceptFiles,\r\n                element: spec.element,\r\n                focusClass: this._options.classes.buttonFocus,\r\n                folders: spec.folders,\r\n                hoverClass: this._options.classes.buttonHover,\r\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\r\n                multiple: allowMultiple(),\r\n                name: this._options.request.inputName,\r\n                onChange: function(input) {\r\n                    self._onInputChange(input);\r\n                },\r\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\r\n            });\r\n\r\n            this._disposeSupport.addDisposer(function() {\r\n                button.dispose();\r\n            });\r\n\r\n            self._buttons.push(button);\r\n\r\n            return button;\r\n        },\r\n\r\n        _createUploadHandler: function(additionalOptions, namespace) {\r\n            var self = this,\r\n                lastOnProgress = {},\r\n                options = {\r\n                    debug: this._options.debug,\r\n                    maxConnections: this._options.maxConnections,\r\n                    cors: this._options.cors,\r\n                    paramsStore: this._paramsStore,\r\n                    endpointStore: this._endpointStore,\r\n                    chunking: this._options.chunking,\r\n                    resume: this._options.resume,\r\n                    blobs: this._options.blobs,\r\n                    log: qq.bind(self.log, self),\r\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\r\n                    onProgress: function(id, name, loaded, total) {\r\n                        if (loaded < 0 || total < 0) {\r\n                            return;\r\n                        }\r\n\r\n                        if (lastOnProgress[id]) {\r\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\r\n                                self._onProgress(id, name, loaded, total);\r\n                                self._options.callbacks.onProgress(id, name, loaded, total);\r\n                            }\r\n                        }\r\n                        else {\r\n                            self._onProgress(id, name, loaded, total);\r\n                            self._options.callbacks.onProgress(id, name, loaded, total);\r\n                        }\r\n\r\n                        lastOnProgress[id] = {loaded: loaded, total: total};\r\n\r\n                    },\r\n                    onComplete: function(id, name, result, xhr) {\r\n                        delete lastOnProgress[id];\r\n\r\n                        var status = self.getUploads({id: id}).status,\r\n                            retVal;\r\n\r\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\r\n                        // invoked by the browser multiple times for the same XHR instance with the same state\r\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\r\n                        // done this.\r\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\r\n                            return;\r\n                        }\r\n\r\n                        retVal = self._onComplete(id, name, result, xhr);\r\n\r\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\r\n                        // until the promise has been fulfilled.\r\n                        if (retVal instanceof  qq.Promise) {\r\n                            retVal.done(function() {\r\n                                self._options.callbacks.onComplete(id, name, result, xhr);\r\n                            });\r\n                        }\r\n                        else {\r\n                            self._options.callbacks.onComplete(id, name, result, xhr);\r\n                        }\r\n                    },\r\n                    onCancel: function(id, name, cancelFinalizationEffort) {\r\n                        var promise = new qq.Promise();\r\n\r\n                        self._handleCheckedCallback({\r\n                            name: \"onCancel\",\r\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\r\n                            onFailure: promise.failure,\r\n                            onSuccess: function() {\r\n                                cancelFinalizationEffort.then(function() {\r\n                                    self._onCancel(id, name);\r\n                                });\r\n\r\n                                promise.success();\r\n                            },\r\n                            identifier: id\r\n                        });\r\n\r\n                        return promise;\r\n                    },\r\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\r\n                    onUpload: function(id, name) {\r\n                        self._onUpload(id, name);\r\n                        var onUploadResult = self._options.callbacks.onUpload(id, name);\r\n\r\n                        if (qq.isGenericPromise(onUploadResult)) {\r\n                            self.log(qq.format(\"onUpload for {} returned a Promise - waiting for resolution.\", id));\r\n                            return onUploadResult;\r\n                        }\r\n\r\n                        return new qq.Promise().success();\r\n                    },\r\n                    onUploadChunk: function(id, name, chunkData) {\r\n                        self._onUploadChunk(id, chunkData);\r\n                        var onUploadChunkResult = self._options.callbacks.onUploadChunk(id, name, chunkData);\r\n\r\n                        if (qq.isGenericPromise(onUploadChunkResult)) {\r\n                            self.log(qq.format(\"onUploadChunk for {}.{} returned a Promise - waiting for resolution.\", id, chunkData.partIndex));\r\n                            return onUploadChunkResult;\r\n                        }\r\n\r\n                        return new qq.Promise().success();\r\n                    },\r\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\r\n                        self._onUploadChunkSuccess(id, chunkData);\r\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\r\n                    },\r\n                    onResume: function(id, name, chunkData, customResumeData) {\r\n                        return self._options.callbacks.onResume(id, name, chunkData, customResumeData);\r\n                    },\r\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\r\n                        return self._onAutoRetry.apply(self, arguments);\r\n                    },\r\n                    onUuidChanged: function(id, newUuid) {\r\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\r\n                        self.setUuid(id, newUuid);\r\n                    },\r\n                    getName: qq.bind(self.getName, self),\r\n                    getUuid: qq.bind(self.getUuid, self),\r\n                    getSize: qq.bind(self.getSize, self),\r\n                    setSize: qq.bind(self._setSize, self),\r\n                    getDataByUuid: function(uuid) {\r\n                        return self.getUploads({uuid: uuid});\r\n                    },\r\n                    isQueued: function(id) {\r\n                        var status = self.getUploads({id: id}).status;\r\n                        return status === qq.status.QUEUED ||\r\n                            status === qq.status.SUBMITTED ||\r\n                            status === qq.status.UPLOAD_RETRYING ||\r\n                            status === qq.status.PAUSED;\r\n                    },\r\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\r\n                    getIdsInBatch: self._uploadData.getIdsInBatch,\r\n                    isInProgress: function(id) {\r\n                        return self.getUploads({id: id}).status === qq.status.UPLOADING;\r\n                    },\r\n                    getCustomResumeData: qq.bind(self._getCustomResumeData, self),\r\n                    setStatus: function(id, status) {\r\n                        self._uploadData.setStatus(id, status);\r\n                    }\r\n                };\r\n\r\n            qq.each(this._options.request, function(prop, val) {\r\n                options[prop] = val;\r\n            });\r\n\r\n            options.customHeaders = this._customHeadersStore;\r\n\r\n            if (additionalOptions) {\r\n                qq.each(additionalOptions, function(key, val) {\r\n                    options[key] = val;\r\n                });\r\n            }\r\n\r\n            return new qq.UploadHandlerController(options, namespace);\r\n        },\r\n\r\n        _fileOrBlobRejected: function(id) {\r\n            this._netUploadedOrQueued--;\r\n            this._uploadData.setStatus(id, qq.status.REJECTED);\r\n        },\r\n\r\n        _formatSize: function(bytes) {\r\n            if (bytes === 0) {\r\n                return bytes + this._options.text.sizeSymbols[0];\r\n            }\r\n            var i = -1;\r\n            do {\r\n                bytes = bytes / 1000;\r\n                i++;\r\n            } while (bytes > 999);\r\n\r\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\r\n        },\r\n\r\n        // Creates an internal object that tracks various properties of each extra button,\r\n        // and then actually creates the extra button.\r\n        _generateExtraButtonSpecs: function() {\r\n            var self = this;\r\n\r\n            this._extraButtonSpecs = {};\r\n\r\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\r\n                var multiple = extraButtonOptionEntry.multiple,\r\n                    validation = qq.extend({}, self._options.validation, true),\r\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\r\n\r\n                if (multiple === undefined) {\r\n                    multiple = self._options.multiple;\r\n                }\r\n\r\n                if (extraButtonSpec.validation) {\r\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\r\n                }\r\n\r\n                qq.extend(extraButtonSpec, {\r\n                    multiple: multiple,\r\n                    validation: validation\r\n                }, true);\r\n\r\n                self._initExtraButton(extraButtonSpec);\r\n            });\r\n        },\r\n\r\n        _getButton: function(buttonId) {\r\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\r\n\r\n            if (extraButtonsSpec) {\r\n                return extraButtonsSpec.element;\r\n            }\r\n            else if (buttonId === this._defaultButtonId) {\r\n                return this._options.button;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the internally used tracking ID for a button.\r\n         *\r\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\r\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\r\n         * @private\r\n         */\r\n        _getButtonId: function(buttonOrFileInputOrFile) {\r\n            var inputs, fileInput,\r\n                fileBlobOrInput = buttonOrFileInputOrFile;\r\n\r\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\r\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\r\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\r\n            }\r\n\r\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\r\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\r\n                if (qq.isFile(fileBlobOrInput)) {\r\n                    return fileBlobOrInput.qqButtonId;\r\n                }\r\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\r\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\r\n\r\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\r\n                }\r\n\r\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\r\n\r\n                qq.each(inputs, function(idx, input) {\r\n                    if (input.getAttribute(\"type\") === \"file\") {\r\n                        fileInput = input;\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                if (fileInput) {\r\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\r\n                }\r\n            }\r\n        },\r\n\r\n        _getCustomResumeData: function(fileId) {\r\n            return this._customResumeDataStore.get(fileId);\r\n        },\r\n\r\n        _getNotFinished: function() {\r\n            return this._uploadData.retrieve({\r\n                status: [\r\n                    qq.status.UPLOADING,\r\n                    qq.status.UPLOAD_RETRYING,\r\n                    qq.status.QUEUED,\r\n                    qq.status.SUBMITTING,\r\n                    qq.status.SUBMITTED,\r\n                    qq.status.PAUSED\r\n                ]\r\n            }).length;\r\n        },\r\n\r\n        // Get the validation options for this button.  Could be the default validation option\r\n        // or a specific one assigned to this particular button.\r\n        _getValidationBase: function(buttonId) {\r\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\r\n\r\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\r\n        },\r\n\r\n        _getValidationDescriptor: function(fileWrapper) {\r\n            if (fileWrapper.file instanceof qq.BlobProxy) {\r\n                return {\r\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\r\n                    size: fileWrapper.file.referenceBlob.size\r\n                };\r\n            }\r\n\r\n            return {\r\n                name: this.getUploads({id: fileWrapper.id}).name,\r\n                size: this.getUploads({id: fileWrapper.id}).size\r\n            };\r\n        },\r\n\r\n        _getValidationDescriptors: function(fileWrappers) {\r\n            var self = this,\r\n                fileDescriptors = [];\r\n\r\n            qq.each(fileWrappers, function(idx, fileWrapper) {\r\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\r\n            });\r\n\r\n            return fileDescriptors;\r\n        },\r\n\r\n        // Allows camera access on either the default or an extra button for iOS devices.\r\n        _handleCameraAccess: function() {\r\n            if (this._options.camera.ios && qq.ios()) {\r\n                var acceptIosCamera = \"image/*;capture=camera\",\r\n                    button = this._options.camera.button,\r\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\r\n                    optionRoot = this._options;\r\n\r\n                // If we are not targeting the default button, it is an \"extra\" button\r\n                if (buttonId && buttonId !== this._defaultButtonId) {\r\n                    optionRoot = this._extraButtonSpecs[buttonId];\r\n                }\r\n\r\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\r\n                optionRoot.multiple = false;\r\n\r\n                // update the options\r\n                if (optionRoot.validation.acceptFiles === null) {\r\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\r\n                }\r\n                else {\r\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\r\n                }\r\n\r\n                // update the already-created button\r\n                qq.each(this._buttons, function(idx, button) {\r\n                    if (button.getButtonId() === buttonId) {\r\n                        button.setMultiple(optionRoot.multiple);\r\n                        button.setAcceptFiles(optionRoot.acceptFiles);\r\n\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        _handleCheckedCallback: function(details) {\r\n            var self = this,\r\n                callbackRetVal = details.callback();\r\n\r\n            if (qq.isGenericPromise(callbackRetVal)) {\r\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\r\n                return callbackRetVal.then(\r\n                    function(successParam) {\r\n                        self.log(details.name + \" promise success for \" + details.identifier);\r\n                        details.onSuccess(successParam);\r\n                    },\r\n                    function() {\r\n                        if (details.onFailure) {\r\n                            self.log(details.name + \" promise failure for \" + details.identifier);\r\n                            details.onFailure();\r\n                        }\r\n                        else {\r\n                            self.log(details.name + \" promise failure for \" + details.identifier);\r\n                        }\r\n                    });\r\n            }\r\n\r\n            if (callbackRetVal !== false) {\r\n                details.onSuccess(callbackRetVal);\r\n            }\r\n            else {\r\n                if (details.onFailure) {\r\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\r\n                    details.onFailure();\r\n                }\r\n                else {\r\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\r\n                }\r\n            }\r\n\r\n            return callbackRetVal;\r\n        },\r\n\r\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\r\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\r\n            var self = this,\r\n                uuid = qq.getUniqueId(),\r\n                size = -1,\r\n                name = qq.getFilename(file),\r\n                actualFile = file.blob || file,\r\n                handler = this._customNewFileHandler ?\r\n                    this._customNewFileHandler :\r\n                    qq.bind(self._handleNewFileGeneric, self);\r\n\r\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\r\n                size = actualFile.size;\r\n            }\r\n\r\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\r\n                uploadData: self._uploadData,\r\n                paramsStore: self._paramsStore,\r\n                addFileToHandler: function(id, file) {\r\n                    self._handler.add(id, file);\r\n                    self._netUploadedOrQueued++;\r\n                    self._trackButton(id);\r\n                }\r\n            });\r\n        },\r\n\r\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\r\n            var id = this._uploadData.addFile({\r\n                uuid: uuid,\r\n                name: name,\r\n                size: size,\r\n                batchId: batchId,\r\n                file: file\r\n            });\r\n\r\n            this._handler.add(id, file);\r\n\r\n            this._trackButton(id);\r\n\r\n            this._netUploadedOrQueued++;\r\n\r\n            fileList.push({id: id, file: file});\r\n        },\r\n\r\n        _handlePasteSuccess: function(blob, extSuppliedName) {\r\n            var extension = blob.type.split(\"/\")[1],\r\n                name = extSuppliedName;\r\n\r\n            /*jshint eqeqeq: true, eqnull: true*/\r\n            if (name == null) {\r\n                name = this._options.paste.defaultName;\r\n            }\r\n\r\n            name += \".\" + extension;\r\n\r\n            this.addFiles({\r\n                name: name,\r\n                blob: blob\r\n            });\r\n        },\r\n\r\n        _handleDeleteSuccess: function(id) {\r\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\r\n                var name = this.getName(id);\r\n\r\n                this._netUploadedOrQueued--;\r\n                this._netUploaded--;\r\n                this._handler.expunge(id);\r\n                this._uploadData.setStatus(id, qq.status.DELETED);\r\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\r\n            }\r\n        },\r\n\r\n        _handleDeleteFailed: function(id, xhrOrXdr) {\r\n            var name = this.getName(id);\r\n\r\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\r\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\r\n\r\n            // Check first if xhrOrXdr is actually passed or valid\r\n            // For error reporting, we only have access to the response status if this is not\r\n            // an `XDomainRequest`.\r\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\r\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\r\n            }\r\n            else {\r\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\r\n            }\r\n        },\r\n\r\n        // Creates an extra button element\r\n        _initExtraButton: function(spec) {\r\n            var button = this._createUploadButton({\r\n                accept: spec.validation.acceptFiles,\r\n                allowedExtensions: spec.validation.allowedExtensions,\r\n                element: spec.element,\r\n                folders: spec.folders,\r\n                multiple: spec.multiple,\r\n                title: spec.fileInputTitle\r\n            });\r\n\r\n            this._extraButtonSpecs[button.getButtonId()] = spec;\r\n        },\r\n\r\n        _initFormSupportAndParams: function() {\r\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\r\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\r\n            );\r\n\r\n            if (this._formSupport && this._formSupport.attachedToForm) {\r\n                this._paramsStore = this._createStore(\r\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\r\n                );\r\n\r\n                this._options.autoUpload = this._formSupport.newAutoUpload;\r\n                if (this._formSupport.newEndpoint) {\r\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\r\n                }\r\n            }\r\n            else {\r\n                this._paramsStore = this._createStore(this._options.request.params);\r\n            }\r\n        },\r\n\r\n        _isDeletePossible: function() {\r\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\r\n                return false;\r\n            }\r\n\r\n            if (this._options.cors.expected) {\r\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\r\n                    return true;\r\n                }\r\n\r\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        _isAllowedExtension: function(allowed, fileName) {\r\n            var valid = false;\r\n\r\n            if (!allowed.length) {\r\n                return true;\r\n            }\r\n\r\n            qq.each(allowed, function(idx, allowedExt) {\r\n                /**\r\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\r\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\r\n                 */\r\n                if (qq.isString(allowedExt)) {\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\r\n\r\n                    if (fileName.match(extRegex) != null) {\r\n                        valid = true;\r\n                        return false;\r\n                    }\r\n                }\r\n            });\r\n\r\n            return valid;\r\n        },\r\n\r\n        /**\r\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\r\n         *\r\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\r\n         * @param maybeNameOrNames names of the items that have failed, if applicable\r\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\r\n         * @private\r\n         */\r\n        _itemError: function(code, maybeNameOrNames, item) {\r\n            var message = this._options.messages[code],\r\n                allowedExtensions = [],\r\n                names = [].concat(maybeNameOrNames),\r\n                name = names[0],\r\n                buttonId = this._getButtonId(item),\r\n                validationBase = this._getValidationBase(buttonId),\r\n                extensionsForMessage, placeholderMatch;\r\n\r\n            function r(name, replacement) { message = message.replace(name, replacement); }\r\n\r\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\r\n                /**\r\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\r\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\r\n                 */\r\n                if (qq.isString(allowedExtension)) {\r\n                    allowedExtensions.push(allowedExtension);\r\n                }\r\n            });\r\n\r\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\r\n\r\n            r(\"{file}\", this._options.formatFileName(name));\r\n            r(\"{extensions}\", extensionsForMessage);\r\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\r\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\r\n\r\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\r\n            if (placeholderMatch !== null) {\r\n                qq.each(placeholderMatch, function(idx, placeholder) {\r\n                    r(placeholder, names[idx]);\r\n                });\r\n            }\r\n\r\n            this._options.callbacks.onError(null, name, message, undefined);\r\n\r\n            return message;\r\n        },\r\n\r\n        /**\r\n         * Conditionally orders a manual retry of a failed upload.\r\n         *\r\n         * @param id File ID of the failed upload\r\n         * @param callback Optional callback to invoke if a retry is prudent.\r\n         * In lieu of asking the upload handler to retry.\r\n         * @returns {boolean} true if a manual retry will occur\r\n         * @private\r\n         */\r\n        _manualRetry: function(id, callback) {\r\n            if (this._onBeforeManualRetry(id)) {\r\n                this._netUploadedOrQueued++;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\r\n\r\n                if (callback) {\r\n                    callback(id);\r\n                }\r\n                else {\r\n                    this._handler.retry(id);\r\n                }\r\n\r\n                return true;\r\n            }\r\n        },\r\n\r\n        _maybeAllComplete: function(id, status) {\r\n            var self = this,\r\n                notFinished = this._getNotFinished();\r\n\r\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\r\n                this._succeededSinceLastAllComplete.push(id);\r\n            }\r\n            else if (status === qq.status.UPLOAD_FAILED) {\r\n                this._failedSinceLastAllComplete.push(id);\r\n            }\r\n\r\n            if (notFinished === 0 &&\r\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\r\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\r\n                setTimeout(function() {\r\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _maybeHandleIos8SafariWorkaround: function() {\r\n            var self = this;\r\n\r\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\r\n                setTimeout(function() {\r\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\r\n                }, 0);\r\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\r\n            }\r\n        },\r\n\r\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\r\n            // Assuming no one will actually set the response code to something other than 200\r\n            // and still set 'success' to true...\r\n            if (!response.success) {\r\n                if (xhr && xhr.status !== 200 && !response.error) {\r\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\r\n                }\r\n                else {\r\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\r\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\r\n                }\r\n            }\r\n        },\r\n\r\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\r\n            var self = this;\r\n\r\n            if (items.length > index) {\r\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\r\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\r\n                    setTimeout(function() {\r\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\r\n                            buttonId = self._getButtonId(items[index].file),\r\n                            button = self._getButton(buttonId);\r\n\r\n                        self._handleCheckedCallback({\r\n                            name: \"onValidate\",\r\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\r\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\r\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\r\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\r\n                        });\r\n                    }, 0);\r\n                }\r\n                else if (!validItem) {\r\n                    for (; index < items.length; index++) {\r\n                        self._fileOrBlobRejected(items[index].id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        _onAllComplete: function(successful, failed) {\r\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\r\n\r\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\r\n\r\n            this._succeededSinceLastAllComplete = [];\r\n            this._failedSinceLastAllComplete = [];\r\n        },\r\n\r\n        /**\r\n         * Attempt to automatically retry a failed upload.\r\n         *\r\n         * @param id The file ID of the failed upload\r\n         * @param name The name of the file associated with the failed upload\r\n         * @param responseJSON Response from the server, parsed into a javascript object\r\n         * @param xhr Ajax transport used to send the failed request\r\n         * @param callback Optional callback to be invoked if a retry is prudent.\r\n         * Invoked in lieu of asking the upload handler to retry.\r\n         * @returns {boolean} true if an auto-retry will occur\r\n         * @private\r\n         */\r\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\r\n            var self = this;\r\n\r\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\r\n\r\n            if (self._shouldAutoRetry(id)) {\r\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\r\n\r\n                self._maybeParseAndSendUploadError.apply(self, arguments);\r\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\r\n                self._onBeforeAutoRetry(id, name);\r\n\r\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\r\n                self._retryTimeouts[id] = setTimeout(function() {\r\n                    self.log(\"Starting retry for \" + name + \"...\");\r\n\r\n                    if (callback) {\r\n                        callback(id);\r\n                    }\r\n                    else {\r\n                        self._handler.retry(id);\r\n                    }\r\n                }, retryWaitPeriod);\r\n\r\n                return true;\r\n            }\r\n        },\r\n\r\n        _onBeforeAutoRetry: function(id, name) {\r\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\r\n        },\r\n\r\n        //return false if we should not attempt the requested retry\r\n        _onBeforeManualRetry: function(id) {\r\n            var itemLimit = this._currentItemLimit,\r\n                fileName;\r\n\r\n            if (this._preventRetries[id]) {\r\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\r\n                return false;\r\n            }\r\n            else if (this._handler.isValid(id)) {\r\n                fileName = this.getName(id);\r\n\r\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\r\n                    return false;\r\n                }\r\n\r\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\r\n                    this._itemError(\"retryFailTooManyItems\");\r\n                    return false;\r\n                }\r\n\r\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onCancel: function(id, name) {\r\n            this._netUploadedOrQueued--;\r\n\r\n            clearTimeout(this._retryTimeouts[id]);\r\n\r\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\r\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\r\n                this._storedIds.splice(storedItemIndex, 1);\r\n            }\r\n\r\n            this._uploadData.setStatus(id, qq.status.CANCELED);\r\n        },\r\n\r\n        _onComplete: function(id, name, result, xhr) {\r\n            if (!result.success) {\r\n                this._netUploadedOrQueued--;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\r\n\r\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\r\n                    this._preventRetries[id] = true;\r\n                }\r\n            }\r\n            else {\r\n                if (result.thumbnailUrl) {\r\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\r\n                }\r\n\r\n                this._netUploaded++;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\r\n            }\r\n\r\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\r\n\r\n            return result.success ? true : false;\r\n        },\r\n\r\n        _onDelete: function(id) {\r\n            this._uploadData.setStatus(id, qq.status.DELETING);\r\n        },\r\n\r\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n            var name = this.getName(id);\r\n\r\n            if (isError) {\r\n                this._handleDeleteFailed(id, xhrOrXdr);\r\n            }\r\n            else {\r\n                this._handleDeleteSuccess(id);\r\n            }\r\n        },\r\n\r\n        _onInputChange: function(input) {\r\n            var fileIndex;\r\n\r\n            if (qq.supportedFeatures.ajaxUploading) {\r\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\r\n                    this._annotateWithButtonId(input.files[fileIndex], input);\r\n                }\r\n\r\n                this.addFiles(input.files);\r\n            }\r\n            // Android 2.3.x will fire `onchange` even if no file has been selected\r\n            else if (input.value.length > 0) {\r\n                this.addFiles(input);\r\n            }\r\n\r\n            qq.each(this._buttons, function(idx, button) {\r\n                button.reset();\r\n            });\r\n        },\r\n\r\n        _onProgress: function(id, name, loaded, total) {\r\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\r\n        },\r\n\r\n        _onSubmit: function(id, name) {\r\n            //nothing to do yet in core uploader\r\n        },\r\n\r\n        _onSubmitCallbackSuccess: function(id, name) {\r\n            this._onSubmit.apply(this, arguments);\r\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\r\n            this._onSubmitted.apply(this, arguments);\r\n\r\n            if (this._options.autoUpload) {\r\n                this._options.callbacks.onSubmitted.apply(this, arguments);\r\n                this._uploadFile(id);\r\n            }\r\n            else {\r\n                this._storeForLater(id);\r\n                this._options.callbacks.onSubmitted.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\r\n            var uuid = this.getUuid(id),\r\n                adjustedOnSuccessCallback;\r\n\r\n            if (onSuccessCallback) {\r\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\r\n            }\r\n\r\n            if (this._isDeletePossible()) {\r\n                this._handleCheckedCallback({\r\n                    name: \"onSubmitDelete\",\r\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\r\n                    onSuccess: adjustedOnSuccessCallback ||\r\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\r\n                    identifier: id\r\n                });\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\r\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onSubmitted: function(id) {\r\n            //nothing to do in the base uploader\r\n        },\r\n\r\n        _onTotalProgress: function(loaded, total) {\r\n            this._options.callbacks.onTotalProgress(loaded, total);\r\n        },\r\n\r\n        _onUploadPrep: function(id) {\r\n            // nothing to do in the core uploader for now\r\n        },\r\n\r\n        _onUpload: function(id, name) {\r\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\r\n        },\r\n\r\n        _onUploadChunk: function(id, chunkData) {\r\n            //nothing to do in the base uploader\r\n        },\r\n\r\n        _onUploadChunkSuccess: function(id, chunkData) {\r\n            if (!this._preventRetries[id] && this._options.retry.enableAuto) {\r\n                this._autoRetries[id] = 0;\r\n            }\r\n        },\r\n\r\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\r\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\r\n            if (newStatus === qq.status.PAUSED) {\r\n                clearTimeout(this._retryTimeouts[id]);\r\n            }\r\n        },\r\n\r\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\r\n            var self = this;\r\n\r\n            qq.each(fileWrappers, function(idx, fileWrapper) {\r\n                self._fileOrBlobRejected(fileWrapper.id);\r\n            });\r\n        },\r\n\r\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\r\n            var errorMessage,\r\n                itemLimit = this._currentItemLimit,\r\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\r\n\r\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\r\n                if (items.length > 0) {\r\n                    this._handleCheckedCallback({\r\n                        name: \"onValidate\",\r\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\r\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\r\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\r\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\r\n                    });\r\n                }\r\n                else {\r\n                    this._itemError(\"noFilesError\");\r\n                }\r\n            }\r\n            else {\r\n                this._onValidateBatchCallbackFailure(items);\r\n                errorMessage = this._options.messages.tooManyItemsError\r\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\r\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\r\n                this._batchError(errorMessage);\r\n            }\r\n        },\r\n\r\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\r\n            var nextIndex = index + 1;\r\n\r\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\r\n\r\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\r\n        },\r\n\r\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\r\n            var self = this,\r\n                nextIndex = index + 1,\r\n                validationDescriptor = this._getValidationDescriptor(items[index]);\r\n\r\n            this._validateFileOrBlobData(items[index], validationDescriptor)\r\n                .then(\r\n                function() {\r\n                    self._upload(items[index].id, params, endpoint);\r\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\r\n                },\r\n                function() {\r\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\r\n                }\r\n            );\r\n        },\r\n\r\n        _prepareItemsForUpload: function(items, params, endpoint) {\r\n            if (items.length === 0) {\r\n                this._itemError(\"noFilesError\");\r\n                return;\r\n            }\r\n\r\n            var validationDescriptors = this._getValidationDescriptors(items),\r\n                buttonId = this._getButtonId(items[0].file),\r\n                button = this._getButton(buttonId);\r\n\r\n            this._handleCheckedCallback({\r\n                name: \"onValidateBatch\",\r\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\r\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\r\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\r\n                identifier: \"batch validation\"\r\n            });\r\n        },\r\n\r\n        _preventLeaveInProgress: function() {\r\n            var self = this;\r\n\r\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\r\n                if (self.getInProgress()) {\r\n                    e = e || window.event;\r\n                    // for ie, ff\r\n                    e.returnValue = self._options.messages.onLeave;\r\n                    // for webkit\r\n                    return self._options.messages.onLeave;\r\n                }\r\n            });\r\n        },\r\n\r\n        // Attempts to refresh session data only if the `qq.Session` module exists\r\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\r\n        // callback will be invoked once the refresh is complete.\r\n        _refreshSessionData: function() {\r\n            var self = this,\r\n                options = this._options.session;\r\n\r\n            /* jshint eqnull:true */\r\n            if (qq.Session && this._options.session.endpoint != null) {\r\n                if (!this._session) {\r\n                    qq.extend(options, {cors: this._options.cors});\r\n\r\n                    options.log = qq.bind(this.log, this);\r\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\r\n\r\n                    this._session = new qq.Session(options);\r\n                }\r\n\r\n                setTimeout(function() {\r\n                    self._session.refresh().then(function(response, xhrOrXdr) {\r\n                        self._sessionRequestComplete();\r\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\r\n\r\n                    }, function(response, xhrOrXdr) {\r\n\r\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\r\n                    });\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _sessionRequestComplete: function() {},\r\n\r\n        _setSize: function(id, newSize) {\r\n            this._uploadData.updateSize(id, newSize);\r\n            this._totalProgress && this._totalProgress.onNewSize(id);\r\n        },\r\n\r\n        _shouldAutoRetry: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            /*jshint laxbreak: true */\r\n            if (!this._preventRetries[id]\r\n                && this._options.retry.enableAuto\r\n                && uploadData.status !== qq.status.PAUSED) {\r\n\r\n                if (this._autoRetries[id] === undefined) {\r\n                    this._autoRetries[id] = 0;\r\n                }\r\n\r\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\r\n                    this._autoRetries[id] += 1;\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        _storeForLater: function(id) {\r\n            this._storedIds.push(id);\r\n        },\r\n\r\n        // Maps a file with the button that was used to select it.\r\n        _trackButton: function(id) {\r\n            var buttonId;\r\n\r\n            if (qq.supportedFeatures.ajaxUploading) {\r\n                buttonId = this._handler.getFile(id).qqButtonId;\r\n            }\r\n            else {\r\n                buttonId = this._getButtonId(this._handler.getInput(id));\r\n            }\r\n\r\n            if (buttonId) {\r\n                this._buttonIdsForFileIds[id] = buttonId;\r\n            }\r\n        },\r\n\r\n        _updateFormSupportAndParams: function(formElementOrId) {\r\n            this._options.form.element = formElementOrId;\r\n\r\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\r\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\r\n                );\r\n\r\n            if (this._formSupport && this._formSupport.attachedToForm) {\r\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\r\n\r\n                this._options.autoUpload = this._formSupport.newAutoUpload;\r\n                if (this._formSupport.newEndpoint) {\r\n                    this.setEndpoint(this._formSupport.newEndpoint);\r\n                }\r\n            }\r\n        },\r\n\r\n        _upload: function(id, params, endpoint) {\r\n            var name = this.getName(id);\r\n\r\n            if (params) {\r\n                this.setParams(params, id);\r\n            }\r\n\r\n            if (endpoint) {\r\n                this.setEndpoint(endpoint, id);\r\n            }\r\n\r\n            this._handleCheckedCallback({\r\n                name: \"onSubmit\",\r\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\r\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\r\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\r\n                identifier: id\r\n            });\r\n        },\r\n\r\n        _uploadFile: function(id) {\r\n            if (!this._handler.upload(id)) {\r\n                this._uploadData.setStatus(id, qq.status.QUEUED);\r\n            }\r\n        },\r\n\r\n        _uploadStoredFiles: function() {\r\n            var idToUpload, stillSubmitting,\r\n                self = this;\r\n\r\n            while (this._storedIds.length) {\r\n                idToUpload = this._storedIds.shift();\r\n                this._uploadFile(idToUpload);\r\n            }\r\n\r\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\r\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\r\n            if (stillSubmitting) {\r\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\r\n                setTimeout(function() {\r\n                    self._uploadStoredFiles();\r\n                }, 1000);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Performs some internal validation checks on an item, defined in the `validation` option.\r\n         *\r\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\r\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\r\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\r\n         * @private\r\n         */\r\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\r\n            var self = this,\r\n                file = (function() {\r\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\r\n                        return fileWrapper.file.referenceBlob;\r\n                    }\r\n                    return fileWrapper.file;\r\n                }()),\r\n                name = validationDescriptor.name,\r\n                size = validationDescriptor.size,\r\n                buttonId = this._getButtonId(fileWrapper.file),\r\n                validationBase = this._getValidationBase(buttonId),\r\n                validityChecker = new qq.Promise();\r\n\r\n            validityChecker.then(\r\n                function() {},\r\n                function() {\r\n                    self._fileOrBlobRejected(fileWrapper.id, name);\r\n                });\r\n\r\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\r\n                this._itemError(\"typeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (!this._options.validation.allowEmpty && size === 0) {\r\n                this._itemError(\"emptyError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\r\n                this._itemError(\"sizeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (size > 0 && size < validationBase.minSizeLimit) {\r\n                this._itemError(\"minSizeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\r\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\r\n                    validityChecker.success,\r\n                    function(errorCode) {\r\n                        self._itemError(errorCode + \"ImageError\", name, file);\r\n                        validityChecker.failure();\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                validityChecker.success();\r\n            }\r\n\r\n            return validityChecker;\r\n        },\r\n\r\n        _wrapCallbacks: function() {\r\n            var self, safeCallback, prop;\r\n\r\n            self = this;\r\n\r\n            safeCallback = function(name, callback, args) {\r\n                var errorMsg;\r\n\r\n                try {\r\n                    return callback.apply(self, args);\r\n                }\r\n                catch (exception) {\r\n                    errorMsg = exception.message || exception.toString();\r\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\r\n                }\r\n            };\r\n\r\n            /* jshint forin: false, loopfunc: true */\r\n            for (prop in this._options.callbacks) {\r\n                (function() {\r\n                    var callbackName, callbackFunc;\r\n                    callbackName = prop;\r\n                    callbackFunc = self._options.callbacks[callbackName];\r\n                    self._options.callbacks[callbackName] = function() {\r\n                        return safeCallback(callbackName, callbackFunc, arguments);\r\n                    };\r\n                }());\r\n            }\r\n        }\r\n    };\r\n}());\r\n","/*globals qq*/\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.FineUploaderBasic = function(o) {\r\n        var self = this;\r\n\r\n        // These options define FineUploaderBasic mode.\r\n        this._options = {\r\n            debug: false,\r\n            button: null,\r\n            multiple: true,\r\n            maxConnections: 3,\r\n            disableCancelForFormUploads: false,\r\n            autoUpload: true,\r\n            warnBeforeUnload: true,\r\n\r\n            request: {\r\n                customHeaders: {},\r\n                endpoint: \"/server/upload\",\r\n                filenameParam: \"qqfilename\",\r\n                forceMultipart: true,\r\n                inputName: \"qqfile\",\r\n                method: \"POST\",\r\n                omitDefaultParams: false,\r\n                params: {},\r\n                paramsInBody: true,\r\n                requireSuccessJson: true,\r\n                totalFileSizeName: \"qqtotalfilesize\",\r\n                uuidName: \"qquuid\"\r\n            },\r\n\r\n            validation: {\r\n                allowedExtensions: [],\r\n                sizeLimit: 0,\r\n                minSizeLimit: 0,\r\n                itemLimit: 0,\r\n                stopOnFirstInvalidFile: true,\r\n                acceptFiles: null,\r\n                image: {\r\n                    maxHeight: 0,\r\n                    maxWidth: 0,\r\n                    minHeight: 0,\r\n                    minWidth: 0\r\n                },\r\n                allowEmpty: false\r\n            },\r\n\r\n            callbacks: {\r\n                onSubmit: function(id, name) {},\r\n                onSubmitted: function(id, name) {},\r\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\r\n                onAllComplete: function(successful, failed) {},\r\n                onCancel: function(id, name) {},\r\n                onUpload: function(id, name) {},\r\n                onUploadChunk: function(id, name, chunkData) {},\r\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\r\n                onResume: function(id, fileName, chunkData, customResumeData) {},\r\n                onProgress: function(id, name, loaded, total) {},\r\n                onTotalProgress: function(loaded, total) {},\r\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\r\n                onAutoRetry: function(id, name, attemptNumber) {},\r\n                onManualRetry: function(id, name) {},\r\n                onValidateBatch: function(fileOrBlobData) {},\r\n                onValidate: function(fileOrBlobData) {},\r\n                onSubmitDelete: function(id) {},\r\n                onDelete: function(id) {},\r\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\r\n                onPasteReceived: function(blob) {},\r\n                onStatusChange: function(id, oldStatus, newStatus) {},\r\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\r\n            },\r\n\r\n            messages: {\r\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\r\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\r\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\r\n                emptyError: \"{file} is empty, please select files again without it.\",\r\n                noFilesError: \"No files to upload.\",\r\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\r\n                maxHeightImageError: \"Image is too tall.\",\r\n                maxWidthImageError: \"Image is too wide.\",\r\n                minHeightImageError: \"Image is not tall enough.\",\r\n                minWidthImageError: \"Image is not wide enough.\",\r\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\r\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\r\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\r\n            },\r\n\r\n            retry: {\r\n                enableAuto: false,\r\n                maxAutoAttempts: 3,\r\n                autoAttemptDelay: 5,\r\n                preventRetryResponseProperty: \"preventRetry\"\r\n            },\r\n\r\n            classes: {\r\n                buttonHover: \"qq-upload-button-hover\",\r\n                buttonFocus: \"qq-upload-button-focus\"\r\n            },\r\n\r\n            chunking: {\r\n                enabled: false,\r\n                concurrent: {\r\n                    enabled: false\r\n                },\r\n                mandatory: false,\r\n                paramNames: {\r\n                    partIndex: \"qqpartindex\",\r\n                    partByteOffset: \"qqpartbyteoffset\",\r\n                    chunkSize: \"qqchunksize\",\r\n                    totalFileSize: \"qqtotalfilesize\",\r\n                    totalParts: \"qqtotalparts\"\r\n                },\r\n                partSize: function(id) {\r\n                    return 2000000;\r\n                },\r\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\r\n                success: {\r\n                    endpoint: null,\r\n\r\n                    headers: function(id) {\r\n                        return null;\r\n                    },\r\n\r\n                    jsonPayload: false,\r\n\r\n                    method: \"POST\",\r\n\r\n                    params: function(id) {\r\n                        return null;\r\n                    },\r\n\r\n                    resetOnStatus: []\r\n                }\r\n            },\r\n\r\n            resume: {\r\n                enabled: false,\r\n                recordsExpireIn: 7, //days\r\n                paramNames: {\r\n                    resuming: \"qqresume\"\r\n                },\r\n                customKeys: function(fileId) {\r\n                    return [];\r\n                }\r\n            },\r\n\r\n            formatFileName: function(fileOrBlobName) {\r\n                return fileOrBlobName;\r\n            },\r\n\r\n            text: {\r\n                defaultResponseError: \"Upload failure reason unknown\",\r\n                fileInputTitle: \"file input\",\r\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\r\n            },\r\n\r\n            deleteFile: {\r\n                enabled: false,\r\n                method: \"DELETE\",\r\n                endpoint: \"/server/upload\",\r\n                customHeaders: {},\r\n                params: {}\r\n            },\r\n\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false,\r\n                allowXdr: false\r\n            },\r\n\r\n            blobs: {\r\n                defaultName: \"misc_data\"\r\n            },\r\n\r\n            paste: {\r\n                targetElement: null,\r\n                defaultName: \"pasted_image\"\r\n            },\r\n\r\n            camera: {\r\n                ios: false,\r\n\r\n                // if ios is true: button is null means target the default button, otherwise target the button specified\r\n                button: null\r\n            },\r\n\r\n            // This refers to additional upload buttons to be handled by Fine Uploader.\r\n            // Each element is an object, containing `element` as the only required\r\n            // property.  The `element` must be a container that will ultimately\r\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\r\n            // Optional properties of each object include `multiple`, `validation`,\r\n            // and `folders`.\r\n            extraButtons: [],\r\n\r\n            // Depends on the session module.  Used to query the server for an initial file list\r\n            // during initialization and optionally after a `reset`.\r\n            session: {\r\n                endpoint: null,\r\n                params: {},\r\n                customHeaders: {},\r\n                refreshOnReset: true\r\n            },\r\n\r\n            // Send parameters associated with an existing form along with the files\r\n            form: {\r\n                // Element ID, HTMLElement, or null\r\n                element: \"qq-form\",\r\n\r\n                // Overrides the base `autoUpload`, unless `element` is null.\r\n                autoUpload: false,\r\n\r\n                // true = upload files on form submission (and squelch submit event)\r\n                interceptSubmit: true\r\n            },\r\n\r\n            // scale images client side, upload a new file for each scaled version\r\n            scaling: {\r\n                customResizer: null,\r\n\r\n                // send the original file as well\r\n                sendOriginal: true,\r\n\r\n                // fox orientation for scaled images\r\n                orient: true,\r\n\r\n                // If null, scaled image type will match reference image type.  This value will be referred to\r\n                // for any size record that does not specific a type.\r\n                defaultType: null,\r\n\r\n                defaultQuality: 80,\r\n\r\n                failureText: \"Failed to scale\",\r\n\r\n                includeExif: false,\r\n\r\n                // metadata about each requested scaled version\r\n                sizes: []\r\n            },\r\n\r\n            workarounds: {\r\n                iosEmptyVideos: true,\r\n                ios8SafariUploads: true,\r\n                ios8BrowserCrash: false\r\n            }\r\n        };\r\n\r\n        // Replace any default options with user defined ones\r\n        qq.extend(this._options, o, true);\r\n\r\n        this._buttons = [];\r\n        this._extraButtonSpecs = {};\r\n        this._buttonIdsForFileIds = [];\r\n\r\n        this._wrapCallbacks();\r\n        this._disposeSupport =  new qq.DisposeSupport();\r\n\r\n        this._storedIds = [];\r\n        this._autoRetries = [];\r\n        this._retryTimeouts = [];\r\n        this._preventRetries = [];\r\n        this._thumbnailUrls = [];\r\n\r\n        this._netUploadedOrQueued = 0;\r\n        this._netUploaded = 0;\r\n        this._uploadData = this._createUploadDataTracker();\r\n\r\n        this._initFormSupportAndParams();\r\n\r\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\r\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\r\n\r\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\r\n\r\n        this._endpointStore = this._createStore(this._options.request.endpoint);\r\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\r\n\r\n        this._handler = this._createUploadHandler();\r\n\r\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\r\n\r\n        if (this._options.button) {\r\n            this._defaultButtonId = this._createUploadButton({\r\n                element: this._options.button,\r\n                title: this._options.text.fileInputTitle\r\n            }).getButtonId();\r\n        }\r\n\r\n        this._generateExtraButtonSpecs();\r\n\r\n        this._handleCameraAccess();\r\n\r\n        if (this._options.paste.targetElement) {\r\n            if (qq.PasteSupport) {\r\n                this._pasteHandler = this._createPasteHandler();\r\n            }\r\n            else {\r\n                this.log(\"Paste support module not found\", \"error\");\r\n            }\r\n        }\r\n\r\n        this._options.warnBeforeUnload && this._preventLeaveInProgress();\r\n\r\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\r\n        this._refreshSessionData();\r\n\r\n        this._succeededSinceLastAllComplete = [];\r\n        this._failedSinceLastAllComplete = [];\r\n\r\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\r\n        if (this._scaler.enabled) {\r\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\r\n        }\r\n\r\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\r\n            this._totalProgress = new qq.TotalProgress(\r\n                qq.bind(this._onTotalProgress, this),\r\n\r\n                function(id) {\r\n                    var entry = self._uploadData.retrieve({id: id});\r\n                    return (entry && entry.size) || 0;\r\n                }\r\n            );\r\n        }\r\n\r\n        this._currentItemLimit = this._options.validation.itemLimit;\r\n\r\n        this._customResumeDataStore = this._createStore();\r\n    };\r\n\r\n    // Define the private & public API methods.\r\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\r\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\r\n}());\r\n","/*globals qq, XDomainRequest*/\r\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\r\nqq.AjaxRequester = function(o) {\r\n    \"use strict\";\r\n\r\n    var log, shouldParamsBeInQueryString,\r\n        queue = [],\r\n        requestData = {},\r\n        options = {\r\n            acceptHeader: null,\r\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\r\n            method: \"POST\",\r\n            contentType: \"application/x-www-form-urlencoded\",\r\n            maxConnections: 3,\r\n            customHeaders: {},\r\n            endpointStore: {},\r\n            paramsStore: {},\r\n            mandatedParams: {},\r\n            allowXRequestedWithAndCacheControl: true,\r\n            successfulResponseCodes: {\r\n                DELETE: [200, 202, 204],\r\n                PATCH: [200, 201, 202, 203, 204],\r\n                POST: [200, 201, 202, 203, 204],\r\n                PUT: [200, 201, 202, 203, 204],\r\n                GET: [200]\r\n            },\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false\r\n            },\r\n            log: function(str, level) {},\r\n            onSend: function(id) {},\r\n            onComplete: function(id, xhrOrXdr, isError) {},\r\n            onProgress: null\r\n        };\r\n\r\n    qq.extend(options, o);\r\n    log = options.log;\r\n\r\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\r\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\r\n    }\r\n\r\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\r\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\r\n    // make a CORS request eligible to be exempt from preflighting.\r\n    function isSimpleMethod() {\r\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\r\n    }\r\n\r\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\r\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\r\n    // make a CORS request eligible to be exempt from preflighting.\r\n    function containsNonSimpleHeaders(headers) {\r\n        var containsNonSimple = false;\r\n\r\n        qq.each(containsNonSimple, function(idx, header) {\r\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\r\n                containsNonSimple = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return containsNonSimple;\r\n    }\r\n\r\n    function isXdr(xhr) {\r\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\r\n        return options.cors.expected && xhr.withCredentials === undefined;\r\n    }\r\n\r\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\r\n    function getCorsAjaxTransport() {\r\n        var xhrOrXdr;\r\n\r\n        if (window.XMLHttpRequest || window.ActiveXObject) {\r\n            xhrOrXdr = qq.createXhrInstance();\r\n\r\n            if (xhrOrXdr.withCredentials === undefined) {\r\n                xhrOrXdr = new XDomainRequest();\r\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\r\n                xhrOrXdr.onload = function() {};\r\n                xhrOrXdr.onerror = function() {};\r\n                xhrOrXdr.ontimeout = function() {};\r\n                xhrOrXdr.onprogress = function() {};\r\n            }\r\n        }\r\n\r\n        return xhrOrXdr;\r\n    }\r\n\r\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\r\n    function getXhrOrXdr(id, suppliedXhr) {\r\n        var xhrOrXdr = requestData[id] && requestData[id].xhr;\r\n\r\n        if (!xhrOrXdr) {\r\n            if (suppliedXhr) {\r\n                xhrOrXdr = suppliedXhr;\r\n            }\r\n            else {\r\n                if (options.cors.expected) {\r\n                    xhrOrXdr = getCorsAjaxTransport();\r\n                }\r\n                else {\r\n                    xhrOrXdr = qq.createXhrInstance();\r\n                }\r\n            }\r\n\r\n            requestData[id].xhr = xhrOrXdr;\r\n        }\r\n\r\n        return xhrOrXdr;\r\n    }\r\n\r\n    // Removes element from queue, sends next request\r\n    function dequeue(id) {\r\n        var i = qq.indexOf(queue, id),\r\n            max = options.maxConnections,\r\n            nextId;\r\n\r\n        delete requestData[id];\r\n        queue.splice(i, 1);\r\n\r\n        if (queue.length >= max && i < max) {\r\n            nextId = queue[max - 1];\r\n            sendRequest(nextId);\r\n        }\r\n    }\r\n\r\n    function onComplete(id, xdrError) {\r\n        var xhr = getXhrOrXdr(id),\r\n            method = options.method,\r\n            isError = xdrError === true;\r\n\r\n        dequeue(id);\r\n\r\n        if (isError) {\r\n            log(method + \" request for \" + id + \" has failed\", \"error\");\r\n        }\r\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\r\n            isError = true;\r\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\r\n        }\r\n\r\n        options.onComplete(id, xhr, isError);\r\n    }\r\n\r\n    function getParams(id) {\r\n        var onDemandParams = requestData[id].additionalParams,\r\n            mandatedParams = options.mandatedParams,\r\n            params;\r\n\r\n        if (options.paramsStore.get) {\r\n            params = options.paramsStore.get(id);\r\n        }\r\n\r\n        if (onDemandParams) {\r\n            qq.each(onDemandParams, function(name, val) {\r\n                params = params || {};\r\n                params[name] = val;\r\n            });\r\n        }\r\n\r\n        if (mandatedParams) {\r\n            qq.each(mandatedParams, function(name, val) {\r\n                params = params || {};\r\n                params[name] = val;\r\n            });\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    function sendRequest(id, optXhr) {\r\n        var xhr = getXhrOrXdr(id, optXhr),\r\n            method = options.method,\r\n            params = getParams(id),\r\n            payload = requestData[id].payload,\r\n            url;\r\n\r\n        options.onSend(id);\r\n\r\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\r\n\r\n        // XDR and XHR status detection APIs differ a bit.\r\n        if (isXdr(xhr)) {\r\n            xhr.onload = getXdrLoadHandler(id);\r\n            xhr.onerror = getXdrErrorHandler(id);\r\n        }\r\n        else {\r\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\r\n        }\r\n\r\n        registerForUploadProgress(id);\r\n\r\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\r\n        xhr.open(method, url, true);\r\n\r\n        // Instruct the transport to send cookies along with the CORS request,\r\n        // unless we are using `XDomainRequest`, which is not capable of this.\r\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\r\n            xhr.withCredentials = true;\r\n        }\r\n\r\n        setHeaders(id);\r\n\r\n        log(\"Sending \" + method + \" request for \" + id);\r\n\r\n        if (payload) {\r\n            xhr.send(payload);\r\n        }\r\n        else if (shouldParamsBeInQueryString || !params) {\r\n            xhr.send();\r\n        }\r\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\r\n            xhr.send(qq.obj2url(params, \"\"));\r\n        }\r\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\r\n            xhr.send(JSON.stringify(params));\r\n        }\r\n        else {\r\n            xhr.send(params);\r\n        }\r\n\r\n        return xhr;\r\n    }\r\n\r\n    function createUrl(id, params, additionalQueryParams) {\r\n        var endpoint = options.endpointStore.get(id),\r\n            addToPath = requestData[id].addToPath;\r\n\r\n        /*jshint -W116,-W041 */\r\n        if (addToPath != undefined) {\r\n            endpoint += \"/\" + addToPath;\r\n        }\r\n\r\n        if (shouldParamsBeInQueryString && params) {\r\n            endpoint = qq.obj2url(params, endpoint);\r\n        }\r\n\r\n        if (additionalQueryParams) {\r\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\r\n        }\r\n\r\n        return endpoint;\r\n    }\r\n\r\n    // Invoked by the UA to indicate a number of possible states that describe\r\n    // a live `XMLHttpRequest` transport.\r\n    function getXhrReadyStateChangeHandler(id) {\r\n        return function() {\r\n            if (getXhrOrXdr(id).readyState === 4) {\r\n                onComplete(id);\r\n            }\r\n        };\r\n    }\r\n\r\n    function registerForUploadProgress(id) {\r\n        var onProgress = options.onProgress;\r\n\r\n        if (onProgress) {\r\n            getXhrOrXdr(id).upload.onprogress = function(e) {\r\n                if (e.lengthComputable) {\r\n                    onProgress(id, e.loaded, e.total);\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    // This will be called by IE to indicate **success** for an associated\r\n    // `XDomainRequest` transported request.\r\n    function getXdrLoadHandler(id) {\r\n        return function() {\r\n            onComplete(id);\r\n        };\r\n    }\r\n\r\n    // This will be called by IE to indicate **failure** for an associated\r\n    // `XDomainRequest` transported request.\r\n    function getXdrErrorHandler(id) {\r\n        return function() {\r\n            onComplete(id, true);\r\n        };\r\n    }\r\n\r\n    function setHeaders(id) {\r\n        var xhr = getXhrOrXdr(id),\r\n            customHeaders = options.customHeaders,\r\n            onDemandHeaders = requestData[id].additionalHeaders || {},\r\n            method = options.method,\r\n            allHeaders = {};\r\n\r\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\r\n        if (!isXdr(xhr)) {\r\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\r\n\r\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\r\n            if (options.allowXRequestedWithAndCacheControl) {\r\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\r\n                // OR the cross-origin request contains a non-simple method or header.\r\n                // This is done to ensure a preflight is not triggered exclusively based on the\r\n                // addition of these 2 non-simple headers.\r\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\r\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\r\n                }\r\n            }\r\n\r\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\r\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\r\n            }\r\n\r\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\r\n            qq.extend(allHeaders, onDemandHeaders);\r\n\r\n            qq.each(allHeaders, function(name, val) {\r\n                xhr.setRequestHeader(name, val);\r\n            });\r\n        }\r\n    }\r\n\r\n    function isResponseSuccessful(responseCode) {\r\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\r\n    }\r\n\r\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\r\n        requestData[id] = {\r\n            addToPath: addToPath,\r\n            additionalParams: additionalParams,\r\n            additionalQueryParams: additionalQueryParams,\r\n            additionalHeaders: additionalHeaders,\r\n            payload: payload\r\n        };\r\n\r\n        var len = queue.push(id);\r\n\r\n        // if too many active connections, wait...\r\n        if (len <= options.maxConnections) {\r\n            return sendRequest(id, optXhr);\r\n        }\r\n    }\r\n\r\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\r\n\r\n    qq.extend(this, {\r\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\r\n        initTransport: function(id) {\r\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\r\n\r\n            return {\r\n                // Optionally specify the end of the endpoint path for the request.\r\n                withPath: function(appendToPath) {\r\n                    path = appendToPath;\r\n                    return this;\r\n                },\r\n\r\n                // Optionally specify additional parameters to send along with the request.\r\n                // These will be added to the query string for GET/DELETE requests or the payload\r\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\r\n                // how these parameters should be formatted as well.\r\n                withParams: function(additionalParams) {\r\n                    params = additionalParams;\r\n                    return this;\r\n                },\r\n\r\n                withQueryParams: function(_additionalQueryParams_) {\r\n                    additionalQueryParams = _additionalQueryParams_;\r\n                    return this;\r\n                },\r\n\r\n                // Optionally specify additional headers to send along with the request.\r\n                withHeaders: function(additionalHeaders) {\r\n                    headers = additionalHeaders;\r\n                    return this;\r\n                },\r\n\r\n                // Optionally specify a payload/body for the request.\r\n                withPayload: function(thePayload) {\r\n                    payload = thePayload;\r\n                    return this;\r\n                },\r\n\r\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\r\n                withCacheBuster: function() {\r\n                    cacheBuster = true;\r\n                    return this;\r\n                },\r\n\r\n                // Send the constructed request.\r\n                send: function(optXhr) {\r\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\r\n                        params.qqtimestamp = new Date().getTime();\r\n                    }\r\n\r\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\r\n                }\r\n            };\r\n        },\r\n\r\n        canceled: function(id) {\r\n            dequeue(id);\r\n        }\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Common upload handler functions.\r\n *\r\n * @constructor\r\n */\r\nqq.UploadHandler = function(spec) {\r\n    \"use strict\";\r\n\r\n    var proxy = spec.proxy,\r\n        fileState = {},\r\n        onCancel = proxy.onCancel,\r\n        getName = proxy.getName;\r\n\r\n    qq.extend(this, {\r\n        add: function(id, fileItem) {\r\n            fileState[id] = fileItem;\r\n            fileState[id].temp = {};\r\n        },\r\n\r\n        cancel: function(id) {\r\n            var self = this,\r\n                cancelFinalizationEffort = new qq.Promise(),\r\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\r\n\r\n            onCancelRetVal.then(function() {\r\n                if (self.isValid(id)) {\r\n                    fileState[id].canceled = true;\r\n                    self.expunge(id);\r\n                }\r\n                cancelFinalizationEffort.success();\r\n            });\r\n        },\r\n\r\n        expunge: function(id) {\r\n            delete fileState[id];\r\n        },\r\n\r\n        getThirdPartyFileId: function(id) {\r\n            return fileState[id].key;\r\n        },\r\n\r\n        isValid: function(id) {\r\n            return fileState[id] !== undefined;\r\n        },\r\n\r\n        reset: function() {\r\n            fileState = {};\r\n        },\r\n\r\n        _getFileState: function(id) {\r\n            return fileState[id];\r\n        },\r\n\r\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\r\n            fileState[id].key = thirdPartyFileId;\r\n        },\r\n\r\n        _wasCanceled: function(id) {\r\n            return !!fileState[id].canceled;\r\n        }\r\n    });\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Base upload handler module.  Controls more specific handlers.\r\n *\r\n * @param o Options.  Passed along to the specific handler submodule as well.\r\n * @param namespace [optional] Namespace for the specific handler.\r\n */\r\nqq.UploadHandlerController = function(o, namespace) {\r\n    \"use strict\";\r\n\r\n    var controller = this,\r\n        chunkingPossible = false,\r\n        concurrentChunkingPossible = false,\r\n        chunking, preventRetryResponse, log, handler,\r\n\r\n    options = {\r\n        paramsStore: {},\r\n        maxConnections: 3, // maximum number of concurrent uploads\r\n        chunking: {\r\n            enabled: false,\r\n            multiple: {\r\n                enabled: false\r\n            }\r\n        },\r\n        log: function(str, level) {},\r\n        onProgress: function(id, fileName, loaded, total) {},\r\n        onComplete: function(id, fileName, response, xhr) {},\r\n        onCancel: function(id, fileName) {},\r\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\r\n        onUpload: function(id, fileName) {},\r\n        onUploadChunk: function(id, fileName, chunkData) {},\r\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\r\n        onAutoRetry: function(id, fileName, response, xhr) {},\r\n        onResume: function(id, fileName, chunkData, customResumeData) {},\r\n        onUuidChanged: function(id, newUuid) {},\r\n        getName: function(id) {},\r\n        setSize: function(id, newSize) {},\r\n        isQueued: function(id) {},\r\n        getIdsInProxyGroup: function(id) {},\r\n        getIdsInBatch: function(id) {},\r\n        isInProgress: function(id) {}\r\n    },\r\n\r\n    chunked = {\r\n        // Called when each chunk has uploaded successfully\r\n        done: function(id, chunkIdx, response, xhr) {\r\n            var chunkData = handler._getChunkData(id, chunkIdx);\r\n\r\n            handler._getFileState(id).attemptingResume = false;\r\n\r\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\r\n            handler._getFileState(id).loaded += chunkData.size;\r\n\r\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\r\n        },\r\n\r\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\r\n        // logic associated with closing out the file, such as combining the chunks.\r\n        finalize: function(id) {\r\n            var size = options.getSize(id),\r\n                name = options.getName(id);\r\n\r\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\r\n            handler.finalizeChunks(id).then(\r\n                function(response, xhr) {\r\n                    log(\"Finalize successful for \" + id);\r\n\r\n                    var normaizedResponse = upload.normalizeResponse(response, true);\r\n\r\n                    options.onProgress(id, name, size, size);\r\n                    handler._maybeDeletePersistedChunkData(id);\r\n                    upload.cleanup(id, normaizedResponse, xhr);\r\n                },\r\n                function(response, xhr) {\r\n                    var normalizedResponse = upload.normalizeResponse(response, false);\r\n\r\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normalizedResponse.error, \"error\");\r\n\r\n                    if (\r\n                        normalizedResponse.reset ||\r\n                        (xhr && options.chunking.success.resetOnStatus.indexOf(xhr.status) >= 0)\r\n                    ) {\r\n                        chunked.reset(id);\r\n                    }\r\n\r\n                    if (!options.onAutoRetry(id, name, normalizedResponse, xhr)) {\r\n                        upload.cleanup(id, normalizedResponse, xhr);\r\n                    }\r\n                }\r\n            );\r\n        },\r\n\r\n        handleFailure: function(chunkIdx, id, response, xhr) {\r\n            var name = options.getName(id);\r\n\r\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\r\n\r\n            handler.clearCachedChunk(id, chunkIdx);\r\n\r\n            var responseToReport = upload.normalizeResponse(response, false),\r\n                inProgressIdx;\r\n\r\n            if (responseToReport.reset) {\r\n                chunked.reset(id);\r\n            }\r\n            else {\r\n                var inProgressChunksArray = handler._getFileState(id).chunking.inProgress;\r\n\r\n                inProgressIdx = inProgressChunksArray ? qq.indexOf(inProgressChunksArray, chunkIdx) : -1;\r\n                if (inProgressIdx >= 0) {\r\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\r\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\r\n                }\r\n            }\r\n\r\n            // We may have aborted all other in-progress chunks for this file due to a failure.\r\n            // If so, ignore the failures associated with those aborts.\r\n            if (!handler._getFileState(id).temp.ignoreFailure) {\r\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\r\n                // chunks since they will be explicitly aborted\r\n                if (concurrentChunkingPossible) {\r\n                    handler._getFileState(id).temp.ignoreFailure = true;\r\n\r\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\r\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\r\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\r\n                        ckXhr.abort();\r\n                        // Flag the transport, in case we are waiting for some other async operation\r\n                        // to complete before attempting to upload the chunk\r\n                        ckXhr._cancelled = true;\r\n                    });\r\n\r\n                    // We must indicate that all aborted chunks are no longer in progress\r\n                    handler.moveInProgressToRemaining(id);\r\n\r\n                    // Free up any connections used by these chunks, but don't allow any\r\n                    // other files to take up the connections (until we have exhausted all auto-retries)\r\n                    connectionManager.free(id, true);\r\n                }\r\n\r\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\r\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\r\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\r\n                    // is a failure or not.\r\n                    upload.cleanup(id, responseToReport, xhr);\r\n                }\r\n            }\r\n        },\r\n\r\n        hasMoreParts: function(id) {\r\n            return !!handler._getFileState(id).chunking.remaining.length;\r\n        },\r\n\r\n        nextPart: function(id) {\r\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\r\n\r\n            if (nextIdx >= handler._getTotalChunks(id)) {\r\n                nextIdx = null;\r\n            }\r\n\r\n            return nextIdx;\r\n        },\r\n\r\n        reset: function(id) {\r\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\r\n\r\n            handler._maybeDeletePersistedChunkData(id);\r\n            handler.reevaluateChunking(id);\r\n            handler._getFileState(id).loaded = 0;\r\n            handler._getFileState(id).attemptingResume = false;\r\n        },\r\n\r\n        sendNext: function(id) {\r\n            var size = options.getSize(id),\r\n                name = options.getName(id),\r\n                chunkIdx = chunked.nextPart(id),\r\n                chunkData = handler._getChunkData(id, chunkIdx),\r\n                fileState = handler._getFileState(id),\r\n                resuming = fileState.attemptingResume,\r\n                inProgressChunks = fileState.chunking.inProgress || [];\r\n\r\n            if (fileState.loaded == null) {\r\n                fileState.loaded = 0;\r\n            }\r\n\r\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\r\n            if (resuming && options.onResume(id, name, chunkData, fileState.customResumeData) === false) {\r\n                chunked.reset(id);\r\n                chunkIdx = chunked.nextPart(id);\r\n                chunkData = handler._getChunkData(id, chunkIdx);\r\n                resuming = false;\r\n            }\r\n\r\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\r\n            if (chunkIdx == null && inProgressChunks.length === 0) {\r\n                chunked.finalize(id);\r\n            }\r\n\r\n            // Send the next chunk\r\n            else {\r\n                inProgressChunks.push(chunkIdx);\r\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\r\n\r\n                if (concurrentChunkingPossible) {\r\n                    connectionManager.open(id, chunkIdx);\r\n                }\r\n\r\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\r\n                    chunked.sendNext(id);\r\n                }\r\n\r\n                if (chunkData.blob.size === 0) {\r\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\r\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\r\n                }\r\n\r\n                var onUploadChunkPromise = options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\r\n\r\n                onUploadChunkPromise.then(\r\n                    function(requestOverrides) {\r\n                        if (!options.isInProgress(id)) {\r\n                            log(qq.format(\"Not sending chunked upload request for item {}.{} - no longer in progress.\", id, chunkIdx));\r\n                        }\r\n                        else {\r\n                            log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\r\n\r\n                            var uploadChunkData = {\r\n                                chunkIdx: chunkIdx,\r\n                                id: id,\r\n                                overrides: requestOverrides,\r\n                                resuming: resuming\r\n                            };\r\n\r\n                            handler.uploadChunk(uploadChunkData).then(\r\n                                // upload chunk success\r\n                                function success(response, xhr) {\r\n                                    log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\r\n\r\n                                    handler.clearCachedChunk(id, chunkIdx);\r\n\r\n                                    var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\r\n                                        responseToReport = upload.normalizeResponse(response, true),\r\n                                        inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\r\n\r\n                                    log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\r\n\r\n                                    chunked.done(id, chunkIdx, responseToReport, xhr);\r\n\r\n                                    if (inProgressChunkIdx >= 0) {\r\n                                        inProgressChunks.splice(inProgressChunkIdx, 1);\r\n                                    }\r\n\r\n                                    handler._maybePersistChunkedState(id);\r\n\r\n                                    if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\r\n                                        chunked.finalize(id);\r\n                                    }\r\n                                    else if (chunked.hasMoreParts(id)) {\r\n                                        chunked.sendNext(id);\r\n                                    }\r\n                                    else {\r\n                                        log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\r\n                                    }\r\n                                },\r\n\r\n                                // upload chunk failure\r\n                                function failure(response, xhr) {\r\n                                    chunked.handleFailure(chunkIdx, id, response, xhr);\r\n                                }\r\n                            )\r\n                                .done(function () {\r\n                                    handler.clearXhr(id, chunkIdx);\r\n                                });\r\n                        }\r\n                    },\r\n\r\n                    function(error) {\r\n                        chunked.handleFailure(chunkIdx, id, error, null);\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    },\r\n\r\n    connectionManager = {\r\n        _open: [],\r\n        _openChunks: {},\r\n        _waiting: [],\r\n\r\n        available: function() {\r\n            var max = options.maxConnections,\r\n                openChunkEntriesCount = 0,\r\n                openChunksCount = 0;\r\n\r\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\r\n                openChunkEntriesCount++;\r\n                openChunksCount += openChunkIndexes.length;\r\n            });\r\n\r\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\r\n        },\r\n\r\n        /**\r\n         * Removes element from queue, starts upload of next\r\n         */\r\n        free: function(id, dontAllowNext) {\r\n            var allowNext = !dontAllowNext,\r\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\r\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\r\n                nextId;\r\n\r\n            delete connectionManager._openChunks[id];\r\n\r\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\r\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\r\n                delete handler._getFileState(id).file;\r\n            }\r\n\r\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\r\n            if (waitingIndex >= 0) {\r\n                connectionManager._waiting.splice(waitingIndex, 1);\r\n            }\r\n            // If this file was consuming a connection, allow the next file to be uploaded\r\n            else if (allowNext && connectionsIndex >= 0) {\r\n                connectionManager._open.splice(connectionsIndex, 1);\r\n\r\n                nextId = connectionManager._waiting.shift();\r\n                if (nextId >= 0) {\r\n                    connectionManager._open.push(nextId);\r\n                    upload.start(nextId);\r\n                }\r\n            }\r\n        },\r\n\r\n        getWaitingOrConnected: function() {\r\n            var waitingOrConnected = [];\r\n\r\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\r\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\r\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\r\n                if (chunks && chunks.length) {\r\n                    waitingOrConnected.push(parseInt(fileId));\r\n                }\r\n            });\r\n\r\n            // For non-chunked files, only one connection will be consumed per file.\r\n            // This is where we aggregate those file IDs.\r\n            qq.each(connectionManager._open, function(idx, fileId) {\r\n                if (!connectionManager._openChunks[fileId]) {\r\n                    waitingOrConnected.push(parseInt(fileId));\r\n                }\r\n            });\r\n\r\n            // There may be files waiting for a connection.\r\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\r\n\r\n            return waitingOrConnected;\r\n        },\r\n\r\n        isUsingConnection: function(id) {\r\n            return qq.indexOf(connectionManager._open, id) >= 0;\r\n        },\r\n\r\n        open: function(id, chunkIdx) {\r\n            if (chunkIdx == null) {\r\n                connectionManager._waiting.push(id);\r\n            }\r\n\r\n            if (connectionManager.available()) {\r\n                if (chunkIdx == null) {\r\n                    connectionManager._waiting.pop();\r\n                    connectionManager._open.push(id);\r\n                }\r\n                else {\r\n                    (function() {\r\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\r\n                        openChunksEntry.push(chunkIdx);\r\n                        connectionManager._openChunks[id] = openChunksEntry;\r\n                    }());\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        reset: function() {\r\n            connectionManager._waiting = [];\r\n            connectionManager._open = [];\r\n        }\r\n    },\r\n\r\n    simple = {\r\n        send: function(id, name) {\r\n            var fileState = handler._getFileState(id);\r\n\r\n            if (!fileState) {\r\n                log(\"Ignoring send request as this upload may have been cancelled, File ID \" + id, \"warn\");\r\n                return;\r\n            }\r\n\r\n            fileState.loaded = 0;\r\n\r\n            log(\"Sending simple upload request for \" + id);\r\n            handler.uploadFile(id).then(\r\n                function(response, optXhr) {\r\n                    log(\"Simple upload request succeeded for \" + id);\r\n\r\n                    var responseToReport = upload.normalizeResponse(response, true),\r\n                        size = options.getSize(id);\r\n\r\n                    options.onProgress(id, name, size, size);\r\n                    upload.maybeNewUuid(id, responseToReport);\r\n                    upload.cleanup(id, responseToReport, optXhr);\r\n                },\r\n\r\n                function(response, optXhr) {\r\n                    log(\"Simple upload request failed for \" + id);\r\n\r\n                    var responseToReport = upload.normalizeResponse(response, false);\r\n\r\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\r\n                        upload.cleanup(id, responseToReport, optXhr);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    },\r\n\r\n    upload = {\r\n        cancel: function(id) {\r\n            log(\"Cancelling \" + id);\r\n            options.paramsStore.remove(id);\r\n            connectionManager.free(id);\r\n        },\r\n\r\n        cleanup: function(id, response, optXhr) {\r\n            var name = options.getName(id);\r\n\r\n            options.onComplete(id, name, response, optXhr);\r\n\r\n            if (handler._getFileState(id)) {\r\n                handler._clearXhrs && handler._clearXhrs(id);\r\n            }\r\n\r\n            connectionManager.free(id);\r\n        },\r\n\r\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\r\n        // if none of these are available for the ID\r\n        getProxyOrBlob: function(id) {\r\n            return (handler.getProxy && handler.getProxy(id)) ||\r\n                (handler.getFile && handler.getFile(id));\r\n        },\r\n\r\n        initHandler: function() {\r\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\r\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\r\n\r\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\r\n                options,\r\n                {\r\n                    getCustomResumeData: options.getCustomResumeData,\r\n                    getDataByUuid: options.getDataByUuid,\r\n                    getName: options.getName,\r\n                    getSize: options.getSize,\r\n                    getUuid: options.getUuid,\r\n                    log: log,\r\n                    onCancel: options.onCancel,\r\n                    onProgress: options.onProgress,\r\n                    onUuidChanged: options.onUuidChanged,\r\n                    onFinalizing: function(id) {\r\n                        options.setStatus(id, qq.status.UPLOAD_FINALIZING);\r\n                    }\r\n                }\r\n            );\r\n\r\n            if (handler._removeExpiredChunkingRecords) {\r\n                handler._removeExpiredChunkingRecords();\r\n            }\r\n        },\r\n\r\n        isDeferredEligibleForUpload: function(id) {\r\n            return options.isQueued(id);\r\n        },\r\n\r\n        // For Blobs that are part of a group of generated images, along with a reference image,\r\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\r\n        // even if some async processing must be completed on one or more Blobs first.\r\n        maybeDefer: function(id, blob) {\r\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\r\n            // and then submit the upload to the specific handler once the blob is available.\r\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\r\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\r\n\r\n                // Blob creation may take some time, so the caller may want to update the\r\n                // UI to indicate that an operation is in progress, even before the actual\r\n                // upload begins and an onUpload callback is invoked.\r\n                options.onUploadPrep(id);\r\n\r\n                log(\"Attempting to generate a blob on-demand for \" + id);\r\n                blob.create().then(function(generatedBlob) {\r\n                    log(\"Generated an on-demand blob for \" + id);\r\n\r\n                    // Update record associated with this file by providing the generated Blob\r\n                    handler.updateBlob(id, generatedBlob);\r\n\r\n                    // Propagate the size for this generated Blob\r\n                    options.setSize(id, generatedBlob.size);\r\n\r\n                    // Order handler to recalculate chunking possibility, if applicable\r\n                    handler.reevaluateChunking(id);\r\n\r\n                    upload.maybeSendDeferredFiles(id);\r\n                },\r\n\r\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\r\n                function(errorMessage) {\r\n                    var errorResponse = {};\r\n\r\n                    if (errorMessage) {\r\n                        errorResponse.error = errorMessage;\r\n                    }\r\n\r\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\r\n\r\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\r\n                    upload.maybeSendDeferredFiles(id);\r\n                    connectionManager.free(id);\r\n                });\r\n            }\r\n            else {\r\n                return upload.maybeSendDeferredFiles(id);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\r\n        maybeSendDeferredFiles: function(id) {\r\n            var idsInGroup = options.getIdsInProxyGroup(id),\r\n                uploadedThisId = false;\r\n\r\n            if (idsInGroup && idsInGroup.length) {\r\n                log(\"Maybe ready to upload proxy group file \" + id);\r\n\r\n                qq.each(idsInGroup, function(idx, idInGroup) {\r\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\r\n                        uploadedThisId = idInGroup === id;\r\n                        upload.now(idInGroup);\r\n                    }\r\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                uploadedThisId = true;\r\n                upload.now(id);\r\n            }\r\n\r\n            return uploadedThisId;\r\n        },\r\n\r\n        maybeNewUuid: function(id, response) {\r\n            if (response.newUuid !== undefined) {\r\n                options.onUuidChanged(id, response.newUuid);\r\n            }\r\n        },\r\n\r\n        // The response coming from handler implementations may be in various formats.\r\n        // Instead of hoping a promise nested 5 levels deep will always return an object\r\n        // as its first param, let's just normalize the response here.\r\n        normalizeResponse: function(originalResponse, successful) {\r\n            var response = originalResponse;\r\n\r\n            // The passed \"response\" param may not be a response at all.\r\n            // It could be a string, detailing the error, for example.\r\n            if (!qq.isObject(originalResponse)) {\r\n                response = {};\r\n\r\n                if (qq.isString(originalResponse) && !successful) {\r\n                    response.error = originalResponse;\r\n                }\r\n            }\r\n\r\n            response.success = successful;\r\n\r\n            return response;\r\n        },\r\n\r\n        now: function(id) {\r\n            var name = options.getName(id);\r\n\r\n            if (!controller.isValid(id)) {\r\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\r\n            }\r\n\r\n            options.onUpload(id, name).then(\r\n                function(response) {\r\n                    if (response && response.pause) {\r\n                        options.setStatus(id, qq.status.PAUSED);\r\n                        handler.pause(id);\r\n                        connectionManager.free(id);\r\n                    }\r\n                    else {\r\n                        if (chunkingPossible && handler._shouldChunkThisFile(id)) {\r\n                            chunked.sendNext(id);\r\n                        }\r\n                        else {\r\n                            simple.send(id, name);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                function(error) {\r\n                    error = error || {};\r\n\r\n                    log(id + \" upload start aborted due to rejected onUpload Promise - details: \" + error, \"error\");\r\n\r\n                    if (!options.onAutoRetry(id, name, error.responseJSON || {})) {\r\n                        var response = upload.normalizeResponse(error.responseJSON, false);\r\n                        upload.cleanup(id, response);\r\n                    }\r\n                }\r\n            );\r\n        },\r\n\r\n        start: function(id) {\r\n            var blobToUpload = upload.getProxyOrBlob(id);\r\n\r\n            if (blobToUpload) {\r\n                return upload.maybeDefer(id, blobToUpload);\r\n            }\r\n            else {\r\n                upload.now(id);\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Adds file or file input to the queue\r\n         **/\r\n        add: function(id, file) {\r\n            handler.add.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Sends the file identified by id\r\n         */\r\n        upload: function(id) {\r\n            if (connectionManager.open(id)) {\r\n                return upload.start(id);\r\n            }\r\n            return false;\r\n        },\r\n\r\n        retry: function(id) {\r\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\r\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\r\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\r\n            // any more failures at this point.\r\n            if (concurrentChunkingPossible) {\r\n                handler._getFileState(id).temp.ignoreFailure = false;\r\n            }\r\n\r\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\r\n            // Just go ahead and ask the handler to upload again.\r\n            if (connectionManager.isUsingConnection(id)) {\r\n                return upload.start(id);\r\n            }\r\n\r\n            // If we are attempting to retry a file that is not currently consuming a connection,\r\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\r\n            // before the retry commences.\r\n            else {\r\n                return controller.upload(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels file upload by id\r\n         */\r\n        cancel: function(id) {\r\n            var cancelRetVal = handler.cancel(id);\r\n\r\n            if (qq.isGenericPromise(cancelRetVal)) {\r\n                cancelRetVal.then(function() {\r\n                    upload.cancel(id);\r\n                });\r\n            }\r\n            else if (cancelRetVal !== false) {\r\n                upload.cancel(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels all queued or in-progress uploads\r\n         */\r\n        cancelAll: function() {\r\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\r\n                i;\r\n\r\n            // ensure files are cancelled in reverse order which they were added\r\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\r\n            if (waitingOrConnected.length) {\r\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\r\n                    controller.cancel(waitingOrConnected[i]);\r\n                }\r\n            }\r\n\r\n            connectionManager.reset();\r\n        },\r\n\r\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\r\n        // Undefined if no file record is available.\r\n        getFile: function(id) {\r\n            if (handler.getProxy && handler.getProxy(id)) {\r\n                return handler.getProxy(id).referenceBlob;\r\n            }\r\n\r\n            return handler.getFile && handler.getFile(id);\r\n        },\r\n\r\n        // Returns true if the Blob associated with the ID is related to a proxy s\r\n        isProxied: function(id) {\r\n            return !!(handler.getProxy && handler.getProxy(id));\r\n        },\r\n\r\n        getInput: function(id) {\r\n            if (handler.getInput) {\r\n                return handler.getInput(id);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            log(\"Resetting upload handler\");\r\n            controller.cancelAll();\r\n            connectionManager.reset();\r\n            handler.reset();\r\n        },\r\n\r\n        expunge: function(id) {\r\n            if (controller.isValid(id)) {\r\n                return handler.expunge(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Determine if the file exists.\r\n         */\r\n        isValid: function(id) {\r\n            return handler.isValid(id);\r\n        },\r\n\r\n        hasResumeRecord: function(id) {\r\n            var key = handler.isValid(id) &&\r\n                handler._getLocalStorageId &&\r\n                handler._getLocalStorageId(id);\r\n\r\n            if (key) {\r\n                return !!localStorage.getItem(key);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        getResumableFilesData: function() {\r\n            if (handler.getResumableFilesData) {\r\n                return handler.getResumableFilesData();\r\n            }\r\n            return [];\r\n        },\r\n\r\n        /**\r\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\r\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\r\n         * will be undefined.\r\n         *\r\n         * @param id Internal file ID\r\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\r\n         */\r\n        getThirdPartyFileId: function(id) {\r\n            if (controller.isValid(id)) {\r\n                return handler.getThirdPartyFileId(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\r\n         * @param id ID of the upload/file to pause\r\n         * @returns {boolean} true if the upload was paused\r\n         */\r\n        pause: function(id) {\r\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\r\n                connectionManager.free(id);\r\n                handler.moveInProgressToRemaining(id);\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        isAttemptingResume: function(id) {\r\n            return !!handler.isAttemptingResume && handler.isAttemptingResume(id);\r\n        },\r\n\r\n        // True if the file is eligible for pause/resume.\r\n        isResumable: function(id) {\r\n            return !!handler.isResumable && handler.isResumable(id);\r\n        }\r\n    });\r\n\r\n    qq.extend(options, o);\r\n    log = options.log;\r\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\r\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\r\n\r\n    preventRetryResponse = (function() {\r\n        var response = {};\r\n\r\n        response[options.preventRetryParam] = true;\r\n\r\n        return response;\r\n    }());\r\n\r\n    upload.initHandler();\r\n};\r\n","/*globals qq */\r\n/*jshint -W117 */\r\nqq.WindowReceiveMessage = function(o) {\r\n    \"use strict\";\r\n\r\n    var options = {\r\n            log: function(message, level) {}\r\n        },\r\n        callbackWrapperDetachers = {};\r\n\r\n    qq.extend(options, o);\r\n\r\n    qq.extend(this, {\r\n        receiveMessage: function(id, callback) {\r\n            var onMessageCallbackWrapper = function(event) {\r\n                    callback(event.data);\r\n                };\r\n\r\n            if (window.postMessage) {\r\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\r\n            }\r\n            else {\r\n                log(\"iframe message passing not supported in this browser!\", \"error\");\r\n            }\r\n        },\r\n\r\n        stopReceivingMessages: function(id) {\r\n            if (window.postMessage) {\r\n                var detacher = callbackWrapperDetachers[id];\r\n                if (detacher) {\r\n                    detacher();\r\n                }\r\n            }\r\n        }\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\r\n * in some cases by specific form upload handlers.\r\n *\r\n * @constructor\r\n */\r\nqq.FormUploadHandler = function(spec) {\r\n    \"use strict\";\r\n\r\n    var options = spec.options,\r\n        handler = this,\r\n        proxy = spec.proxy,\r\n        formHandlerInstanceId = qq.getUniqueId(),\r\n        onloadCallbacks = {},\r\n        detachLoadEvents = {},\r\n        postMessageCallbackTimers = {},\r\n        isCors = options.isCors,\r\n        inputName = options.inputName,\r\n        getUuid = proxy.getUuid,\r\n        log = proxy.log,\r\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\r\n\r\n    /**\r\n     * Remove any trace of the file from the handler.\r\n     *\r\n     * @param id ID of the associated file\r\n     */\r\n    function expungeFile(id) {\r\n        delete detachLoadEvents[id];\r\n\r\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\r\n        // In that case, terminate the timer waiting for a message from the loaded iframe\r\n        // and stop listening for any more messages coming from this iframe.\r\n        if (isCors) {\r\n            clearTimeout(postMessageCallbackTimers[id]);\r\n            delete postMessageCallbackTimers[id];\r\n            corsMessageReceiver.stopReceivingMessages(id);\r\n        }\r\n\r\n        var iframe = document.getElementById(handler._getIframeName(id));\r\n        if (iframe) {\r\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\r\n            // because it doesn't trigger ie6 prompt on https\r\n            /* jshint scripturl:true */\r\n            iframe.setAttribute(\"src\", \"javascript:false;\");\r\n\r\n            qq(iframe).remove();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param iframeName `document`-unique Name of the associated iframe\r\n     * @returns {*} ID of the associated file\r\n     */\r\n    function getFileIdForIframeName(iframeName) {\r\n        return iframeName.split(\"_\")[0];\r\n    }\r\n\r\n    /**\r\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\r\n     * to the current `document`.  Note that the iframe is hidden from view.\r\n     *\r\n     * @param name Name of the iframe.\r\n     * @returns {HTMLIFrameElement} The created iframe\r\n     */\r\n    function initIframeForUpload(name) {\r\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\r\n\r\n        iframe.setAttribute(\"id\", name);\r\n\r\n        iframe.style.display = \"none\";\r\n        document.body.appendChild(iframe);\r\n\r\n        return iframe;\r\n    }\r\n\r\n    /**\r\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\r\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\r\n     *\r\n     * @param iframe Listen for messages on this iframe.\r\n     * @param callback Invoke this callback with the message from the iframe.\r\n     */\r\n    function registerPostMessageCallback(iframe, callback) {\r\n        var iframeName = iframe.id,\r\n            fileId = getFileIdForIframeName(iframeName),\r\n            uuid = getUuid(fileId);\r\n\r\n        onloadCallbacks[uuid] = callback;\r\n\r\n        // When the iframe has loaded (after the server responds to an upload request)\r\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\r\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\r\n            if (handler.getInput(fileId)) {\r\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\r\n\r\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\r\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\r\n                    log(errorMessage, \"error\");\r\n                    callback({\r\n                        error: errorMessage\r\n                    });\r\n                }, 1000);\r\n            }\r\n        });\r\n\r\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\r\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\r\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\r\n            log(\"Received the following window message: '\" + message + \"'\");\r\n            var fileId = getFileIdForIframeName(iframeName),\r\n                response = handler._parseJsonResponse(message),\r\n                uuid = response.uuid,\r\n                onloadCallback;\r\n\r\n            if (uuid && onloadCallbacks[uuid]) {\r\n                log(\"Handling response for iframe name \" + iframeName);\r\n                clearTimeout(postMessageCallbackTimers[iframeName]);\r\n                delete postMessageCallbackTimers[iframeName];\r\n\r\n                handler._detachLoadEvent(iframeName);\r\n\r\n                onloadCallback = onloadCallbacks[uuid];\r\n\r\n                delete onloadCallbacks[uuid];\r\n                corsMessageReceiver.stopReceivingMessages(iframeName);\r\n                onloadCallback(response);\r\n            }\r\n            else if (!uuid) {\r\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\r\n            }\r\n        });\r\n    }\r\n\r\n    qq.extend(this, new qq.UploadHandler(spec));\r\n\r\n    qq.override(this, function(super_) {\r\n        return {\r\n            /**\r\n             * Adds File or Blob to the queue\r\n             **/\r\n            add: function(id, fileInput) {\r\n                super_.add(id, {input: fileInput});\r\n\r\n                fileInput.setAttribute(\"name\", inputName);\r\n\r\n                // remove file input from DOM\r\n                if (fileInput.parentNode) {\r\n                    qq(fileInput).remove();\r\n                }\r\n            },\r\n\r\n            expunge: function(id) {\r\n                expungeFile(id);\r\n                super_.expunge(id);\r\n            },\r\n\r\n            isValid: function(id) {\r\n                return super_.isValid(id) &&\r\n                    handler._getFileState(id).input !== undefined;\r\n            }\r\n        };\r\n    });\r\n\r\n    qq.extend(this, {\r\n        getInput: function(id) {\r\n            return handler._getFileState(id).input;\r\n        },\r\n\r\n        /**\r\n         * This function either delegates to a more specific message handler if CORS is involved,\r\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\r\n         * after determining if the content of the iframe is accessible.\r\n         *\r\n         * @param iframe Associated iframe\r\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\r\n         */\r\n        _attachLoadEvent: function(iframe, callback) {\r\n            /*jslint eqeq: true*/\r\n            var responseDescriptor;\r\n\r\n            if (isCors) {\r\n                registerPostMessageCallback(iframe, callback);\r\n            }\r\n            else {\r\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\r\n                    log(\"Received response for \" + iframe.id);\r\n\r\n                    // when we remove iframe from dom\r\n                    // the request stops, but in IE load\r\n                    // event fires\r\n                    if (!iframe.parentNode) {\r\n                        return;\r\n                    }\r\n\r\n                    try {\r\n                        // fixing Opera 10.53\r\n                        if (iframe.contentDocument &&\r\n                            iframe.contentDocument.body &&\r\n                            iframe.contentDocument.body.innerHTML == \"false\") {\r\n                            // In Opera event is fired second time\r\n                            // when body.innerHTML changed from false\r\n                            // to server response approx. after 1 sec\r\n                            // when we upload file with iframe\r\n                            return;\r\n                        }\r\n                    }\r\n                    catch (error) {\r\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\r\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\r\n                        responseDescriptor = {success: false};\r\n                    }\r\n\r\n                    callback(responseDescriptor);\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates an iframe with a specific document-unique name.\r\n         *\r\n         * @param id ID of the associated file\r\n         * @returns {HTMLIFrameElement}\r\n         */\r\n        _createIframe: function(id) {\r\n            var iframeName = handler._getIframeName(id);\r\n\r\n            return initIframeForUpload(iframeName);\r\n        },\r\n\r\n        /**\r\n         * Called when we are no longer interested in being notified when an iframe has loaded.\r\n         *\r\n         * @param id Associated file ID\r\n         */\r\n        _detachLoadEvent: function(id) {\r\n            if (detachLoadEvents[id] !== undefined) {\r\n                detachLoadEvents[id]();\r\n                delete detachLoadEvents[id];\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param fileId ID of the associated file\r\n         * @returns {string} The `document`-unique name of the iframe\r\n         */\r\n        _getIframeName: function(fileId) {\r\n            return fileId + \"_\" + formHandlerInstanceId;\r\n        },\r\n\r\n        /**\r\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\r\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\r\n         * that the form is hidden from view.\r\n         *\r\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\r\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\r\n         * @returns {HTMLFormElement} The created form\r\n         */\r\n        _initFormForUpload: function(spec) {\r\n            var method = spec.method,\r\n                endpoint = spec.endpoint,\r\n                params = spec.params,\r\n                paramsInBody = spec.paramsInBody,\r\n                targetName = spec.targetName,\r\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\r\n                url = endpoint;\r\n\r\n            if (paramsInBody) {\r\n                qq.obj2Inputs(params, form);\r\n            }\r\n            else {\r\n                url = qq.obj2url(params, endpoint);\r\n            }\r\n\r\n            form.setAttribute(\"action\", url);\r\n            form.setAttribute(\"target\", targetName);\r\n            form.style.display = \"none\";\r\n            document.body.appendChild(form);\r\n\r\n            return form;\r\n        },\r\n\r\n        /**\r\n         * @param innerHtmlOrMessage JSON message\r\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\r\n         */\r\n        _parseJsonResponse: function(innerHtmlOrMessage) {\r\n            var response = {};\r\n\r\n            try {\r\n                response = qq.parseJson(innerHtmlOrMessage);\r\n            }\r\n            catch (error) {\r\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\r\n            }\r\n\r\n            return response;\r\n        }\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\r\n * XHR upload handlers.\r\n *\r\n * @constructor\r\n */\r\nqq.XhrUploadHandler = function(spec) {\r\n    \"use strict\";\r\n\r\n    var handler = this,\r\n        namespace = spec.options.namespace,\r\n        proxy = spec.proxy,\r\n        chunking = spec.options.chunking,\r\n        getChunkSize = function(id) {\r\n            var fileState = handler._getFileState(id);\r\n\r\n            if (fileState.chunkSize) {\r\n                return fileState.chunkSize;\r\n            }\r\n\r\n            else {\r\n                var chunkSize = chunking.partSize;\r\n\r\n                if (qq.isFunction(chunkSize)) {\r\n                    chunkSize = chunkSize(id, getSize(id));\r\n                }\r\n\r\n                fileState.chunkSize = chunkSize;\r\n                return chunkSize;\r\n            }\r\n        },\r\n        resume = spec.options.resume,\r\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\r\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\r\n        getName = proxy.getName,\r\n        getSize = proxy.getSize,\r\n        getUuid = proxy.getUuid,\r\n        getEndpoint = proxy.getEndpoint,\r\n        getDataByUuid = proxy.getDataByUuid,\r\n        onUuidChanged = proxy.onUuidChanged,\r\n        onProgress = proxy.onProgress,\r\n        log = proxy.log,\r\n        getCustomResumeData = proxy.getCustomResumeData;\r\n\r\n    function abort(id) {\r\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\r\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\r\n\r\n            xhr.onreadystatechange = null;\r\n            xhr.upload.onprogress = null;\r\n            xhr.abort();\r\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\r\n        });\r\n    }\r\n\r\n    qq.extend(this, new qq.UploadHandler(spec));\r\n\r\n    qq.override(this, function(super_) {\r\n        return {\r\n            /**\r\n             * Adds File or Blob to the queue\r\n             **/\r\n            add: function(id, blobOrProxy) {\r\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\r\n                    super_.add(id, {file: blobOrProxy});\r\n                }\r\n                else if (blobOrProxy instanceof qq.BlobProxy) {\r\n                    super_.add(id, {proxy: blobOrProxy});\r\n                }\r\n                else {\r\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\r\n                }\r\n\r\n                handler._initTempState(id);\r\n                resumeEnabled && handler._maybePrepareForResume(id);\r\n            },\r\n\r\n            expunge: function(id) {\r\n                abort(id);\r\n                handler._maybeDeletePersistedChunkData(id);\r\n                handler._clearXhrs(id);\r\n                super_.expunge(id);\r\n            }\r\n        };\r\n    });\r\n\r\n    qq.extend(this, {\r\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\r\n        clearCachedChunk: function(id, chunkIdx) {\r\n            var fileState = handler._getFileState(id);\r\n\r\n            if (fileState) {\r\n                delete fileState.temp.cachedChunks[chunkIdx];\r\n            }\r\n        },\r\n\r\n        clearXhr: function(id, chunkIdx) {\r\n            var tempState = handler._getFileState(id).temp;\r\n\r\n            if (tempState.xhrs) {\r\n                delete tempState.xhrs[chunkIdx];\r\n            }\r\n            if (tempState.ajaxRequesters) {\r\n                delete tempState.ajaxRequesters[chunkIdx];\r\n            }\r\n        },\r\n\r\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\r\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\r\n        finalizeChunks: function(id, responseParser) {\r\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\r\n                xhr = handler._getXhr(id, lastChunkIdx);\r\n\r\n            if (responseParser) {\r\n                return new qq.Promise().success(responseParser(xhr), xhr);\r\n            }\r\n\r\n            return new qq.Promise().success({}, xhr);\r\n        },\r\n\r\n        getFile: function(id) {\r\n            return handler.isValid(id) && handler._getFileState(id).file;\r\n        },\r\n\r\n        getProxy: function(id) {\r\n            return handler.isValid(id) && handler._getFileState(id).proxy;\r\n        },\r\n\r\n        /**\r\n         * @returns {Array} Array of objects containing properties useful to integrators\r\n         * when it is important to determine which files are potentially resumable.\r\n         */\r\n        getResumableFilesData: function() {\r\n            var resumableFilesData = [];\r\n\r\n            handler._iterateResumeRecords(function(key, uploadData) {\r\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\r\n\r\n                var data = {\r\n                    name: uploadData.name,\r\n                    remaining: uploadData.chunking.remaining,\r\n                    size: uploadData.size,\r\n                    uuid: uploadData.uuid\r\n                };\r\n\r\n                if (uploadData.key) {\r\n                    data.key = uploadData.key;\r\n                }\r\n\r\n                if (uploadData.customResumeData) {\r\n                    data.customResumeData = uploadData.customResumeData;\r\n                }\r\n\r\n                resumableFilesData.push(data);\r\n            });\r\n\r\n            return resumableFilesData;\r\n        },\r\n\r\n        isAttemptingResume: function(id) {\r\n            return handler._getFileState(id).attemptingResume;\r\n        },\r\n\r\n        isResumable: function(id) {\r\n            return !!chunking && handler.isValid(id) &&\r\n                !handler._getFileState(id).notResumable;\r\n        },\r\n\r\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\r\n            var fileState = handler._getFileState(id) || {},\r\n                chunkingState =  fileState.chunking || {},\r\n                inProgress = optInProgress || chunkingState.inProgress,\r\n                remaining = optRemaining || chunkingState.remaining;\r\n\r\n            if (inProgress) {\r\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\r\n                inProgress.reverse();\r\n                qq.each(inProgress, function(idx, chunkIdx) {\r\n                    remaining.unshift(chunkIdx);\r\n                });\r\n                inProgress.length = 0;\r\n            }\r\n        },\r\n\r\n        pause: function(id) {\r\n            if (handler.isValid(id)) {\r\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\r\n                handler._getFileState(id).paused = true;\r\n                abort(id);\r\n                return true;\r\n            }\r\n        },\r\n\r\n        reevaluateChunking: function(id) {\r\n            if (chunking && handler.isValid(id)) {\r\n                var state = handler._getFileState(id),\r\n                    totalChunks,\r\n                    i;\r\n\r\n                delete state.chunking;\r\n\r\n                state.chunking = {};\r\n                totalChunks = handler._getTotalChunks(id);\r\n                if (totalChunks > 1 || chunking.mandatory) {\r\n                    state.chunking.enabled = true;\r\n                    state.chunking.parts = totalChunks;\r\n                    state.chunking.remaining = [];\r\n\r\n                    for (i = 0; i < totalChunks; i++) {\r\n                        state.chunking.remaining.push(i);\r\n                    }\r\n\r\n                    handler._initTempState(id);\r\n                }\r\n                else {\r\n                    state.chunking.enabled = false;\r\n                }\r\n            }\r\n        },\r\n\r\n        updateBlob: function(id, newBlob) {\r\n            if (handler.isValid(id)) {\r\n                handler._getFileState(id).file = newBlob;\r\n            }\r\n        },\r\n\r\n        _clearXhrs: function(id) {\r\n            var tempState = handler._getFileState(id).temp;\r\n\r\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\r\n                delete tempState.ajaxRequesters[chunkId];\r\n            });\r\n\r\n            qq.each(tempState.xhrs, function(chunkId) {\r\n                delete tempState.xhrs[chunkId];\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Creates an XHR instance for this file and stores it in the fileState.\r\n         *\r\n         * @param id File ID\r\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\r\n         * @returns {XMLHttpRequest}\r\n         */\r\n        _createXhr: function(id, optChunkIdx) {\r\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\r\n        },\r\n\r\n        _getAjaxRequester: function(id, optChunkIdx) {\r\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\r\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\r\n        },\r\n\r\n        _getChunkData: function(id, chunkIndex) {\r\n            var chunkSize = getChunkSize(id),\r\n                fileSize = getSize(id),\r\n                fileOrBlob = handler.getFile(id),\r\n                startBytes = chunkSize * chunkIndex,\r\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\r\n                totalChunks = handler._getTotalChunks(id),\r\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\r\n\r\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\r\n            // See https://github.com/FineUploader/fine-uploader/issues/937#issuecomment-41418760\r\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\r\n\r\n            cachedChunks[chunkIndex] = blob;\r\n\r\n            return {\r\n                part: chunkIndex,\r\n                start: startBytes,\r\n                end: endBytes,\r\n                count: totalChunks,\r\n                blob: blob,\r\n                size: endBytes - startBytes\r\n            };\r\n        },\r\n\r\n        _getChunkDataForCallback: function(chunkData) {\r\n            return {\r\n                partIndex: chunkData.part,\r\n                startByte: chunkData.start + 1,\r\n                endByte: chunkData.end,\r\n                totalParts: chunkData.count\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @param id File ID\r\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\r\n         */\r\n        _getLocalStorageId: function(id) {\r\n            var formatVersion = \"5.0\",\r\n                name = getName(id),\r\n                size = getSize(id),\r\n                chunkSize = getChunkSize(id),\r\n                endpoint = getEndpoint(id),\r\n                customKeys = resume.customKeys(id),\r\n                localStorageId = qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\r\n\r\n            customKeys.forEach(function(key) {\r\n                localStorageId += \"-\" + key;\r\n            });\r\n\r\n            return localStorageId;\r\n        },\r\n\r\n        _getMimeType: function(id) {\r\n            return handler.getFile(id).type;\r\n        },\r\n\r\n        _getPersistableData: function(id) {\r\n            return handler._getFileState(id).chunking;\r\n        },\r\n\r\n        /**\r\n         * @param id ID of the associated file\r\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\r\n         */\r\n        _getTotalChunks: function(id) {\r\n            if (chunking) {\r\n                var fileSize = getSize(id),\r\n                    chunkSize = getChunkSize(id);\r\n\r\n                return Math.ceil(fileSize / chunkSize);\r\n            }\r\n        },\r\n\r\n        _getXhr: function(id, optChunkIdx) {\r\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\r\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\r\n        },\r\n\r\n        _getXhrs: function(id) {\r\n            return handler._getFileState(id).temp.xhrs;\r\n        },\r\n\r\n        // Iterates through all XHR handler-created resume records (in local storage),\r\n        // invoking the passed callback and passing in the key and value of each local storage record.\r\n        _iterateResumeRecords: function(callback) {\r\n            if (resumeEnabled) {\r\n                qq.each(localStorage, function(key, item) {\r\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\r\n                        var uploadData = JSON.parse(item);\r\n                        callback(key, uploadData);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        _initTempState: function(id) {\r\n            handler._getFileState(id).temp = {\r\n                ajaxRequesters: {},\r\n                chunkProgress: {},\r\n                xhrs: {},\r\n                cachedChunks: {}\r\n            };\r\n        },\r\n\r\n        _markNotResumable: function(id) {\r\n            handler._getFileState(id).notResumable = true;\r\n        },\r\n\r\n        // Removes a chunked upload record from local storage, if possible.\r\n        // Returns true if the item was removed, false otherwise.\r\n        _maybeDeletePersistedChunkData: function(id) {\r\n            var localStorageId;\r\n\r\n            if (resumeEnabled && handler.isResumable(id)) {\r\n                localStorageId = handler._getLocalStorageId(id);\r\n\r\n                if (localStorageId && localStorage.getItem(localStorageId)) {\r\n                    localStorage.removeItem(localStorageId);\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\r\n        // so we can pick up from where we left off.\r\n        _maybePrepareForResume: function(id) {\r\n            var state = handler._getFileState(id),\r\n                localStorageId, persistedData;\r\n\r\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\r\n            // so prepare for a resume attempt.\r\n            if (resumeEnabled && state.key === undefined) {\r\n                localStorageId = handler._getLocalStorageId(id);\r\n                persistedData = localStorage.getItem(localStorageId);\r\n\r\n                // If we found this item in local storage, maybe we should resume it.\r\n                if (persistedData) {\r\n                    persistedData = JSON.parse(persistedData);\r\n\r\n                    // If we found a resume record but we have already handled this file in this session,\r\n                    // don't try to resume it & ensure we don't persist future check data\r\n                    if (getDataByUuid(persistedData.uuid)) {\r\n                        handler._markNotResumable(id);\r\n                    }\r\n                    else {\r\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\r\n\r\n                        onUuidChanged(id, persistedData.uuid);\r\n\r\n                        state.key = persistedData.key;\r\n                        state.chunking = persistedData.chunking;\r\n                        state.loaded = persistedData.loaded;\r\n                        state.customResumeData = persistedData.customResumeData;\r\n                        state.attemptingResume = true;\r\n\r\n                        handler.moveInProgressToRemaining(id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        // Persist any data needed to resume this upload in a new session.\r\n        _maybePersistChunkedState: function(id) {\r\n            var state = handler._getFileState(id),\r\n                localStorageId, persistedData;\r\n\r\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\r\n            if (resumeEnabled && handler.isResumable(id)) {\r\n                var customResumeData = getCustomResumeData(id);\r\n\r\n                localStorageId = handler._getLocalStorageId(id);\r\n\r\n                persistedData = {\r\n                    name: getName(id),\r\n                    size: getSize(id),\r\n                    uuid: getUuid(id),\r\n                    key: state.key,\r\n                    chunking: state.chunking,\r\n                    loaded: state.loaded,\r\n                    lastUpdated: Date.now(),\r\n                };\r\n\r\n                if (customResumeData) {\r\n                    persistedData.customResumeData = customResumeData;\r\n                }\r\n\r\n                try {\r\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\r\n                }\r\n                catch (error) {\r\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\r\n                }\r\n            }\r\n        },\r\n\r\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\r\n            var xhr = handler._getXhr(id, chunkIdx),\r\n                name = getName(id),\r\n                progressCalculator = {\r\n                    simple: function(loaded, total) {\r\n                        var fileSize = getSize(id);\r\n\r\n                        if (loaded === total) {\r\n                            onProgress(id, name, fileSize, fileSize);\r\n                        }\r\n                        else {\r\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\r\n                        }\r\n                    },\r\n\r\n                    chunked: function(loaded, total) {\r\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\r\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\r\n                            loadedForRequest = loaded,\r\n                            totalForRequest = total,\r\n                            totalFileSize = getSize(id),\r\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\r\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\r\n\r\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\r\n\r\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\r\n                            totalLoadedForFile += chunkLoaded;\r\n                        });\r\n\r\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\r\n                    }\r\n                };\r\n\r\n            xhr.upload.onprogress = function(e) {\r\n                if (e.lengthComputable) {\r\n                    /* jshint eqnull: true */\r\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\r\n                    progressCalculator[type](e.loaded, e.total);\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Registers an XHR transport instance created elsewhere.\r\n         *\r\n         * @param id ID of the associated file\r\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\r\n         * @param xhr XMLHttpRequest object instance\r\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\r\n         * @returns {XMLHttpRequest}\r\n         */\r\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\r\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\r\n                tempState = handler._getFileState(id).temp;\r\n\r\n            tempState.xhrs = tempState.xhrs || {};\r\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\r\n\r\n            tempState.xhrs[xhrsId] = xhr;\r\n\r\n            if (optAjaxRequester) {\r\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\r\n            }\r\n\r\n            return xhr;\r\n        },\r\n\r\n        // Deletes any local storage records that are \"expired\".\r\n        _removeExpiredChunkingRecords: function() {\r\n            var expirationDays = resume.recordsExpireIn;\r\n\r\n            handler._iterateResumeRecords(function(key, uploadData) {\r\n                var expirationDate = new Date(uploadData.lastUpdated);\r\n\r\n                // transform updated date into expiration date\r\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\r\n\r\n                if (expirationDate.getTime() <= Date.now()) {\r\n                    log(\"Removing expired resume record with key \" + key);\r\n                    localStorage.removeItem(key);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Determine if the associated file should be chunked.\r\n         *\r\n         * @param id ID of the associated file\r\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\r\n         */\r\n        _shouldChunkThisFile: function(id) {\r\n            var state = handler._getFileState(id);\r\n\r\n            // file may no longer be available if it was recently cancelled\r\n            if (state) {\r\n                if (!state.chunking) {\r\n                    handler.reevaluateChunking(id);\r\n                }\r\n\r\n                return state.chunking.enabled;\r\n            }\r\n        }\r\n    });\r\n};\r\n","/*globals qq, XMLHttpRequest*/\r\nqq.DeleteFileAjaxRequester = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        options = {\r\n            method: \"DELETE\",\r\n            uuidParamName: \"qquuid\",\r\n            endpointStore: {},\r\n            maxConnections: 3,\r\n            customHeaders: function(id) {return {};},\r\n            paramsStore: {},\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false\r\n            },\r\n            log: function(str, level) {},\r\n            onDelete: function(id) {},\r\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\r\n        };\r\n\r\n    qq.extend(options, o);\r\n\r\n    function getMandatedParams() {\r\n        if (options.method.toUpperCase() === \"POST\") {\r\n            return {\r\n                _method: \"DELETE\"\r\n            };\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        acceptHeader: \"application/json\",\r\n        validMethods: [\"POST\", \"DELETE\"],\r\n        method: options.method,\r\n        endpointStore: options.endpointStore,\r\n        paramsStore: options.paramsStore,\r\n        mandatedParams: getMandatedParams(),\r\n        maxConnections: options.maxConnections,\r\n        customHeaders: function(id) {\r\n            return options.customHeaders.get(id);\r\n        },\r\n        log: options.log,\r\n        onSend: options.onDelete,\r\n        onComplete: options.onDeleteComplete,\r\n        cors: options.cors\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        sendDelete: function(id, uuid, additionalMandatedParams) {\r\n            var additionalOptions = additionalMandatedParams || {};\r\n\r\n            options.log(\"Submitting delete file request for \" + id);\r\n\r\n            if (options.method === \"DELETE\") {\r\n                requester.initTransport(id)\r\n                    .withPath(uuid)\r\n                    .withParams(additionalOptions)\r\n                    .send();\r\n            }\r\n            else {\r\n                additionalOptions[options.uuidParamName] = uuid;\r\n                requester.initTransport(id)\r\n                    .withParams(additionalOptions)\r\n                    .send();\r\n            }\r\n        }\r\n    });\r\n};\r\n","/*global qq, define */\r\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\r\n/**\r\n * Mega pixel image rendering library for iOS6+\r\n *\r\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\r\n * which causes unexpected subsampling when drawing it in canvas.\r\n * By using this library, you can safely render the image with proper stretching.\r\n *\r\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\r\n * Released under the MIT license\r\n *\r\n * Heavily modified by Widen for Fine Uploader\r\n */\r\n(function() {\r\n\r\n    /**\r\n     * Detect subsampling in loaded image.\r\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\r\n     */\r\n    function detectSubsampling(img) {\r\n        var iw = img.naturalWidth,\r\n            ih = img.naturalHeight,\r\n            canvas = document.createElement(\"canvas\"),\r\n            ctx;\r\n\r\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\r\n            canvas.width = canvas.height = 1;\r\n            ctx = canvas.getContext(\"2d\");\r\n            ctx.drawImage(img, -iw + 1, 0);\r\n            // subsampled image becomes half smaller in rendering size.\r\n            // check alpha channel value to confirm image is covering edge pixel or not.\r\n            // if alpha value is 0 image is not covering, hence subsampled.\r\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Detecting vertical squash in loaded image.\r\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\r\n     */\r\n    function detectVerticalSquash(img, iw, ih) {\r\n        var canvas = document.createElement(\"canvas\"),\r\n            sy = 0,\r\n            ey = ih,\r\n            py = ih,\r\n            ctx, data, alpha, ratio;\r\n\r\n        canvas.width = 1;\r\n        canvas.height = ih;\r\n        ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0);\r\n        data = ctx.getImageData(0, 0, 1, ih).data;\r\n\r\n        // search image edge pixel position in case it is squashed vertically.\r\n        while (py > sy) {\r\n            alpha = data[(py - 1) * 4 + 3];\r\n            if (alpha === 0) {\r\n                ey = py;\r\n            } else {\r\n                sy = py;\r\n            }\r\n            py = (ey + sy) >> 1;\r\n        }\r\n\r\n        ratio = (py / ih);\r\n        return (ratio === 0) ? 1 : ratio;\r\n    }\r\n\r\n    /**\r\n     * Rendering image element (with resizing) and get its data URL\r\n     */\r\n    function renderImageToDataURL(img, blob, options, doSquash) {\r\n        var canvas = document.createElement(\"canvas\"),\r\n            mime = options.mime || \"image/jpeg\",\r\n            promise = new qq.Promise();\r\n\r\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\r\n            .then(function() {\r\n                promise.success(\r\n                    canvas.toDataURL(mime, options.quality || 0.8)\r\n                );\r\n            });\r\n\r\n        return promise;\r\n    }\r\n\r\n    function maybeCalculateDownsampledDimensions(spec) {\r\n        var maxPixels = 5241000; //iOS specific value\r\n\r\n        if (!qq.ios()) {\r\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\r\n        }\r\n\r\n        if (spec.origHeight * spec.origWidth > maxPixels) {\r\n            return {\r\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\r\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Rendering image element (with resizing) into the canvas element\r\n     */\r\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\r\n        var iw = img.naturalWidth,\r\n            ih = img.naturalHeight,\r\n            width = options.width,\r\n            height = options.height,\r\n            ctx = canvas.getContext(\"2d\"),\r\n            promise = new qq.Promise(),\r\n            modifiedDimensions;\r\n\r\n        ctx.save();\r\n\r\n        if (options.resize) {\r\n            return renderImageToCanvasWithCustomResizer({\r\n                blob: blob,\r\n                canvas: canvas,\r\n                image: img,\r\n                imageHeight: ih,\r\n                imageWidth: iw,\r\n                orientation: options.orientation,\r\n                resize: options.resize,\r\n                targetHeight: height,\r\n                targetWidth: width\r\n            });\r\n        }\r\n\r\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\r\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\r\n                origWidth: width,\r\n                origHeight: height\r\n            });\r\n\r\n            if (modifiedDimensions) {\r\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\r\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\r\n                    \"warn\");\r\n\r\n                width = modifiedDimensions.newWidth;\r\n                height = modifiedDimensions.newHeight;\r\n            }\r\n        }\r\n\r\n        transformCoordinate(canvas, width, height, options.orientation);\r\n\r\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\r\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\r\n        if (qq.ios()) {\r\n            (function() {\r\n                if (detectSubsampling(img)) {\r\n                    iw /= 2;\r\n                    ih /= 2;\r\n                }\r\n\r\n                var d = 1024, // size of tiling canvas\r\n                    tmpCanvas = document.createElement(\"canvas\"),\r\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\r\n                    dw = Math.ceil(d * width / iw),\r\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\r\n                    sy = 0,\r\n                    dy = 0,\r\n                    tmpCtx, sx, dx;\r\n\r\n                tmpCanvas.width = tmpCanvas.height = d;\r\n                tmpCtx = tmpCanvas.getContext(\"2d\");\r\n\r\n                while (sy < ih) {\r\n                    sx = 0;\r\n                    dx = 0;\r\n                    while (sx < iw) {\r\n                        tmpCtx.clearRect(0, 0, d, d);\r\n                        tmpCtx.drawImage(img, -sx, -sy);\r\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\r\n                        sx += d;\r\n                        dx += dw;\r\n                    }\r\n                    sy += d;\r\n                    dy += dh;\r\n                }\r\n                ctx.restore();\r\n                tmpCanvas = tmpCtx = null;\r\n            }());\r\n        }\r\n        else {\r\n            ctx.drawImage(img, 0, 0, width, height);\r\n        }\r\n\r\n        canvas.qqImageRendered && canvas.qqImageRendered();\r\n        promise.success();\r\n\r\n        return promise;\r\n    }\r\n\r\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\r\n        var blob = resizeInfo.blob,\r\n            image = resizeInfo.image,\r\n            imageHeight = resizeInfo.imageHeight,\r\n            imageWidth = resizeInfo.imageWidth,\r\n            orientation = resizeInfo.orientation,\r\n            promise = new qq.Promise(),\r\n            resize = resizeInfo.resize,\r\n            sourceCanvas = document.createElement(\"canvas\"),\r\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\r\n            targetCanvas = resizeInfo.canvas,\r\n            targetHeight = resizeInfo.targetHeight,\r\n            targetWidth = resizeInfo.targetWidth;\r\n\r\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\r\n\r\n        targetCanvas.height = targetHeight;\r\n        targetCanvas.width = targetWidth;\r\n\r\n        sourceCanvasContext.drawImage(image, 0, 0);\r\n\r\n        resize({\r\n            blob: blob,\r\n            height: targetHeight,\r\n            image: image,\r\n            sourceCanvas: sourceCanvas,\r\n            targetCanvas: targetCanvas,\r\n            width: targetWidth\r\n        })\r\n            .then(\r\n                function success() {\r\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\r\n                    promise.success();\r\n                },\r\n                promise.failure\r\n            );\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Transform canvas coordination according to specified frame size and orientation\r\n     * Orientation value is from EXIF tag\r\n     */\r\n    function transformCoordinate(canvas, width, height, orientation) {\r\n        switch (orientation) {\r\n            case 5:\r\n            case 6:\r\n            case 7:\r\n            case 8:\r\n                canvas.width = height;\r\n                canvas.height = width;\r\n                break;\r\n            default:\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n        }\r\n        var ctx = canvas.getContext(\"2d\");\r\n        switch (orientation) {\r\n            case 2:\r\n                // horizontal flip\r\n                ctx.translate(width, 0);\r\n                ctx.scale(-1, 1);\r\n                break;\r\n            case 3:\r\n                // 180 rotate left\r\n                ctx.translate(width, height);\r\n                ctx.rotate(Math.PI);\r\n                break;\r\n            case 4:\r\n                // vertical flip\r\n                ctx.translate(0, height);\r\n                ctx.scale(1, -1);\r\n                break;\r\n            case 5:\r\n                // vertical flip + 90 rotate right\r\n                ctx.rotate(0.5 * Math.PI);\r\n                ctx.scale(1, -1);\r\n                break;\r\n            case 6:\r\n                // 90 rotate right\r\n                ctx.rotate(0.5 * Math.PI);\r\n                ctx.translate(0, -height);\r\n                break;\r\n            case 7:\r\n                // horizontal flip + 90 rotate right\r\n                ctx.rotate(0.5 * Math.PI);\r\n                ctx.translate(width, -height);\r\n                ctx.scale(-1, 1);\r\n                break;\r\n            case 8:\r\n                // 90 rotate left\r\n                ctx.rotate(-0.5 * Math.PI);\r\n                ctx.translate(-width, 0);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * MegaPixImage class\r\n     */\r\n    function MegaPixImage(srcImage, errorCallback) {\r\n        var self = this;\r\n\r\n        if (window.Blob && srcImage instanceof Blob) {\r\n            (function() {\r\n                var img = new Image(),\r\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\r\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\r\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\r\n                img.src = URL.createObjectURL(srcImage);\r\n                self.blob = srcImage;\r\n                srcImage = img;\r\n            }());\r\n        }\r\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\r\n            srcImage.onload = function() {\r\n                var listeners = self.imageLoadListeners;\r\n                if (listeners) {\r\n                    self.imageLoadListeners = null;\r\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\r\n                    // so let's push this to the end of the UI thread queue.\r\n                    setTimeout(function() {\r\n                        for (var i = 0, len = listeners.length; i < len; i++) {\r\n                            listeners[i]();\r\n                        }\r\n                    }, 0);\r\n                }\r\n            };\r\n            srcImage.onerror = errorCallback;\r\n            this.imageLoadListeners = [];\r\n        }\r\n        this.srcImage = srcImage;\r\n    }\r\n\r\n    /**\r\n     * Rendering megapix image into specified target element\r\n     */\r\n    MegaPixImage.prototype.render = function(target, options) {\r\n        options = options || {};\r\n\r\n        var self = this,\r\n            imgWidth = this.srcImage.naturalWidth,\r\n            imgHeight = this.srcImage.naturalHeight,\r\n            width = options.width,\r\n            height = options.height,\r\n            maxWidth = options.maxWidth,\r\n            maxHeight = options.maxHeight,\r\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\r\n            tagName = target.tagName.toLowerCase(),\r\n            opt;\r\n\r\n        if (this.imageLoadListeners) {\r\n            this.imageLoadListeners.push(function() { self.render(target, options); });\r\n            return;\r\n        }\r\n\r\n        if (width && !height) {\r\n            height = (imgHeight * width / imgWidth) << 0;\r\n        } else if (height && !width) {\r\n            width = (imgWidth * height / imgHeight) << 0;\r\n        } else {\r\n            width = imgWidth;\r\n            height = imgHeight;\r\n        }\r\n        if (maxWidth && width > maxWidth) {\r\n            width = maxWidth;\r\n            height = (imgHeight * width / imgWidth) << 0;\r\n        }\r\n        if (maxHeight && height > maxHeight) {\r\n            height = maxHeight;\r\n            width = (imgWidth * height / imgHeight) << 0;\r\n        }\r\n\r\n        opt = { width: width, height: height },\r\n        qq.each(options, function(optionsKey, optionsValue) {\r\n            opt[optionsKey] = optionsValue;\r\n        });\r\n\r\n        if (tagName === \"img\") {\r\n            (function() {\r\n                var oldTargetSrc = target.src;\r\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\r\n                    .then(function(dataUri) {\r\n                        target.src = dataUri;\r\n                        oldTargetSrc === target.src && target.onload && target.onload();\r\n                    });\r\n            }());\r\n        } else if (tagName === \"canvas\") {\r\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\r\n        }\r\n        if (typeof this.onrender === \"function\") {\r\n            this.onrender(target);\r\n        }\r\n    };\r\n\r\n    qq.MegaPixImage = MegaPixImage;\r\n})();\r\n","/*globals qq */\r\n/**\r\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\r\n *\r\n * @constructor\r\n */\r\nqq.ImageGenerator = function(log) {\r\n    \"use strict\";\r\n\r\n    function isImg(el) {\r\n        return el.tagName.toLowerCase() === \"img\";\r\n    }\r\n\r\n    function isCanvas(el) {\r\n        return el.tagName.toLowerCase() === \"canvas\";\r\n    }\r\n\r\n    function isImgCorsSupported() {\r\n        return new Image().crossOrigin !== undefined;\r\n    }\r\n\r\n    function isCanvasSupported() {\r\n        var canvas = document.createElement(\"canvas\");\r\n\r\n        return canvas.getContext && canvas.getContext(\"2d\");\r\n    }\r\n\r\n    // This is only meant to determine the MIME type of a renderable image file.\r\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\r\n    // are rendered correctly, among other things.\r\n    function determineMimeOfFileName(nameWithPath) {\r\n        /*jshint -W015 */\r\n        var pathSegments = nameWithPath.split(\"/\"),\r\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\r\n            extension = qq.getExtension(name);\r\n\r\n        extension = extension && extension.toLowerCase();\r\n\r\n        switch (extension) {\r\n            case \"jpeg\":\r\n            case \"jpg\":\r\n                return \"image/jpeg\";\r\n            case \"png\":\r\n                return \"image/png\";\r\n            case \"bmp\":\r\n                return \"image/bmp\";\r\n            case \"gif\":\r\n                return \"image/gif\";\r\n            case \"tiff\":\r\n            case \"tif\":\r\n                return \"image/tiff\";\r\n        }\r\n    }\r\n\r\n    // This will likely not work correctly in IE8 and older.\r\n    // It's only used as part of a formula to determine\r\n    // if a canvas can be used to scale a server-hosted thumbnail.\r\n    // If canvas isn't supported by the UA (IE8 and older)\r\n    // this method should not even be called.\r\n    function isCrossOrigin(url) {\r\n        var targetAnchor = document.createElement(\"a\"),\r\n            targetProtocol, targetHostname, targetPort;\r\n\r\n        targetAnchor.href = url;\r\n\r\n        targetProtocol = targetAnchor.protocol;\r\n        targetPort = targetAnchor.port;\r\n        targetHostname = targetAnchor.hostname;\r\n\r\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\r\n            return true;\r\n        }\r\n\r\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\r\n            return true;\r\n        }\r\n\r\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\r\n        if (targetPort !== window.location.port && !qq.ie()) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function registerImgLoadListeners(img, promise) {\r\n        img.onload = function() {\r\n            img.onload = null;\r\n            img.onerror = null;\r\n            promise.success(img);\r\n        };\r\n\r\n        img.onerror = function() {\r\n            img.onload = null;\r\n            img.onerror = null;\r\n            log(\"Problem drawing thumbnail!\", \"error\");\r\n            promise.failure(img, \"Problem drawing thumbnail!\");\r\n        };\r\n    }\r\n\r\n    function registerCanvasDrawImageListener(canvas, promise) {\r\n        // The image is drawn on the canvas by a third-party library,\r\n        // and we want to know when this is completed.  Since the library\r\n        // may invoke drawImage many times in a loop, we need to be called\r\n        // back when the image is fully rendered.  So, we are expecting the\r\n        // code that draws this image to follow a convention that involves a\r\n        // function attached to the canvas instance be invoked when it is done.\r\n        canvas.qqImageRendered = function() {\r\n            promise.success(canvas);\r\n        };\r\n    }\r\n\r\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\r\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\r\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\r\n    // attempt was not successful.\r\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\r\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\r\n\r\n        if (isImg(imgOrCanvas)) {\r\n            registerImgLoadListeners(imgOrCanvas, promise);\r\n        }\r\n        else if (isCanvas(imgOrCanvas)) {\r\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\r\n        }\r\n        else {\r\n            promise.failure(imgOrCanvas);\r\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\r\n        }\r\n\r\n        return registered;\r\n    }\r\n\r\n    // Draw a preview iff the current UA can natively display it.\r\n    // Also rotate the image if necessary.\r\n    function draw(fileOrBlob, container, options) {\r\n        var drawPreview = new qq.Promise(),\r\n            identifier = new qq.Identify(fileOrBlob, log),\r\n            maxSize = options.maxSize,\r\n            // jshint eqnull:true\r\n            orient = options.orient == null ? true : options.orient,\r\n            megapixErrorHandler = function() {\r\n                container.onerror = null;\r\n                container.onload = null;\r\n                log(\"Could not render preview, file may be too large!\", \"error\");\r\n                drawPreview.failure(container, \"Browser cannot render image!\");\r\n            };\r\n\r\n        identifier.isPreviewable().then(\r\n            function(mime) {\r\n                // If options explicitly specify that Orientation is not desired,\r\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\r\n                var dummyExif = {\r\n                        parse: function() {\r\n                            return new qq.Promise().success();\r\n                        }\r\n                    },\r\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\r\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\r\n\r\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\r\n                    exif.parse().then(\r\n                        function(exif) {\r\n                            var orientation = exif && exif.Orientation;\r\n\r\n                            mpImg.render(container, {\r\n                                maxWidth: maxSize,\r\n                                maxHeight: maxSize,\r\n                                orientation: orientation,\r\n                                mime: mime,\r\n                                resize: options.customResizeFunction\r\n                            });\r\n                        },\r\n\r\n                        function(failureMsg) {\r\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\r\n\r\n                            mpImg.render(container, {\r\n                                maxWidth: maxSize,\r\n                                maxHeight: maxSize,\r\n                                mime: mime,\r\n                                resize: options.customResizeFunction\r\n                            });\r\n                        }\r\n                    );\r\n                }\r\n            },\r\n\r\n            function() {\r\n                log(\"Not previewable\");\r\n                drawPreview.failure(container, \"Not previewable\");\r\n            }\r\n        );\r\n\r\n        return drawPreview;\r\n    }\r\n\r\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\r\n        var tempImg = new Image(),\r\n            tempImgRender = new qq.Promise();\r\n\r\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\r\n\r\n        if (isCrossOrigin(url)) {\r\n            tempImg.crossOrigin = \"anonymous\";\r\n        }\r\n\r\n        tempImg.src = url;\r\n\r\n        tempImgRender.then(\r\n            function rendered() {\r\n                registerThumbnailRenderedListener(canvasOrImg, draw);\r\n\r\n                var mpImg = new qq.MegaPixImage(tempImg);\r\n                mpImg.render(canvasOrImg, {\r\n                    maxWidth: maxSize,\r\n                    maxHeight: maxSize,\r\n                    mime: determineMimeOfFileName(url),\r\n                    resize: customResizeFunction\r\n                });\r\n            },\r\n\r\n            draw.failure\r\n        );\r\n    }\r\n\r\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\r\n        registerThumbnailRenderedListener(img, draw);\r\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\r\n        // that must drop back to CSS is known and exploited by the templating module.\r\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\r\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\r\n        qq(img).css({\r\n            maxWidth: maxSize + \"px\",\r\n            maxHeight: maxSize + \"px\"\r\n        });\r\n\r\n        img.src = url;\r\n    }\r\n\r\n    // Draw a (server-hosted) thumbnail given a URL.\r\n    // This will optionally scale the thumbnail as well.\r\n    // It attempts to use <canvas> to scale, but will fall back\r\n    // to max-width and max-height style properties if the UA\r\n    // doesn't support canvas or if the images is cross-domain and\r\n    // the UA doesn't support the crossorigin attribute on img tags,\r\n    // which is required to scale a cross-origin image using <canvas> &\r\n    // then export it back to an <img>.\r\n    function drawFromUrl(url, container, options) {\r\n        var draw = new qq.Promise(),\r\n            scale = options.scale,\r\n            maxSize = scale ? options.maxSize : null;\r\n\r\n        // container is an img, scaling needed\r\n        if (scale && isImg(container)) {\r\n            // Iff canvas is available in this UA, try to use it for scaling.\r\n            // Otherwise, fall back to CSS scaling\r\n            if (isCanvasSupported()) {\r\n                // Attempt to use <canvas> for image scaling,\r\n                // but we must fall back to scaling via CSS/styles\r\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\r\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\r\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\r\n                }\r\n                else {\r\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\r\n                }\r\n            }\r\n            else {\r\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\r\n            }\r\n        }\r\n        // container is a canvas, scaling optional\r\n        else if (isCanvas(container)) {\r\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\r\n        }\r\n        // container is an img & no scaling: just set the src attr to the passed url\r\n        else if (registerThumbnailRenderedListener(container, draw)) {\r\n            container.src = url;\r\n        }\r\n\r\n        return draw;\r\n    }\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\r\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\r\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\r\n         *\r\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\r\n         * @param container <img> or <canvas> to contain the preview\r\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\r\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\r\n         */\r\n        generate: function(fileBlobOrUrl, container, options) {\r\n            if (qq.isString(fileBlobOrUrl)) {\r\n                log(\"Attempting to update thumbnail based on server response.\");\r\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\r\n            }\r\n            else {\r\n                log(\"Attempting to draw client-side image preview.\");\r\n                return draw(fileBlobOrUrl, container, options || {});\r\n            }\r\n        }\r\n    });\r\n\r\n    /*<testing>*/\r\n    this._testing = {};\r\n    this._testing.isImg = isImg;\r\n    this._testing.isCanvas = isCanvas;\r\n    this._testing.isCrossOrigin = isCrossOrigin;\r\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\r\n    /*</testing>*/\r\n};\r\n","/*globals qq */\r\n/**\r\n * EXIF image data parser.  Currently only parses the Orientation tag value,\r\n * but this may be expanded to other tags in the future.\r\n *\r\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\r\n * @constructor\r\n */\r\nqq.Exif = function(fileOrBlob, log) {\r\n    \"use strict\";\r\n\r\n    // Orientation is the only tag parsed here at this time.\r\n    var TAG_IDS = [274],\r\n        TAG_INFO = {\r\n            274: {\r\n                name: \"Orientation\",\r\n                bytes: 2\r\n            }\r\n        };\r\n\r\n    // Convert a little endian (hex string) to big endian (decimal).\r\n    function parseLittleEndian(hex) {\r\n        var result = 0,\r\n            pow = 0;\r\n\r\n        while (hex.length > 0) {\r\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\r\n            hex = hex.substring(2, hex.length);\r\n            pow += 8;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // Find the byte offset, of Application Segment 1 (EXIF).\r\n    // External callers need not supply any arguments.\r\n    function seekToApp1(offset, promise) {\r\n        var theOffset = offset,\r\n            thePromise = promise;\r\n        if (theOffset === undefined) {\r\n            theOffset = 2;\r\n            thePromise = new qq.Promise();\r\n        }\r\n\r\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\r\n            var match = /^ffe([0-9])/.exec(hex),\r\n                segmentLength;\r\n\r\n            if (match) {\r\n                if (match[1] !== \"1\") {\r\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\r\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\r\n                }\r\n                else {\r\n                    thePromise.success(theOffset);\r\n                }\r\n            }\r\n            else {\r\n                thePromise.failure(\"No EXIF header to be found!\");\r\n            }\r\n        });\r\n\r\n        return thePromise;\r\n    }\r\n\r\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\r\n    function getApp1Offset() {\r\n        var promise = new qq.Promise();\r\n\r\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\r\n            if (hex.indexOf(\"ffd8\") !== 0) {\r\n                promise.failure(\"Not a valid JPEG!\");\r\n            }\r\n            else {\r\n                seekToApp1().then(function(offset) {\r\n                    promise.success(offset);\r\n                },\r\n                function(error) {\r\n                    promise.failure(error);\r\n                });\r\n            }\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    // Determine the byte ordering of the EXIF header.\r\n    function isLittleEndian(app1Start) {\r\n        var promise = new qq.Promise();\r\n\r\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\r\n            promise.success(hex === \"4949\");\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    // Determine the number of directory entries in the EXIF header.\r\n    function getDirEntryCount(app1Start, littleEndian) {\r\n        var promise = new qq.Promise();\r\n\r\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\r\n            if (littleEndian) {\r\n                return promise.success(parseLittleEndian(hex));\r\n            }\r\n            else {\r\n                promise.success(parseInt(hex, 16));\r\n            }\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    // Get the IFD portion of the EXIF header as a hex string.\r\n    function getIfd(app1Start, dirEntries) {\r\n        var offset = app1Start + 20,\r\n            bytes = dirEntries * 12;\r\n\r\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\r\n    }\r\n\r\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\r\n    function getDirEntries(ifdHex) {\r\n        var entries = [],\r\n            offset = 0;\r\n\r\n        while (offset + 24 <= ifdHex.length) {\r\n            entries.push(ifdHex.slice(offset, offset + 24));\r\n            offset += 24;\r\n        }\r\n\r\n        return entries;\r\n    }\r\n\r\n    // Obtain values for all relevant tags and return them.\r\n    function getTagValues(littleEndian, dirEntries) {\r\n        var TAG_VAL_OFFSET = 16,\r\n            tagsToFind = qq.extend([], TAG_IDS),\r\n            vals = {};\r\n\r\n        qq.each(dirEntries, function(idx, entry) {\r\n            var idHex = entry.slice(0, 4),\r\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\r\n                tagsToFindIdx = tagsToFind.indexOf(id),\r\n                tagValHex, tagName, tagValLength;\r\n\r\n            if (tagsToFindIdx >= 0) {\r\n                tagName = TAG_INFO[id].name;\r\n                tagValLength = TAG_INFO[id].bytes;\r\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\r\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\r\n\r\n                tagsToFind.splice(tagsToFindIdx, 1);\r\n            }\r\n\r\n            if (tagsToFind.length === 0) {\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return vals;\r\n    }\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\r\n         *\r\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\r\n         * If successful, the parsed EXIF header as an object will be included.\r\n         */\r\n        parse: function() {\r\n            var parser = new qq.Promise(),\r\n                onParseFailure = function(message) {\r\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\r\n                    parser.failure(message);\r\n                };\r\n\r\n            getApp1Offset().then(function(app1Offset) {\r\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\r\n\r\n                isLittleEndian(app1Offset).then(function(littleEndian) {\r\n\r\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\r\n\r\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\r\n\r\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\r\n\r\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\r\n                            var dirEntries = getDirEntries(ifdHex),\r\n                                tagValues = getTagValues(littleEndian, dirEntries);\r\n\r\n                            log(\"Successfully parsed some EXIF tags\");\r\n\r\n                            parser.success(tagValues);\r\n                        }, onParseFailure);\r\n                    }, onParseFailure);\r\n                }, onParseFailure);\r\n            }, onParseFailure);\r\n\r\n            return parser;\r\n        }\r\n    });\r\n\r\n    /*<testing>*/\r\n    this._testing = {};\r\n    this._testing.parseLittleEndian = parseLittleEndian;\r\n    /*</testing>*/\r\n};\r\n","/*globals qq */\r\nqq.Identify = function(fileOrBlob, log) {\r\n    \"use strict\";\r\n\r\n    function isIdentifiable(magicBytes, questionableBytes) {\r\n        var identifiable = false,\r\n            magicBytesEntries = [].concat(magicBytes);\r\n\r\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\r\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\r\n                identifiable = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return identifiable;\r\n    }\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\r\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\r\n         * file, we will examine the blob's type attribute to save CPU cycles.\r\n         *\r\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\r\n         * If successful, the MIME string is passed to the success handler.\r\n         */\r\n        isPreviewable: function() {\r\n            var self = this,\r\n                identifier = new qq.Promise(),\r\n                previewable = false,\r\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\r\n\r\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\r\n\r\n            log(\"First pass: check type attribute of blob object.\");\r\n\r\n            if (this.isPreviewableSync()) {\r\n                log(\"Second pass: check for magic bytes in file header.\");\r\n\r\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\r\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\r\n                        if (isIdentifiable(bytes, hex)) {\r\n                            // Safari is the only supported browser that can deal with TIFFs natively,\r\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\r\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\r\n                                previewable = true;\r\n                                identifier.success(mime);\r\n                            }\r\n\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\r\n\r\n                    if (!previewable) {\r\n                        identifier.failure();\r\n                    }\r\n                },\r\n                function() {\r\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\r\n                    identifier.failure();\r\n                });\r\n            }\r\n            else {\r\n                identifier.failure();\r\n            }\r\n\r\n            return identifier;\r\n        },\r\n\r\n        /**\r\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\r\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\r\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\r\n         * file's magic bytes.\r\n         *\r\n         * @returns {Boolean} true if the blob can be rendered in the current browser\r\n         */\r\n        isPreviewableSync: function() {\r\n            var fileMime = fileOrBlob.type,\r\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\r\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\r\n                previewable = false,\r\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\r\n\r\n            if (isRecognizedImage) {\r\n                if (fileMime === \"image/tiff\") {\r\n                    previewable = qq.supportedFeatures.tiffPreviews;\r\n                }\r\n                else {\r\n                    previewable = true;\r\n                }\r\n            }\r\n\r\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\r\n\r\n            return previewable;\r\n        }\r\n    });\r\n};\r\n\r\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\r\n    \"image/jpeg\": \"ffd8ff\",\r\n    \"image/gif\": \"474946\",\r\n    \"image/png\": \"89504e\",\r\n    \"image/bmp\": \"424d\",\r\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Attempts to validate an image, wherever possible.\r\n *\r\n * @param blob File or Blob representing a user-selecting image.\r\n * @param log Uses this to post log messages to the console.\r\n * @constructor\r\n */\r\nqq.ImageValidation = function(blob, log) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param limits Object with possible image-related limits to enforce.\r\n     * @returns {boolean} true if at least one of the limits has a non-zero value\r\n     */\r\n    function hasNonZeroLimits(limits) {\r\n        var atLeastOne = false;\r\n\r\n        qq.each(limits, function(limit, value) {\r\n            if (value > 0) {\r\n                atLeastOne = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return atLeastOne;\r\n    }\r\n\r\n    /**\r\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\r\n     * Otherwise, `success` is called on the returned promise with an object containing\r\n     * `width` and `height` properties.\r\n     */\r\n    function getWidthHeight() {\r\n        var sizeDetermination = new qq.Promise();\r\n\r\n        new qq.Identify(blob, log).isPreviewable().then(function() {\r\n            var image = new Image(),\r\n                url = window.URL && window.URL.createObjectURL ? window.URL :\r\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\r\n                      null;\r\n\r\n            if (url) {\r\n                image.onerror = function() {\r\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\r\n                    sizeDetermination.failure();\r\n                };\r\n\r\n                image.onload = function() {\r\n                    sizeDetermination.success({\r\n                        width: this.width,\r\n                        height: this.height\r\n                    });\r\n                };\r\n\r\n                image.src = url.createObjectURL(blob);\r\n            }\r\n            else {\r\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\r\n                sizeDetermination.failure();\r\n            }\r\n        }, sizeDetermination.failure);\r\n\r\n        return sizeDetermination;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param limits Object with possible image-related limits to enforce.\r\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\r\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\r\n     */\r\n    function getFailingLimit(limits, dimensions) {\r\n        var failingLimit;\r\n\r\n        qq.each(limits, function(limitName, limitValue) {\r\n            if (limitValue > 0) {\r\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\r\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\r\n                    actualValue = dimensions[dimensionPropName];\r\n\r\n                /*jshint -W015*/\r\n                switch (limitMatcher[1]) {\r\n                    case \"min\":\r\n                        if (actualValue < limitValue) {\r\n                            failingLimit = limitName;\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    case \"max\":\r\n                        if (actualValue > limitValue) {\r\n                            failingLimit = limitName;\r\n                            return false;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n\r\n        return failingLimit;\r\n    }\r\n\r\n    /**\r\n     * Validate the associated blob.\r\n     *\r\n     * @param limits\r\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\r\n     * if the blob is not an image, or if the image is not verifiable.\r\n     * Otherwise, `failure` with the name of the failing limit.\r\n     */\r\n    this.validate = function(limits) {\r\n        var validationEffort = new qq.Promise();\r\n\r\n        log(\"Attempting to validate image.\");\r\n\r\n        if (hasNonZeroLimits(limits)) {\r\n            getWidthHeight().then(function(dimensions) {\r\n                var failingLimit = getFailingLimit(limits, dimensions);\r\n\r\n                if (failingLimit) {\r\n                    validationEffort.failure(failingLimit);\r\n                }\r\n                else {\r\n                    validationEffort.success();\r\n                }\r\n            }, validationEffort.success);\r\n        }\r\n        else {\r\n            validationEffort.success();\r\n        }\r\n\r\n        return validationEffort;\r\n    };\r\n};\r\n","/* globals qq */\r\n/**\r\n * Module used to control populating the initial list of files.\r\n *\r\n * @constructor\r\n */\r\nqq.Session = function(spec) {\r\n    \"use strict\";\r\n\r\n    var options = {\r\n        endpoint: null,\r\n        params: {},\r\n        customHeaders: {},\r\n        cors: {},\r\n        addFileRecord: function(sessionData) {},\r\n        log: function(message, level) {}\r\n    };\r\n\r\n    qq.extend(options, spec, true);\r\n\r\n    function isJsonResponseValid(response) {\r\n        if (qq.isArray(response)) {\r\n            return true;\r\n        }\r\n\r\n        options.log(\"Session response is not an array.\", \"error\");\r\n    }\r\n\r\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\r\n        var someItemsIgnored = false;\r\n\r\n        success = success && isJsonResponseValid(fileItems);\r\n\r\n        if (success) {\r\n            qq.each(fileItems, function(idx, fileItem) {\r\n                /* jshint eqnull:true */\r\n                if (fileItem.uuid == null) {\r\n                    someItemsIgnored = true;\r\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\r\n                }\r\n                else if (fileItem.name == null) {\r\n                    someItemsIgnored = true;\r\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\r\n                }\r\n                else {\r\n                    try {\r\n                        options.addFileRecord(fileItem);\r\n                        return true;\r\n                    }\r\n                    catch (err) {\r\n                        someItemsIgnored = true;\r\n                        options.log(err.message, \"error\");\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n\r\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\r\n    }\r\n\r\n    // Initiate a call to the server that will be used to populate the initial file list.\r\n    // Returns a `qq.Promise`.\r\n    this.refresh = function() {\r\n        /*jshint indent:false */\r\n        var refreshEffort = new qq.Promise(),\r\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\r\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\r\n            },\r\n            requesterOptions = qq.extend({}, options),\r\n            requester = new qq.SessionAjaxRequester(\r\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\r\n            );\r\n\r\n        requester.queryServer();\r\n\r\n        return refreshEffort;\r\n    };\r\n};\r\n","/*globals qq, XMLHttpRequest*/\r\n/**\r\n * Thin module used to send GET requests to the server, expecting information about session\r\n * data used to initialize an uploader instance.\r\n *\r\n * @param spec Various options used to influence the associated request.\r\n * @constructor\r\n */\r\nqq.SessionAjaxRequester = function(spec) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        options = {\r\n            endpoint: null,\r\n            customHeaders: {},\r\n            params: {},\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false\r\n            },\r\n            onComplete: function(response, success, xhrOrXdr) {},\r\n            log: function(str, level) {}\r\n        };\r\n\r\n    qq.extend(options, spec);\r\n\r\n    function onComplete(id, xhrOrXdr, isError) {\r\n        var response = null;\r\n\r\n        /* jshint eqnull:true */\r\n        if (xhrOrXdr.responseText != null) {\r\n            try {\r\n                response = qq.parseJson(xhrOrXdr.responseText);\r\n            }\r\n            catch (err) {\r\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\r\n                isError = true;\r\n            }\r\n        }\r\n\r\n        options.onComplete(response, !isError, xhrOrXdr);\r\n    }\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        acceptHeader: \"application/json\",\r\n        validMethods: [\"GET\"],\r\n        method: \"GET\",\r\n        endpointStore: {\r\n            get: function() {\r\n                return options.endpoint;\r\n            }\r\n        },\r\n        customHeaders: options.customHeaders,\r\n        log: options.log,\r\n        onComplete: onComplete,\r\n        cors: options.cors\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        queryServer: function() {\r\n            var params = qq.extend({}, options.params);\r\n\r\n            options.log(\"Session query request.\");\r\n\r\n            requester.initTransport(\"sessionRefresh\")\r\n                .withParams(params)\r\n                .withCacheBuster()\r\n                .send();\r\n        }\r\n    });\r\n};\r\n","/* globals qq, ExifRestorer */\r\n/**\r\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\r\n * Scaled images are generated and converted to blobs on-demand.\r\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\r\n *\r\n * @param spec Information about the scaled images to generate.\r\n * @param log Logger instance\r\n * @constructor\r\n */\r\nqq.Scaler = function(spec, log) {\r\n    \"use strict\";\r\n\r\n    var self = this,\r\n        customResizeFunction = spec.customResizer,\r\n        includeOriginal = spec.sendOriginal,\r\n        orient = spec.orient,\r\n        defaultType = spec.defaultType,\r\n        defaultQuality = spec.defaultQuality / 100,\r\n        failedToScaleText = spec.failureText,\r\n        includeExif = spec.includeExif,\r\n        sizes = this._getSortedSizes(spec.sizes);\r\n\r\n    // Revealed API for instances of this module\r\n    qq.extend(this, {\r\n        // If no targeted sizes have been declared or if this browser doesn't support\r\n        // client-side image preview generation, there is no scaling to do.\r\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\r\n\r\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\r\n            var self = this,\r\n                records = [],\r\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\r\n                identifier = new qq.Identify(originalBlob, log);\r\n\r\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\r\n            if (identifier.isPreviewableSync()) {\r\n                // Create records for each scaled version & add them to the records array, smallest first.\r\n                qq.each(sizes, function(idx, sizeRecord) {\r\n                    var outputType = self._determineOutputType({\r\n                        defaultType: defaultType,\r\n                        requestedType: sizeRecord.type,\r\n                        refType: originalBlob.type\r\n                    });\r\n\r\n                    records.push({\r\n                        uuid: qq.getUniqueId(),\r\n                        name: self._getName(originalFileName, {\r\n                            name: sizeRecord.name,\r\n                            type: outputType,\r\n                            refType: originalBlob.type\r\n                        }),\r\n                        blob: new qq.BlobProxy(originalBlob,\r\n                        qq.bind(self._generateScaledImage, self, {\r\n                            customResizeFunction: customResizeFunction,\r\n                            maxSize: sizeRecord.maxSize,\r\n                            orient: orient,\r\n                            type: outputType,\r\n                            quality: defaultQuality,\r\n                            failedText: failedToScaleText,\r\n                            includeExif: includeExif,\r\n                            log: log\r\n                        }))\r\n                    });\r\n                });\r\n\r\n                records.push({\r\n                    uuid: originalFileUuid,\r\n                    name: originalFileName,\r\n                    size: originalBlob.size,\r\n                    blob: includeOriginal ? originalBlob : null\r\n                });\r\n            }\r\n            else {\r\n                records.push({\r\n                    uuid: originalFileUuid,\r\n                    name: originalFileName,\r\n                    size: originalBlob.size,\r\n                    blob: originalBlob\r\n                });\r\n            }\r\n\r\n            return records;\r\n        },\r\n\r\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\r\n            var self = this,\r\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\r\n                scaledIds = [],\r\n                originalId = null,\r\n                addFileToHandler = api.addFileToHandler,\r\n                uploadData = api.uploadData,\r\n                paramsStore = api.paramsStore,\r\n                proxyGroupId = qq.getUniqueId();\r\n\r\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\r\n                var blobSize = record.size,\r\n                    id;\r\n\r\n                if (record.blob instanceof qq.BlobProxy) {\r\n                    blobSize = -1;\r\n                }\r\n\r\n                id = uploadData.addFile({\r\n                    uuid: record.uuid,\r\n                    name: record.name,\r\n                    size: blobSize,\r\n                    batchId: batchId,\r\n                    proxyGroupId: proxyGroupId\r\n                });\r\n\r\n                if (record.blob instanceof qq.BlobProxy) {\r\n                    scaledIds.push(id);\r\n                }\r\n                else {\r\n                    originalId = id;\r\n                }\r\n\r\n                if (record.blob) {\r\n                    addFileToHandler(id, record.blob);\r\n                    fileList.push({id: id, file: record.blob});\r\n                }\r\n                else {\r\n                    uploadData.setStatus(id, qq.status.REJECTED);\r\n                }\r\n            });\r\n\r\n            // If we are potentially uploading an original file and some scaled versions,\r\n            // ensure the scaled versions include reference's to the parent's UUID and size\r\n            // in their associated upload requests.\r\n            if (originalId !== null) {\r\n                qq.each(scaledIds, function(idx, scaledId) {\r\n                    var params = {\r\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\r\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\r\n                    };\r\n\r\n                    // Make sure the UUID for each scaled image is sent with the upload request,\r\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\r\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\r\n\r\n                    uploadData.setParentId(scaledId, originalId);\r\n                    paramsStore.addReadOnly(scaledId, params);\r\n                });\r\n\r\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\r\n                // parameter as well.\r\n                if (scaledIds.length) {\r\n                    (function() {\r\n                        var param = {};\r\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\r\n                        paramsStore.addReadOnly(originalId, param);\r\n                    }());\r\n                }\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nqq.extend(qq.Scaler.prototype, {\r\n    scaleImage: function(id, specs, api) {\r\n        \"use strict\";\r\n\r\n        if (!qq.supportedFeatures.scaling) {\r\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\r\n        }\r\n\r\n        var scalingEffort = new qq.Promise(),\r\n            log = api.log,\r\n            file = api.getFile(id),\r\n            uploadData = api.uploadData.retrieve({id: id}),\r\n            name = uploadData && uploadData.name,\r\n            uuid = uploadData && uploadData.uuid,\r\n            scalingOptions = {\r\n                customResizer: specs.customResizer,\r\n                sendOriginal: false,\r\n                orient: specs.orient,\r\n                defaultType: specs.type || null,\r\n                defaultQuality: specs.quality,\r\n                failedToScaleText: \"Unable to scale\",\r\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\r\n            },\r\n            scaler = new qq.Scaler(scalingOptions, log);\r\n\r\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\r\n            scalingEffort.failure();\r\n\r\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\r\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\r\n        }\r\n        else {\r\n            (qq.bind(function() {\r\n                // Assumption: There will never be more than one record\r\n                var record = scaler.getFileRecords(uuid, name, file)[0];\r\n\r\n                if (record && record.blob instanceof qq.BlobProxy) {\r\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\r\n                }\r\n                else {\r\n                    log(id + \" is not a scalable image!\", \"error\");\r\n                    scalingEffort.failure();\r\n                }\r\n            }, this)());\r\n        }\r\n\r\n        return scalingEffort;\r\n    },\r\n\r\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\r\n    // image/jpeg and image/png are the only safe choices at this time.\r\n    _determineOutputType: function(spec) {\r\n        \"use strict\";\r\n\r\n        var requestedType = spec.requestedType,\r\n            defaultType = spec.defaultType,\r\n            referenceType = spec.refType;\r\n\r\n        // If a default type and requested type have not been specified, this should be a\r\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\r\n        if (!defaultType && !requestedType) {\r\n            if (referenceType !== \"image/jpeg\") {\r\n                return \"image/png\";\r\n            }\r\n            return referenceType;\r\n        }\r\n\r\n        // A specified default type is used when a requested type is not specified.\r\n        if (!requestedType) {\r\n            return defaultType;\r\n        }\r\n\r\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\r\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\r\n            if (requestedType === \"image/tiff\") {\r\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\r\n            }\r\n\r\n            return requestedType;\r\n        }\r\n\r\n        return defaultType;\r\n    },\r\n\r\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\r\n    _getName: function(originalName, scaledVersionProperties) {\r\n        \"use strict\";\r\n\r\n        var startOfExt = originalName.lastIndexOf(\".\"),\r\n            versionType = scaledVersionProperties.type || \"image/png\",\r\n            referenceType = scaledVersionProperties.refType,\r\n            scaledName = \"\",\r\n            scaledExt = qq.getExtension(originalName),\r\n            nameAppendage = \"\";\r\n\r\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\r\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\r\n        }\r\n\r\n        if (startOfExt >= 0) {\r\n            scaledName = originalName.substr(0, startOfExt);\r\n\r\n            if (referenceType !== versionType) {\r\n                scaledExt = versionType.split(\"/\")[1];\r\n            }\r\n\r\n            scaledName += nameAppendage + \".\" + scaledExt;\r\n        }\r\n        else {\r\n            scaledName = originalName + nameAppendage;\r\n        }\r\n\r\n        return scaledName;\r\n    },\r\n\r\n    // We want the smallest scaled file to be uploaded first\r\n    _getSortedSizes: function(sizes) {\r\n        \"use strict\";\r\n\r\n        sizes = qq.extend([], sizes);\r\n\r\n        return sizes.sort(function(a, b) {\r\n            if (a.maxSize > b.maxSize) {\r\n                return 1;\r\n            }\r\n            if (a.maxSize < b.maxSize) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    },\r\n\r\n    _generateScaledImage: function(spec, sourceFile) {\r\n        \"use strict\";\r\n\r\n        var self = this,\r\n            customResizeFunction = spec.customResizeFunction,\r\n            log = spec.log,\r\n            maxSize = spec.maxSize,\r\n            orient = spec.orient,\r\n            type = spec.type,\r\n            quality = spec.quality,\r\n            failedText = spec.failedText,\r\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\r\n            scalingEffort = new qq.Promise(),\r\n            imageGenerator = new qq.ImageGenerator(log),\r\n            canvas = document.createElement(\"canvas\");\r\n\r\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\r\n\r\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\r\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\r\n                signalSuccess = function() {\r\n                    log(\"Success generating scaled version for \" + sourceFile.name);\r\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\r\n                    scalingEffort.success(blob);\r\n                };\r\n\r\n            if (includeExif) {\r\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\r\n                    scaledImageDataUri = scaledImageDataUriWithExif;\r\n                    signalSuccess();\r\n                },\r\n                function() {\r\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\r\n                    signalSuccess();\r\n                });\r\n            }\r\n            else {\r\n                signalSuccess();\r\n            }\r\n        }, function() {\r\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\r\n            scalingEffort.failure(failedText);\r\n        });\r\n\r\n        return scalingEffort;\r\n    },\r\n\r\n    // Attempt to insert the original image's EXIF header into a scaled version.\r\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\r\n        \"use strict\";\r\n\r\n        var reader = new FileReader(),\r\n            insertionEffort = new qq.Promise(),\r\n            originalImageDataUri = \"\";\r\n\r\n        reader.onload = function() {\r\n            originalImageDataUri = reader.result;\r\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\r\n        };\r\n\r\n        reader.onerror = function() {\r\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\r\n            insertionEffort.failure();\r\n        };\r\n\r\n        reader.readAsDataURL(originalImage);\r\n\r\n        return insertionEffort;\r\n    },\r\n\r\n    _dataUriToBlob: function(dataUri) {\r\n        \"use strict\";\r\n\r\n        var byteString, mimeString, arrayBuffer, intArray;\r\n\r\n        // convert base64 to raw binary data held in a string\r\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\r\n            byteString = atob(dataUri.split(\",\")[1]);\r\n        }\r\n        else {\r\n            byteString = decodeURI(dataUri.split(\",\")[1]);\r\n        }\r\n\r\n        // extract the MIME\r\n        mimeString = dataUri.split(\",\")[0]\r\n            .split(\":\")[1]\r\n            .split(\";\")[0];\r\n\r\n        // write the bytes of the binary string to an ArrayBuffer\r\n        arrayBuffer = new ArrayBuffer(byteString.length);\r\n        intArray = new Uint8Array(arrayBuffer);\r\n        qq.each(byteString, function(idx, character) {\r\n            intArray[idx] = character.charCodeAt(0);\r\n        });\r\n\r\n        return this._createBlob(arrayBuffer, mimeString);\r\n    },\r\n\r\n    _createBlob: function(data, mime) {\r\n        \"use strict\";\r\n\r\n        var BlobBuilder = window.BlobBuilder ||\r\n                window.WebKitBlobBuilder ||\r\n                window.MozBlobBuilder ||\r\n                window.MSBlobBuilder,\r\n            blobBuilder = BlobBuilder && new BlobBuilder();\r\n\r\n        if (blobBuilder) {\r\n            blobBuilder.append(data);\r\n            return blobBuilder.getBlob(mime);\r\n        }\r\n        else {\r\n            return new Blob([data], {type: mime});\r\n        }\r\n    }\r\n});\r\n","//Based on MinifyJpeg\r\n//http://elicon.blog57.fc2.com/blog-entry-206.html\r\n\r\nqq.ExifRestorer = (function()\r\n{\r\n   \r\n\tvar ExifRestorer = {};\r\n\t \r\n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\r\n                         \"QRSTUVWXYZabcdef\" +\r\n                         \"ghijklmnopqrstuv\" +\r\n                         \"wxyz0123456789+/\" +\r\n                         \"=\";\r\n\r\n    ExifRestorer.encode64 = function(input)\r\n    {\r\n        var output = \"\",\r\n            chr1, chr2, chr3 = \"\",\r\n            enc1, enc2, enc3, enc4 = \"\",\r\n            i = 0;\r\n\r\n        do {\r\n            chr1 = input[i++];\r\n            chr2 = input[i++];\r\n            chr3 = input[i++];\r\n\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n\r\n            if (isNaN(chr2)) {\r\n               enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n               enc4 = 64;\r\n            }\r\n\r\n            output = output +\r\n               this.KEY_STR.charAt(enc1) +\r\n               this.KEY_STR.charAt(enc2) +\r\n               this.KEY_STR.charAt(enc3) +\r\n               this.KEY_STR.charAt(enc4);\r\n            chr1 = chr2 = chr3 = \"\";\r\n            enc1 = enc2 = enc3 = enc4 = \"\";\r\n        } while (i < input.length);\r\n\r\n        return output;\r\n    };\r\n    \r\n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\r\n    {\r\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\r\n\r\n        if (!origFileBase64.match(expectedBase64Header))\r\n        {\r\n        \treturn resizedFileBase64;\r\n        }       \r\n        \r\n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\r\n        var segments = this.slice2Segments(rawImage);\r\n                \r\n        var image = this.exifManipulation(resizedFileBase64, segments);\r\n        \r\n        return expectedBase64Header + this.encode64(image);\r\n        \r\n    };\r\n\r\n\r\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\r\n    {\r\n            var exifArray = this.getExifArray(segments),\r\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\r\n                aBuffer = new Uint8Array(newImageArray);\r\n\r\n            return aBuffer;\r\n    };\r\n\r\n\r\n    ExifRestorer.getExifArray = function(segments)\r\n    {\r\n            var seg;\r\n            for (var x = 0; x < segments.length; x++)\r\n            {\r\n                seg = segments[x];\r\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\r\n                {\r\n                    return seg;\r\n                }\r\n            }\r\n            return [];\r\n    };\r\n\r\n\r\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\r\n    {\r\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\r\n                buf = this.decode64(imageData),\r\n                separatePoint = buf.indexOf(255,3),\r\n                mae = buf.slice(0, separatePoint),\r\n                ato = buf.slice(separatePoint),\r\n                array = mae;\r\n\r\n            array = array.concat(exifArray);\r\n            array = array.concat(ato);\r\n           return array;\r\n    };\r\n\r\n\r\n    \r\n    ExifRestorer.slice2Segments = function(rawImageArray)\r\n    {\r\n        var head = 0,\r\n            segments = [];\r\n\r\n        while (1)\r\n        {\r\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\r\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\r\n            {\r\n                head += 2;\r\n            }\r\n            else\r\n            {\r\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\r\n                    endPoint = head + length + 2,\r\n                    seg = rawImageArray.slice(head, endPoint);\r\n                segments.push(seg);\r\n                head = endPoint;\r\n            }\r\n            if (head > rawImageArray.length){break;}\r\n        }\r\n\r\n        return segments;\r\n    };\r\n\r\n\r\n    \r\n    ExifRestorer.decode64 = function(input) \r\n    {\r\n        var output = \"\",\r\n            chr1, chr2, chr3 = \"\",\r\n            enc1, enc2, enc3, enc4 = \"\",\r\n            i = 0,\r\n            buf = [];\r\n\r\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\r\n        if (base64test.exec(input)) {\r\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\r\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\r\n        }\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n        do {\r\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\r\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\r\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\r\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\r\n\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n            buf.push(chr1);\r\n\r\n            if (enc3 != 64) {\r\n               buf.push(chr2);\r\n            }\r\n            if (enc4 != 64) {\r\n               buf.push(chr3);\r\n            }\r\n\r\n            chr1 = chr2 = chr3 = \"\";\r\n            enc1 = enc2 = enc3 = enc4 = \"\";\r\n\r\n        } while (i < input.length);\r\n\r\n        return buf;\r\n    };\r\n\r\n    \r\n    return ExifRestorer;\r\n})();\r\n","/* globals qq */\r\n/**\r\n * Keeps a running tally of total upload progress for a batch of files.\r\n *\r\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\r\n * @param getSize Function that returns the size of a file given its ID\r\n * @constructor\r\n */\r\nqq.TotalProgress = function(callback, getSize) {\r\n    \"use strict\";\r\n\r\n    var perFileProgress = {},\r\n        totalLoaded = 0,\r\n        totalSize = 0,\r\n\r\n        lastLoadedSent = -1,\r\n        lastTotalSent = -1,\r\n        callbackProxy = function(loaded, total) {\r\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\r\n                callback(loaded, total);\r\n            }\r\n\r\n            lastLoadedSent = loaded;\r\n            lastTotalSent = total;\r\n        },\r\n\r\n        /**\r\n         * @param failed Array of file IDs that have failed\r\n         * @param retryable Array of file IDs that are retryable\r\n         * @returns true if none of the failed files are eligible for retry\r\n         */\r\n        noRetryableFiles = function(failed, retryable) {\r\n            var none = true;\r\n\r\n            qq.each(failed, function(idx, failedId) {\r\n                if (qq.indexOf(retryable, failedId) >= 0) {\r\n                    none = false;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return none;\r\n        },\r\n\r\n        onCancel = function(id) {\r\n            updateTotalProgress(id, -1, -1);\r\n            delete perFileProgress[id];\r\n        },\r\n\r\n        onAllComplete = function(successful, failed, retryable) {\r\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\r\n                callbackProxy(totalSize, totalSize);\r\n                this.reset();\r\n            }\r\n        },\r\n\r\n        onNew = function(id) {\r\n            var size = getSize(id);\r\n\r\n            // We might not know the size yet, such as for blob proxies\r\n            if (size > 0) {\r\n                updateTotalProgress(id, 0, size);\r\n                perFileProgress[id] = {loaded: 0, total: size};\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\r\n         * be appropriate to re-calculate and disseminate this data.\r\n         *\r\n         * @param id ID of a file that has changed in some important way\r\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\r\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\r\n         */\r\n        updateTotalProgress = function(id, newLoaded, newTotal) {\r\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\r\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\r\n\r\n            if (newLoaded === -1 && newTotal === -1) {\r\n                totalLoaded -= oldLoaded;\r\n                totalSize -= oldTotal;\r\n            }\r\n            else {\r\n                if (newLoaded) {\r\n                    totalLoaded += newLoaded - oldLoaded;\r\n                }\r\n                if (newTotal) {\r\n                    totalSize += newTotal - oldTotal;\r\n                }\r\n            }\r\n\r\n            callbackProxy(totalLoaded, totalSize);\r\n        };\r\n\r\n    qq.extend(this, {\r\n        // Called when a batch of files has completed uploading.\r\n        onAllComplete: onAllComplete,\r\n\r\n        // Called when the status of a file has changed.\r\n        onStatusChange: function(id, oldStatus, newStatus) {\r\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\r\n                onCancel(id);\r\n            }\r\n            else if (newStatus === qq.status.SUBMITTING) {\r\n                onNew(id);\r\n            }\r\n        },\r\n\r\n        // Called whenever the upload progress of an individual file has changed.\r\n        onIndividualProgress: function(id, loaded, total) {\r\n            updateTotalProgress(id, loaded, total);\r\n            perFileProgress[id] = {loaded: loaded, total: total};\r\n        },\r\n\r\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\r\n        onNewSize: function(id) {\r\n            onNew(id);\r\n        },\r\n\r\n        reset: function() {\r\n            perFileProgress = {};\r\n            totalLoaded = 0;\r\n            totalSize = 0;\r\n        }\r\n    });\r\n};\r\n","/*globals qq*/\r\nqq.PasteSupport = function(o) {\r\n    \"use strict\";\r\n\r\n    var options, detachPasteHandler;\r\n\r\n    options = {\r\n        targetElement: null,\r\n        callbacks: {\r\n            log: function(message, level) {},\r\n            pasteReceived: function(blob) {}\r\n        }\r\n    };\r\n\r\n    function isImage(item) {\r\n        return item.type &&\r\n            item.type.indexOf(\"image/\") === 0;\r\n    }\r\n\r\n    function registerPasteHandler() {\r\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\r\n            var clipboardData = event.clipboardData;\r\n\r\n            if (clipboardData) {\r\n                qq.each(clipboardData.items, function(idx, item) {\r\n                    if (isImage(item)) {\r\n                        var blob = item.getAsFile();\r\n                        options.callbacks.pasteReceived(blob);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    function unregisterPasteHandler() {\r\n        if (detachPasteHandler) {\r\n            detachPasteHandler();\r\n        }\r\n    }\r\n\r\n    qq.extend(options, o);\r\n    registerPasteHandler();\r\n\r\n    qq.extend(this, {\r\n        reset: function() {\r\n            unregisterPasteHandler();\r\n        }\r\n    });\r\n};\r\n","/* globals qq */\r\n/**\r\n * Module that handles support for existing forms.\r\n *\r\n * @param options Options passed from the integrator-supplied options related to form support.\r\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\r\n * @param log Proxy for the logger\r\n * @constructor\r\n */\r\nqq.FormSupport = function(options, startUpload, log) {\r\n    \"use strict\";\r\n    var self  = this,\r\n        interceptSubmit = options.interceptSubmit,\r\n        formEl = options.element,\r\n        autoUpload = options.autoUpload;\r\n\r\n    // Available on the public API associated with this module.\r\n    qq.extend(this, {\r\n        // To be used by the caller to determine if the endpoint will be determined by some processing\r\n        // that occurs in this module, such as if the form has an action attribute.\r\n        // Ignore if `attachToForm === false`.\r\n        newEndpoint: null,\r\n\r\n        // To be used by the caller to determine if auto uploading should be allowed.\r\n        // Ignore if `attachToForm === false`.\r\n        newAutoUpload: autoUpload,\r\n\r\n        // true if a form was detected and is being tracked by this module\r\n        attachedToForm: false,\r\n\r\n        // Returns an object with names and values for all valid form elements associated with the attached form.\r\n        getFormInputsAsObject: function() {\r\n            /* jshint eqnull:true */\r\n            if (formEl == null) {\r\n                return null;\r\n            }\r\n\r\n            return self._form2Obj(formEl);\r\n        }\r\n    });\r\n\r\n    // If the form contains an action attribute, this should be the new upload endpoint.\r\n    function determineNewEndpoint(formEl) {\r\n        if (formEl.getAttribute(\"action\")) {\r\n            self.newEndpoint = formEl.getAttribute(\"action\");\r\n        }\r\n    }\r\n\r\n    // Return true only if the form is valid, or if we cannot make this determination.\r\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\r\n    function validateForm(formEl, nativeSubmit) {\r\n        if (formEl.checkValidity && !formEl.checkValidity()) {\r\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\r\n            nativeSubmit();\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\r\n    function maybeUploadOnSubmit(formEl) {\r\n        var nativeSubmit = formEl.submit;\r\n\r\n        // Intercept and squelch submit events.\r\n        qq(formEl).attach(\"submit\", function(event) {\r\n            event = event || window.event;\r\n\r\n            if (event.preventDefault) {\r\n                event.preventDefault();\r\n            }\r\n            else {\r\n                event.returnValue = false;\r\n            }\r\n\r\n            validateForm(formEl, nativeSubmit) && startUpload();\r\n        });\r\n\r\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\r\n        // Intercept that too.\r\n        formEl.submit = function() {\r\n            validateForm(formEl, nativeSubmit) && startUpload();\r\n        };\r\n    }\r\n\r\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\r\n    // The rest of the code in this module depends on this being an HTMLElement.\r\n    function determineFormEl(formEl) {\r\n        if (formEl) {\r\n            if (qq.isString(formEl)) {\r\n                formEl = document.getElementById(formEl);\r\n            }\r\n\r\n            if (formEl) {\r\n                log(\"Attaching to form element.\");\r\n                determineNewEndpoint(formEl);\r\n                interceptSubmit && maybeUploadOnSubmit(formEl);\r\n            }\r\n        }\r\n\r\n        return formEl;\r\n    }\r\n\r\n    formEl = determineFormEl(formEl);\r\n    this.attachedToForm = !!formEl;\r\n};\r\n\r\nqq.extend(qq.FormSupport.prototype, {\r\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\r\n    // construct from a given form when the form is submitted.\r\n    _form2Obj: function(form) {\r\n        \"use strict\";\r\n        var obj = {},\r\n            notIrrelevantType = function(type) {\r\n                var irrelevantTypes = [\r\n                    \"button\",\r\n                    \"image\",\r\n                    \"reset\",\r\n                    \"submit\"\r\n                ];\r\n\r\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\r\n            },\r\n            radioOrCheckbox = function(type) {\r\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\r\n            },\r\n            ignoreValue = function(el) {\r\n                if (radioOrCheckbox(el.type) && !el.checked) {\r\n                    return true;\r\n                }\r\n\r\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\r\n            },\r\n            selectValue = function(select) {\r\n                var value = null;\r\n\r\n                qq.each(qq(select).children(), function(idx, child) {\r\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\r\n                        value = child.value;\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                return value;\r\n            };\r\n\r\n        qq.each(form.elements, function(idx, el) {\r\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\r\n                notIrrelevantType(el.type) &&\r\n                !ignoreValue(el)) {\r\n\r\n                obj[el.name] = el.value;\r\n            }\r\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\r\n                var value = selectValue(el);\r\n\r\n                if (value !== null) {\r\n                    obj[el.name] = value;\r\n                }\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n});\r\n","/*globals qq*/\r\n/**\r\n * Upload handler used that assumes the current user agent does not have any support for the\r\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to\r\n * a generic server.\r\n *\r\n * @param options Options passed from the base handler\r\n * @param proxy Callbacks & methods used to query for or push out data/changes\r\n */\r\nqq.traditional = qq.traditional || {};\r\nqq.traditional.FormUploadHandler = function(options, proxy) {\r\n    \"use strict\";\r\n\r\n    var handler = this,\r\n        getName = proxy.getName,\r\n        getUuid = proxy.getUuid,\r\n        log = proxy.log;\r\n\r\n    /**\r\n     * Returns json object received by iframe from server.\r\n     */\r\n    function getIframeContentJson(id, iframe) {\r\n        /*jshint evil: true*/\r\n\r\n        var response, doc, innerHtml;\r\n\r\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\r\n        try {\r\n            // iframe.contentWindow.document - for IE<7\r\n            doc = iframe.contentDocument || iframe.contentWindow.document;\r\n            innerHtml = doc.body.innerHTML;\r\n\r\n            log(\"converting iframe's innerHTML to JSON\");\r\n            log(\"innerHTML = \" + innerHtml);\r\n            //plain text response may be wrapped in <pre> tag\r\n            if (innerHtml && innerHtml.match(/^<pre/i)) {\r\n                innerHtml = doc.body.firstChild.firstChild.nodeValue;\r\n            }\r\n\r\n            response = handler._parseJsonResponse(innerHtml);\r\n        }\r\n        catch (error) {\r\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\r\n            response = {success: false};\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n    /**\r\n     * Creates form, that will be submitted to iframe\r\n     */\r\n    function createForm(id, iframe) {\r\n        var params = options.paramsStore.get(id),\r\n            method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\",\r\n            endpoint = options.endpointStore.get(id),\r\n            name = getName(id);\r\n\r\n        params[options.uuidName] = getUuid(id);\r\n        params[options.filenameParam] = name;\r\n\r\n        return handler._initFormForUpload({\r\n            method: method,\r\n            endpoint: endpoint,\r\n            params: params,\r\n            paramsInBody: options.paramsInBody,\r\n            targetName: iframe.name\r\n        });\r\n    }\r\n\r\n    this.uploadFile = function(id) {\r\n        var input = handler.getInput(id),\r\n            iframe = handler._createIframe(id),\r\n            promise = new qq.Promise(),\r\n            form;\r\n\r\n        form = createForm(id, iframe);\r\n        form.appendChild(input);\r\n\r\n        handler._attachLoadEvent(iframe, function(responseFromMessage) {\r\n            log(\"iframe loaded\");\r\n\r\n            var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\r\n\r\n            handler._detachLoadEvent(id);\r\n\r\n            //we can't remove an iframe if the iframe doesn't belong to the same domain\r\n            if (!options.cors.expected) {\r\n                qq(iframe).remove();\r\n            }\r\n\r\n            if (response.success) {\r\n                promise.success(response);\r\n            }\r\n            else {\r\n                promise.failure(response);\r\n            }\r\n        });\r\n\r\n        log(\"Sending upload request for \" + id);\r\n        form.submit();\r\n        qq(form).remove();\r\n\r\n        return promise;\r\n    };\r\n\r\n    qq.extend(this, new qq.FormUploadHandler({\r\n        options: {\r\n            isCors: options.cors.expected,\r\n            inputName: options.inputName\r\n        },\r\n\r\n        proxy: {\r\n            onCancel: options.onCancel,\r\n            getName: getName,\r\n            getUuid: getUuid,\r\n            log: log\r\n        }\r\n    }));\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Upload handler used to upload to traditional endpoints.  It depends on File API support, and, therefore,\r\n * makes use of `XMLHttpRequest` level 2 to upload `File`s and `Blob`s to a generic server.\r\n *\r\n * @param spec Options passed from the base handler\r\n * @param proxy Callbacks & methods used to query for or push out data/changes\r\n */\r\nqq.traditional = qq.traditional || {};\r\nqq.traditional.XhrUploadHandler = function(spec, proxy) {\r\n    \"use strict\";\r\n\r\n    var handler = this,\r\n        getName = proxy.getName,\r\n        getSize = proxy.getSize,\r\n        getUuid = proxy.getUuid,\r\n        log = proxy.log,\r\n        multipart = spec.forceMultipart || spec.paramsInBody,\r\n\r\n        addChunkingSpecificParams = function(id, params, chunkData) {\r\n            var size = getSize(id),\r\n                name = getName(id);\r\n\r\n            if (!spec.omitDefaultParams) {\r\n                params[spec.chunking.paramNames.partIndex] = chunkData.part;\r\n                params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\r\n                params[spec.chunking.paramNames.chunkSize] = chunkData.size;\r\n                params[spec.chunking.paramNames.totalParts] = chunkData.count;\r\n                params[spec.totalFileSizeName] = size;\r\n            }\r\n\r\n            /**\r\n             * When a Blob is sent in a multipart request, the filename value in the content-disposition header is either \"blob\"\r\n             * or an empty string.  So, we will need to include the actual file name as a param in this case.\r\n             */\r\n            if (multipart && !spec.omitDefaultParams) {\r\n                params[spec.filenameParam] = name;\r\n            }\r\n        },\r\n\r\n        allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\r\n            cors: spec.cors,\r\n            endpoint: spec.chunking.success.endpoint,\r\n            headers: spec.chunking.success.headers,\r\n            jsonPayload: spec.chunking.success.jsonPayload,\r\n            log: log,\r\n            method: spec.chunking.success.method,\r\n            params: spec.chunking.success.params\r\n        }),\r\n\r\n        createReadyStateChangedHandler = function(id, xhr) {\r\n            var promise = new qq.Promise();\r\n\r\n            xhr.onreadystatechange = function() {\r\n                if (xhr.readyState === 4) {\r\n                    var result = onUploadOrChunkComplete(id, xhr);\r\n\r\n                    if (result.success) {\r\n                        promise.success(result.response, xhr);\r\n                    }\r\n                    else {\r\n                        promise.failure(result.response, xhr);\r\n                    }\r\n                }\r\n            };\r\n\r\n            return promise;\r\n        },\r\n\r\n        getChunksCompleteParams = function(id) {\r\n            var params = spec.paramsStore.get(id),\r\n                name = getName(id),\r\n                size = getSize(id);\r\n\r\n            params[spec.uuidName] = getUuid(id);\r\n            params[spec.filenameParam] = name;\r\n            params[spec.totalFileSizeName] = size;\r\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\r\n\r\n            return params;\r\n        },\r\n\r\n        isErrorUploadResponse = function(xhr, response) {\r\n            return qq.indexOf([200, 201, 202, 203, 204], xhr.status) < 0 ||\r\n                (spec.requireSuccessJson && !response.success) ||\r\n                response.reset;\r\n        },\r\n\r\n        onUploadOrChunkComplete = function(id, xhr) {\r\n            var response;\r\n\r\n            log(\"xhr - server response received for \" + id);\r\n            log(\"responseText = \" + xhr.responseText);\r\n\r\n            response = parseResponse(true, xhr);\r\n\r\n            return {\r\n                success: !isErrorUploadResponse(xhr, response),\r\n                response: response\r\n            };\r\n        },\r\n\r\n        // If this is an upload response, we require a JSON payload, otherwise, it is optional.\r\n        parseResponse = function(upload, xhr) {\r\n            var response = {};\r\n\r\n            try {\r\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\r\n                response = qq.parseJson(xhr.responseText);\r\n            }\r\n            catch (error) {\r\n                upload && spec.requireSuccessJson && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\r\n            }\r\n\r\n            return response;\r\n        },\r\n\r\n        sendChunksCompleteRequest = function(id) {\r\n            var promise = new qq.Promise();\r\n\r\n            allChunksDoneRequester.complete(\r\n                    id,\r\n                    handler._createXhr(id),\r\n                    getChunksCompleteParams(id),\r\n                    spec.customHeaders.get(id)\r\n                )\r\n                .then(function(xhr) {\r\n                    promise.success(parseResponse(false, xhr), xhr);\r\n                }, function(xhr) {\r\n                    promise.failure(parseResponse(false, xhr), xhr);\r\n                });\r\n\r\n            return promise;\r\n        },\r\n\r\n        setParamsAndGetEntityToSend = function(entityToSendParams) {\r\n            var fileOrBlob = entityToSendParams.fileOrBlob;\r\n            var id = entityToSendParams.id;\r\n            var xhr = entityToSendParams.xhr;\r\n            var xhrOverrides = entityToSendParams.xhrOverrides || {};\r\n            var customParams = entityToSendParams.customParams || {};\r\n            var defaultParams = entityToSendParams.params || {};\r\n            var xhrOverrideParams = xhrOverrides.params || {};\r\n            var params;\r\n\r\n            var formData = multipart ? new FormData() : null,\r\n                method = xhrOverrides.method || spec.method,\r\n                endpoint = xhrOverrides.endpoint || spec.endpointStore.get(id),\r\n                name = getName(id),\r\n                size = getSize(id);\r\n\r\n            if (spec.omitDefaultParams) {\r\n                params = qq.extend({}, customParams);\r\n                qq.extend(params, xhrOverrideParams);\r\n            }\r\n            else {\r\n                params = qq.extend({}, customParams);\r\n                qq.extend(params, xhrOverrideParams);\r\n                qq.extend(params, defaultParams);\r\n\r\n                params[spec.uuidName] = getUuid(id);\r\n                params[spec.filenameParam] = name;\r\n\r\n                if (multipart) {\r\n                    params[spec.totalFileSizeName] = size;\r\n                }\r\n                else if (!spec.paramsInBody) {\r\n                    params[spec.inputName] = name;\r\n                }\r\n            }\r\n\r\n            //build query string\r\n            if (!spec.paramsInBody) {\r\n                endpoint = qq.obj2url(params, endpoint);\r\n            }\r\n\r\n            xhr.open(method, endpoint, true);\r\n\r\n            if (spec.cors.expected && spec.cors.sendCredentials) {\r\n                xhr.withCredentials = true;\r\n            }\r\n\r\n            if (multipart) {\r\n                if (spec.paramsInBody) {\r\n                    qq.obj2FormData(params, formData);\r\n                }\r\n\r\n                formData.append(spec.inputName, fileOrBlob);\r\n                return formData;\r\n            }\r\n\r\n            return fileOrBlob;\r\n        },\r\n\r\n        setUploadHeaders = function(headersOptions) {\r\n            var headerOverrides = headersOptions.headerOverrides;\r\n            var id = headersOptions.id;\r\n            var xhr = headersOptions.xhr;\r\n\r\n            if (headerOverrides) {\r\n                qq.each(headerOverrides, function(headerName, headerValue) {\r\n                    xhr.setRequestHeader(headerName, headerValue);\r\n                });\r\n            }\r\n            else {\r\n                var extraHeaders = spec.customHeaders.get(id),\r\n                    fileOrBlob = handler.getFile(id);\r\n\r\n                xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n                xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n                xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\r\n\r\n                if (!multipart) {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\r\n                    //NOTE: return mime type in xhr works on chrome 16.0.9 firefox 11.0a2\r\n                    xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\r\n                }\r\n\r\n                qq.each(extraHeaders, function(name, val) {\r\n                    xhr.setRequestHeader(name, val);\r\n                });\r\n            }\r\n        };\r\n\r\n    qq.extend(this, {\r\n        uploadChunk: function(uploadChunkParams) {\r\n            var id = uploadChunkParams.id;\r\n            var chunkIdx = uploadChunkParams.chunkIdx;\r\n            var overrides = uploadChunkParams.overrides || {};\r\n            var resuming = uploadChunkParams.resuming;\r\n\r\n            var chunkData = handler._getChunkData(id, chunkIdx),\r\n                xhr = handler._createXhr(id, chunkIdx),\r\n                promise, toSend, customParams, params = {};\r\n\r\n            promise = createReadyStateChangedHandler(id, xhr);\r\n            handler._registerProgressHandler(id, chunkIdx, chunkData.size);\r\n            customParams = spec.paramsStore.get(id);\r\n            addChunkingSpecificParams(id, params, chunkData);\r\n\r\n            if (resuming) {\r\n                params[spec.resume.paramNames.resuming] = true;\r\n            }\r\n\r\n            toSend = setParamsAndGetEntityToSend({\r\n                fileOrBlob: chunkData.blob,\r\n                id: id,\r\n                customParams: customParams,\r\n                params: params,\r\n                xhr: xhr,\r\n                xhrOverrides: overrides\r\n            });\r\n\r\n            setUploadHeaders({\r\n                headerOverrides: overrides.headers,\r\n                id: id,\r\n                xhr: xhr\r\n            });\r\n\r\n            xhr.send(toSend);\r\n\r\n            return promise;\r\n        },\r\n\r\n        uploadFile: function(id) {\r\n            var fileOrBlob = handler.getFile(id),\r\n                promise, xhr, customParams, toSend;\r\n\r\n            xhr = handler._createXhr(id);\r\n            handler._registerProgressHandler(id);\r\n            promise = createReadyStateChangedHandler(id, xhr);\r\n            customParams = spec.paramsStore.get(id);\r\n\r\n            toSend = setParamsAndGetEntityToSend({\r\n                fileOrBlob: fileOrBlob,\r\n                id: id,\r\n                customParams: customParams,\r\n                xhr: xhr\r\n            });\r\n\r\n            setUploadHeaders({\r\n                id: id,\r\n                xhr: xhr\r\n            });\r\n\r\n            xhr.send(toSend);\r\n\r\n            return promise;\r\n        }\r\n    });\r\n\r\n    qq.extend(this, new qq.XhrUploadHandler({\r\n        options: qq.extend({namespace: \"traditional\"}, spec),\r\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\r\n    }));\r\n\r\n    qq.override(this, function(super_) {\r\n        return {\r\n            finalizeChunks: function(id) {\r\n                proxy.onFinalizing(id);\r\n\r\n                if (spec.chunking.success.endpoint) {\r\n                    return sendChunksCompleteRequest(id);\r\n                }\r\n                else {\r\n                    return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\r\n                }\r\n            }\r\n        };\r\n    });\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Ajax requester used to send a POST to a traditional endpoint once all chunks for a specific file have uploaded\r\n * successfully.\r\n *\r\n * @param o Options from the caller - will override the defaults.\r\n * @constructor\r\n */\r\nqq.traditional.AllChunksDoneAjaxRequester = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        options = {\r\n            cors: {\r\n                allowXdr: false,\r\n                expected: false,\r\n                sendCredentials: false\r\n            },\r\n            endpoint: null,\r\n            log: function(str, level) {},\r\n            method: \"POST\"\r\n        },\r\n        promises = {},\r\n        endpointHandler = {\r\n            get: function(id) {\r\n                if (qq.isFunction(options.endpoint)) {\r\n                    return options.endpoint(id);\r\n                }\r\n\r\n                return options.endpoint;\r\n            }\r\n        };\r\n\r\n    qq.extend(options, o);\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        acceptHeader: \"application/json\",\r\n        contentType: options.jsonPayload ? \"application/json\" : \"application/x-www-form-urlencoded\",\r\n        validMethods: [options.method],\r\n        method: options.method,\r\n        endpointStore: endpointHandler,\r\n        allowXRequestedWithAndCacheControl: false,\r\n        cors: options.cors,\r\n        log: options.log,\r\n        onComplete: function(id, xhr, isError) {\r\n            var promise = promises[id];\r\n\r\n            delete promises[id];\r\n\r\n            if (isError) {\r\n                promise.failure(xhr);\r\n            }\r\n            else {\r\n                promise.success(xhr);\r\n            }\r\n        }\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        complete: function(id, xhr, params, headers) {\r\n            var promise = new qq.Promise();\r\n\r\n            options.log(\"Submitting All Chunks Done request for \" + id);\r\n\r\n            promises[id] = promise;\r\n\r\n            requester.initTransport(id)\r\n                .withParams(options.params(id) || params)\r\n                .withHeaders(options.headers(id) || headers)\r\n                .send(xhr);\r\n\r\n            return promise;\r\n        }\r\n    });\r\n};\r\n","/*globals qq, document, CustomEvent*/\r\nqq.DragAndDrop = function(o) {\r\n    \"use strict\";\r\n\r\n    var options,\r\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\r\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\r\n        uploadDropZones = [],\r\n        droppedFiles = [],\r\n        disposeSupport = new qq.DisposeSupport();\r\n\r\n    options = {\r\n        dropZoneElements: [],\r\n        allowMultipleItems: true,\r\n        classes: {\r\n            dropActive: null\r\n        },\r\n        callbacks: new qq.DragAndDrop.callbacks()\r\n    };\r\n\r\n    qq.extend(options, o, true);\r\n\r\n    function uploadDroppedFiles(files, uploadDropZone) {\r\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\r\n        var filesAsArray = Array.prototype.slice.call(files);\r\n\r\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\r\n        uploadDropZone.dropDisabled(false);\r\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\r\n    }\r\n\r\n    function traverseFileTree(entry) {\r\n        var parseEntryPromise = new qq.Promise();\r\n\r\n        if (entry.isFile) {\r\n            entry.file(function(file) {\r\n                file.qqPath = extractDirectoryPath(entry);\r\n                droppedFiles.push(file);\r\n                parseEntryPromise.success();\r\n            },\r\n            function(fileError) {\r\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\r\n                parseEntryPromise.failure();\r\n            });\r\n        }\r\n        else if (entry.isDirectory) {\r\n            getFilesInDirectory(entry).then(\r\n                function allEntriesRead(entries) {\r\n                    var entriesLeft = entries.length;\r\n\r\n                    qq.each(entries, function(idx, entry) {\r\n                        traverseFileTree(entry).done(function() {\r\n                            entriesLeft -= 1;\r\n\r\n                            if (entriesLeft === 0) {\r\n                                parseEntryPromise.success();\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    if (!entries.length) {\r\n                        parseEntryPromise.success();\r\n                    }\r\n                },\r\n\r\n                function readFailure(fileError) {\r\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\r\n                    parseEntryPromise.failure();\r\n                }\r\n            );\r\n        }\r\n\r\n        return parseEntryPromise;\r\n    }\r\n\r\n    function extractDirectoryPath(entry) {\r\n        var name = entry.name,\r\n            fullPath = entry.fullPath,\r\n            indexOfNameInFullPath = fullPath.lastIndexOf(name);\r\n\r\n        // remove file name from full path string\r\n        fullPath = fullPath.substr(0, indexOfNameInFullPath);\r\n\r\n        // remove leading slash in full path string\r\n        if (fullPath.charAt(0) === \"/\") {\r\n            fullPath = fullPath.substr(1);\r\n        }\r\n\r\n        return fullPath;\r\n    }\r\n\r\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\r\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\r\n        var promise = existingPromise || new qq.Promise(),\r\n            dirReader = reader || entry.createReader();\r\n\r\n        dirReader.readEntries(\r\n            function readSuccess(entries) {\r\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\r\n\r\n                if (entries.length) {\r\n                    setTimeout(function() { // prevent stack overflow, however unlikely\r\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\r\n                    }, 0);\r\n                }\r\n                else {\r\n                    promise.success(newEntries);\r\n                }\r\n            },\r\n\r\n            promise.failure\r\n        );\r\n\r\n        return promise;\r\n    }\r\n\r\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\r\n        var pendingFolderPromises = [],\r\n            handleDataTransferPromise = new qq.Promise();\r\n\r\n        options.callbacks.processingDroppedFiles();\r\n        uploadDropZone.dropDisabled(true);\r\n\r\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\r\n            options.callbacks.processingDroppedFilesComplete([]);\r\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\r\n            uploadDropZone.dropDisabled(false);\r\n            handleDataTransferPromise.failure();\r\n        }\r\n        else {\r\n            droppedFiles = [];\r\n\r\n            if (qq.isFolderDropSupported(dataTransfer)) {\r\n                qq.each(dataTransfer.items, function(idx, item) {\r\n                    var entry = item.webkitGetAsEntry();\r\n\r\n                    if (entry) {\r\n                        //due to a bug in Chrome's File System API impl - #149735\r\n                        if (entry.isFile) {\r\n                            droppedFiles.push(item.getAsFile());\r\n                        }\r\n\r\n                        else {\r\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\r\n                                pendingFolderPromises.pop();\r\n                                if (pendingFolderPromises.length === 0) {\r\n                                    handleDataTransferPromise.success();\r\n                                }\r\n                            }));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                droppedFiles = dataTransfer.files;\r\n            }\r\n\r\n            if (pendingFolderPromises.length === 0) {\r\n                handleDataTransferPromise.success();\r\n            }\r\n        }\r\n\r\n        return handleDataTransferPromise;\r\n    }\r\n\r\n    function setupDropzone(dropArea) {\r\n        var dropZone = new qq.UploadDropZone({\r\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\r\n            element: dropArea,\r\n            onEnter: function(e) {\r\n                qq(dropArea).addClass(options.classes.dropActive);\r\n                options.callbacks.dragEnter();\r\n                e.stopPropagation();\r\n            },\r\n            onLeaveNotDescendants: function(e) {\r\n                qq(dropArea).removeClass(options.classes.dropActive);\r\n                options.callbacks.dragLeave();\r\n            },\r\n            onDrop: function(e) {\r\n                handleDataTransfer(e.dataTransfer, dropZone).then(\r\n                    function() {\r\n                        uploadDroppedFiles(droppedFiles, dropZone);\r\n                    },\r\n                    function() {\r\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\r\n                    }\r\n                );\r\n            }\r\n        });\r\n\r\n        disposeSupport.addDisposer(function() {\r\n            dropZone.dispose();\r\n        });\r\n\r\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\r\n\r\n        uploadDropZones.push(dropZone);\r\n\r\n        return dropZone;\r\n    }\r\n\r\n    function isFileDrag(dragEvent) {\r\n        var fileDrag;\r\n\r\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\r\n            if (val === \"Files\") {\r\n                fileDrag = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return fileDrag;\r\n    }\r\n\r\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\r\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\r\n    //\r\n    // Exceptions:\r\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\r\n    //                   overlays the browser window.\r\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\r\n    //          event's X & Y properties.\r\n    function leavingDocumentOut(e) {\r\n        if (qq.safari()) {\r\n            return e.x < 0 || e.y < 0;\r\n        }\r\n\r\n        return e.x === 0 && e.y === 0;\r\n    }\r\n\r\n    function setupDragDrop() {\r\n        var dropZones = options.dropZoneElements,\r\n\r\n            maybeHideDropZones = function() {\r\n                setTimeout(function() {\r\n                    qq.each(dropZones, function(idx, dropZone) {\r\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\r\n                        qq(dropZone).removeClass(options.classes.dropActive);\r\n                    });\r\n                }, 10);\r\n            };\r\n\r\n        qq.each(dropZones, function(idx, dropZone) {\r\n            var uploadDropZone = setupDropzone(dropZone);\r\n\r\n            // IE <= 9 does not support the File API used for drag+drop uploads\r\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\r\n                disposeSupport.attach(document, \"dragenter\", function(e) {\r\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\r\n                        qq.each(dropZones, function(idx, dropZone) {\r\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\r\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\r\n                            if (dropZone instanceof HTMLElement &&\r\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\r\n\r\n                                qq(dropZone).css({display: \"block\"});\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        disposeSupport.attach(document, \"dragleave\", function(e) {\r\n            if (leavingDocumentOut(e)) {\r\n                maybeHideDropZones();\r\n            }\r\n        });\r\n\r\n        // Just in case we were not able to detect when a dragged file has left the document,\r\n        // hide all relevant drop zones the next time the mouse enters the document.\r\n        // Note that mouse events such as this one are not fired during drag operations.\r\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\r\n            maybeHideDropZones();\r\n        });\r\n\r\n        disposeSupport.attach(document, \"drop\", function(e) {\r\n            if (isFileDrag(e)) {\r\n                e.preventDefault();\r\n                maybeHideDropZones();\r\n            }\r\n        });\r\n\r\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\r\n    }\r\n\r\n    setupDragDrop();\r\n\r\n    qq.extend(this, {\r\n        setupExtraDropzone: function(element) {\r\n            options.dropZoneElements.push(element);\r\n            setupDropzone(element);\r\n        },\r\n\r\n        removeDropzone: function(element) {\r\n            var i,\r\n                dzs = options.dropZoneElements;\r\n\r\n            for (i in dzs) {\r\n                if (dzs[i] === element) {\r\n                    return dzs.splice(i, 1);\r\n                }\r\n            }\r\n        },\r\n\r\n        dispose: function() {\r\n            disposeSupport.dispose();\r\n            qq.each(uploadDropZones, function(idx, dropZone) {\r\n                dropZone.dispose();\r\n            });\r\n        }\r\n    });\r\n\r\n    this._testing = {};\r\n    this._testing.extractDirectoryPath = extractDirectoryPath;\r\n};\r\n\r\nqq.DragAndDrop.callbacks = function() {\r\n    \"use strict\";\r\n\r\n    return {\r\n        dragEnter: function () {},\r\n        dragLeave: function () {},\r\n        processingDroppedFiles: function() {},\r\n        processingDroppedFilesComplete: function(files, targetEl) {},\r\n        dropError: function(code, errorSpecifics) {\r\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\r\n        },\r\n        dropLog: function(message, level) {\r\n            qq.log(message, level);\r\n        }\r\n    };\r\n};\r\n\r\nqq.UploadDropZone = function(o) {\r\n    \"use strict\";\r\n\r\n    var disposeSupport = new qq.DisposeSupport(),\r\n        options, element, preventDrop, dropOutsideDisabled;\r\n\r\n    options = {\r\n        element: null,\r\n        onEnter: function(e) {},\r\n        onLeave: function(e) {},\r\n        // is not fired when leaving element by hovering descendants\r\n        onLeaveNotDescendants: function(e) {},\r\n        onDrop: function(e) {}\r\n    };\r\n\r\n    qq.extend(options, o);\r\n    element = options.element;\r\n\r\n    function dragoverShouldBeCanceled() {\r\n        return qq.safari() || (qq.firefox() && qq.windows());\r\n    }\r\n\r\n    function disableDropOutside(e) {\r\n        // run only once for all instances\r\n        if (!dropOutsideDisabled) {\r\n\r\n            // for these cases we need to catch onDrop to reset dropArea\r\n            if (dragoverShouldBeCanceled) {\r\n                disposeSupport.attach(document, \"dragover\", function(e) {\r\n                    e.preventDefault();\r\n                });\r\n            } else {\r\n                disposeSupport.attach(document, \"dragover\", function(e) {\r\n                    if (e.dataTransfer) {\r\n                        e.dataTransfer.dropEffect = \"none\";\r\n                        e.preventDefault();\r\n                    }\r\n                });\r\n            }\r\n\r\n            dropOutsideDisabled = true;\r\n        }\r\n    }\r\n\r\n    function isValidFileDrag(e) {\r\n        // e.dataTransfer currently causing IE errors\r\n        // IE9 does NOT support file API, so drag-and-drop is not possible\r\n        if (!qq.supportedFeatures.fileDrop) {\r\n            return false;\r\n        }\r\n\r\n        var effectTest, dt = e.dataTransfer,\r\n        // do not check dt.types.contains in webkit, because it crashes safari 4\r\n        isSafari = qq.safari();\r\n\r\n        // dt.effectAllowed is none in Safari 5\r\n\r\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\r\n        // the filesystem\r\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\r\n        return dt && effectTest &&\r\n                (\r\n                    (dt.files && dt.files.length) ||                                     // Valid for drop events with files\r\n                    (!isSafari && dt.types.contains && dt.types.contains(\"Files\")) ||  // Valid in Chrome/Firefox\r\n                    (dt.types.includes && dt.types.includes(\"Files\"))               // Valid in IE\r\n                );\r\n    }\r\n\r\n    function isOrSetDropDisabled(isDisabled) {\r\n        if (isDisabled !== undefined) {\r\n            preventDrop = isDisabled;\r\n        }\r\n        return preventDrop;\r\n    }\r\n\r\n    function triggerHidezonesEvent() {\r\n        var hideZonesEvent;\r\n\r\n        function triggerUsingOldApi() {\r\n            hideZonesEvent = document.createEvent(\"Event\");\r\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\r\n        }\r\n\r\n        if (window.CustomEvent) {\r\n            try {\r\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\r\n            }\r\n            catch (err) {\r\n                triggerUsingOldApi();\r\n            }\r\n        }\r\n        else {\r\n            triggerUsingOldApi();\r\n        }\r\n\r\n        document.dispatchEvent(hideZonesEvent);\r\n    }\r\n\r\n    function attachEvents() {\r\n        disposeSupport.attach(element, \"dragover\", function(e) {\r\n            if (!isValidFileDrag(e)) {\r\n                return;\r\n            }\r\n\r\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\r\n            // the filesystem\r\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\r\n            if (effect === \"move\" || effect === \"linkMove\") {\r\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\r\n            } else {\r\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\r\n            }\r\n\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        });\r\n\r\n        disposeSupport.attach(element, \"dragenter\", function(e) {\r\n            if (!isOrSetDropDisabled()) {\r\n                if (!isValidFileDrag(e)) {\r\n                    return;\r\n                }\r\n                options.onEnter(e);\r\n            }\r\n        });\r\n\r\n        disposeSupport.attach(element, \"dragleave\", function(e) {\r\n            if (!isValidFileDrag(e)) {\r\n                return;\r\n            }\r\n\r\n            options.onLeave(e);\r\n\r\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\r\n            // do not fire when moving a mouse over a descendant\r\n            if (qq(this).contains(relatedTarget)) {\r\n                return;\r\n            }\r\n\r\n            options.onLeaveNotDescendants(e);\r\n        });\r\n\r\n        disposeSupport.attach(element, \"drop\", function(e) {\r\n            if (!isOrSetDropDisabled()) {\r\n                if (!isValidFileDrag(e)) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                options.onDrop(e);\r\n\r\n                triggerHidezonesEvent();\r\n            }\r\n        });\r\n    }\r\n\r\n    disableDropOutside();\r\n    attachEvents();\r\n\r\n    qq.extend(this, {\r\n        dropDisabled: function(isDisabled) {\r\n            return isOrSetDropDisabled(isDisabled);\r\n        },\r\n\r\n        dispose: function() {\r\n            disposeSupport.dispose();\r\n        },\r\n\r\n        getElement: function() {\r\n            return element;\r\n        }\r\n    });\r\n\r\n    this._testing = {};\r\n    this._testing.isValidFileDrag = isValidFileDrag;\r\n};\r\n","/*globals qq */\r\n/**\r\n * Defines the public API for FineUploader mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.uiPublicApi = {\r\n        addInitialFiles: function(cannedFileList) {\r\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\r\n            this._templating.addCacheToDom();\r\n        },\r\n\r\n        clearStoredFiles: function() {\r\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\r\n            this._templating.clearFiles();\r\n        },\r\n\r\n        addExtraDropzone: function(element) {\r\n            this._dnd && this._dnd.setupExtraDropzone(element);\r\n        },\r\n\r\n        removeExtraDropzone: function(element) {\r\n            if (this._dnd) {\r\n                return this._dnd.removeDropzone(element);\r\n            }\r\n        },\r\n\r\n        getItemByFileId: function(id) {\r\n            if (!this._templating.isHiddenForever(id)) {\r\n                return this._templating.getFileContainer(id);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            this._parent.prototype.reset.apply(this, arguments);\r\n            this._templating.reset();\r\n\r\n            if (!this._options.button && this._templating.getButton()) {\r\n                this._defaultButtonId = this._createUploadButton({\r\n                    element: this._templating.getButton(),\r\n                    title: this._options.text.fileInputTitle\r\n                }).getButtonId();\r\n            }\r\n\r\n            if (this._dnd) {\r\n                this._dnd.dispose();\r\n                this._dnd = this._setupDragAndDrop();\r\n            }\r\n\r\n            this._totalFilesInBatch = 0;\r\n            this._filesInBatchAddedToUi = 0;\r\n\r\n            this._setupClickAndEditEventHandlers();\r\n        },\r\n\r\n        setName: function(id, newName) {\r\n            var formattedFilename = this._options.formatFileName(newName);\r\n\r\n            this._parent.prototype.setName.apply(this, arguments);\r\n            this._templating.updateFilename(id, formattedFilename);\r\n        },\r\n\r\n        pauseUpload: function(id) {\r\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\r\n\r\n            paused && this._templating.uploadPaused(id);\r\n            return paused;\r\n        },\r\n\r\n        continueUpload: function(id) {\r\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\r\n\r\n            continued && this._templating.uploadContinued(id);\r\n            return continued;\r\n        },\r\n\r\n        getId: function(fileContainerOrChildEl) {\r\n            return this._templating.getFileId(fileContainerOrChildEl);\r\n        },\r\n\r\n        getDropTarget: function(fileId) {\r\n            var file = this.getFile(fileId);\r\n\r\n            return file.qqDropTarget;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Defines the private (internal) API for FineUploader mode.\r\n     */\r\n    qq.uiPrivateApi = {\r\n        _getButton: function(buttonId) {\r\n            var button = this._parent.prototype._getButton.apply(this, arguments);\r\n\r\n            if (!button) {\r\n                if (buttonId === this._defaultButtonId) {\r\n                    button = this._templating.getButton();\r\n                }\r\n            }\r\n\r\n            return button;\r\n        },\r\n\r\n        _removeFileItem: function(fileId) {\r\n            this._templating.removeFile(fileId);\r\n        },\r\n\r\n        _setupClickAndEditEventHandlers: function() {\r\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\r\n\r\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\r\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\r\n            this._focusinEventSupported = !qq.firefox();\r\n\r\n            if (this._isEditFilenameEnabled())\r\n            {\r\n                this._filenameClickHandler = this._bindFilenameClickEvent();\r\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\r\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\r\n            }\r\n        },\r\n\r\n        _setupDragAndDrop: function() {\r\n            var self = this,\r\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\r\n                templating = this._templating,\r\n                defaultDropZone = templating.getDropZone();\r\n\r\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\r\n\r\n            return new qq.DragAndDrop({\r\n                dropZoneElements: dropZoneElements,\r\n                allowMultipleItems: this._options.multiple,\r\n                classes: {\r\n                    dropActive: this._options.classes.dropActive\r\n                },\r\n                callbacks: {\r\n                    processingDroppedFiles: function() {\r\n                        templating.showDropProcessing();\r\n                    },\r\n                    processingDroppedFilesComplete: function(files, targetEl) {\r\n                        templating.hideDropProcessing();\r\n\r\n                        qq.each(files, function(idx, file) {\r\n                            file.qqDropTarget = targetEl;\r\n                        });\r\n\r\n                        if (files.length) {\r\n                            self.addFiles(files, null, null);\r\n                        }\r\n                    },\r\n                    dropError: function(code, errorData) {\r\n                        self._itemError(code, errorData);\r\n                    },\r\n                    dropLog: function(message, level) {\r\n                        self.log(message, level);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _bindFileButtonsClickEvent: function() {\r\n            var self = this;\r\n\r\n            return new qq.FileButtonsClickHandler({\r\n                templating: this._templating,\r\n\r\n                log: function(message, lvl) {\r\n                    self.log(message, lvl);\r\n                },\r\n\r\n                onDeleteFile: function(fileId) {\r\n                    self.deleteFile(fileId);\r\n                },\r\n\r\n                onCancel: function(fileId) {\r\n                    self.cancel(fileId);\r\n                },\r\n\r\n                onRetry: function(fileId) {\r\n                    self.retry(fileId);\r\n                },\r\n\r\n                onPause: function(fileId) {\r\n                    self.pauseUpload(fileId);\r\n                },\r\n\r\n                onContinue: function(fileId) {\r\n                    self.continueUpload(fileId);\r\n                },\r\n\r\n                onGetName: function(fileId) {\r\n                    return self.getName(fileId);\r\n                }\r\n            });\r\n        },\r\n\r\n        _isEditFilenameEnabled: function() {\r\n            /*jshint -W014 */\r\n            return this._templating.isEditFilenamePossible()\r\n                && !this._options.autoUpload\r\n                && qq.FilenameClickHandler\r\n                && qq.FilenameInputFocusHandler\r\n                && qq.FilenameInputFocusHandler;\r\n        },\r\n\r\n        _filenameEditHandler: function() {\r\n            var self = this,\r\n                templating = this._templating;\r\n\r\n            return {\r\n                templating: templating,\r\n                log: function(message, lvl) {\r\n                    self.log(message, lvl);\r\n                },\r\n                onGetUploadStatus: function(fileId) {\r\n                    return self.getUploads({id: fileId}).status;\r\n                },\r\n                onGetName: function(fileId) {\r\n                    return self.getName(fileId);\r\n                },\r\n                onSetName: function(id, newName) {\r\n                    self.setName(id, newName);\r\n                },\r\n                onEditingStatusChange: function(id, isEditing) {\r\n                    var qqInput = qq(templating.getEditInput(id)),\r\n                        qqFileContainer = qq(templating.getFileContainer(id));\r\n\r\n                    if (isEditing) {\r\n                        qqInput.addClass(\"qq-editing\");\r\n                        templating.hideFilename(id);\r\n                        templating.hideEditIcon(id);\r\n                    }\r\n                    else {\r\n                        qqInput.removeClass(\"qq-editing\");\r\n                        templating.showFilename(id);\r\n                        templating.showEditIcon(id);\r\n                    }\r\n\r\n                    // Force IE8 and older to repaint\r\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\r\n                }\r\n            };\r\n        },\r\n\r\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\r\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\r\n\r\n            if (this._isEditFilenameEnabled()) {\r\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\r\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\r\n                    this._templating.markFilenameEditable(id);\r\n                    this._templating.hideEditIcon(id);\r\n                }\r\n            }\r\n\r\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\r\n                this._templating.hideRetry(id);\r\n                this._templating.setStatusText(id);\r\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\r\n            }\r\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\r\n                this._templating.hidePause(id);\r\n            }\r\n        },\r\n\r\n        _bindFilenameInputFocusInEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameInputFocusInHandler(spec);\r\n        },\r\n\r\n        _bindFilenameInputFocusEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameInputFocusHandler(spec);\r\n        },\r\n\r\n        _bindFilenameClickEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameClickHandler(spec);\r\n        },\r\n\r\n        _storeForLater: function(id) {\r\n            this._parent.prototype._storeForLater.apply(this, arguments);\r\n            this._templating.hideSpinner(id);\r\n        },\r\n\r\n        _onAllComplete: function(successful, failed) {\r\n            this._parent.prototype._onAllComplete.apply(this, arguments);\r\n            this._templating.resetTotalProgress();\r\n        },\r\n\r\n        _onSubmit: function(id, name) {\r\n            var file = this.getFile(id);\r\n\r\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\r\n                this._paramsStore.addReadOnly(id, {\r\n                    qqpath: file.qqPath\r\n                });\r\n            }\r\n\r\n            this._parent.prototype._onSubmit.apply(this, arguments);\r\n            this._addToList(id, name);\r\n        },\r\n\r\n        // The file item has been added to the DOM.\r\n        _onSubmitted: function(id) {\r\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\r\n            if (this._isEditFilenameEnabled()) {\r\n                this._templating.markFilenameEditable(id);\r\n                this._templating.showEditIcon(id);\r\n\r\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\r\n                if (!this._focusinEventSupported) {\r\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\r\n                }\r\n            }\r\n        },\r\n\r\n        // Update the progress bar & percentage as the file is uploaded\r\n        _onProgress: function(id, name, loaded, total) {\r\n            this._parent.prototype._onProgress.apply(this, arguments);\r\n\r\n            this._templating.updateProgress(id, loaded, total);\r\n\r\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\r\n                this._templating.hideCancel(id);\r\n                this._templating.hidePause(id);\r\n                this._templating.hideProgress(id);\r\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\r\n\r\n                // If ~last byte was sent, display total file size\r\n                this._displayFileSize(id);\r\n            }\r\n            else {\r\n                // If still uploading, display percentage - total size is actually the total request(s) size\r\n                this._displayFileSize(id, loaded, total);\r\n            }\r\n        },\r\n\r\n        _onTotalProgress: function(loaded, total) {\r\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\r\n            this._templating.updateTotalProgress(loaded, total);\r\n        },\r\n\r\n        _onComplete: function(id, name, result, xhr) {\r\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\r\n                templating = this._templating,\r\n                fileContainer = templating.getFileContainer(id),\r\n                self = this;\r\n\r\n            function completeUpload(result) {\r\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\r\n                // If so, don't perform any UI-related tasks related to this file.\r\n                if (!fileContainer) {\r\n                    return;\r\n                }\r\n\r\n                templating.setStatusText(id);\r\n\r\n                qq(fileContainer).removeClass(self._classes.retrying);\r\n                templating.hideProgress(id);\r\n\r\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\r\n                    templating.hideCancel(id);\r\n                }\r\n                templating.hideSpinner(id);\r\n\r\n                if (result.success) {\r\n                    self._markFileAsSuccessful(id);\r\n                }\r\n                else {\r\n                    qq(fileContainer).addClass(self._classes.fail);\r\n                    templating.showCancel(id);\r\n\r\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\r\n                        qq(fileContainer).addClass(self._classes.retryable);\r\n                        templating.showRetry(id);\r\n                    }\r\n                    self._controlFailureTextDisplay(id, result);\r\n                }\r\n            }\r\n\r\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\r\n            if (parentRetVal instanceof qq.Promise) {\r\n                parentRetVal.done(function(newResult) {\r\n                    completeUpload(newResult);\r\n                });\r\n\r\n            }\r\n            else {\r\n                completeUpload(result);\r\n            }\r\n\r\n            return parentRetVal;\r\n        },\r\n\r\n        _markFileAsSuccessful: function(id) {\r\n            var templating = this._templating;\r\n\r\n            if (this._isDeletePossible()) {\r\n                templating.showDeleteButton(id);\r\n            }\r\n\r\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\r\n\r\n            this._maybeUpdateThumbnail(id);\r\n        },\r\n\r\n        _onUploadPrep: function(id) {\r\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\r\n            this._templating.showSpinner(id);\r\n        },\r\n\r\n        _onUpload: function(id, name) {\r\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\r\n\r\n            this._templating.showSpinner(id);\r\n\r\n            return parentRetVal;\r\n        },\r\n\r\n        _onUploadChunk: function(id, chunkData) {\r\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\r\n\r\n            // Only display the pause button if we have finished uploading at least one chunk\r\n            // & this file can be resumed\r\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\r\n                this._templating.allowPause(id);\r\n            }\r\n        },\r\n\r\n        _onCancel: function(id, name) {\r\n            this._parent.prototype._onCancel.apply(this, arguments);\r\n            this._removeFileItem(id);\r\n\r\n            if (this._getNotFinished() === 0) {\r\n                this._templating.resetTotalProgress();\r\n            }\r\n        },\r\n\r\n        _onBeforeAutoRetry: function(id) {\r\n            var retryNumForDisplay, maxAuto, retryNote;\r\n\r\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\r\n\r\n            this._showCancelLink(id);\r\n\r\n            if (this._options.retry.showAutoRetryNote) {\r\n                retryNumForDisplay = this._autoRetries[id];\r\n                maxAuto = this._options.retry.maxAutoAttempts;\r\n\r\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\r\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\r\n\r\n                this._templating.setStatusText(id, retryNote);\r\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\r\n            }\r\n        },\r\n\r\n        //return false if we should not attempt the requested retry\r\n        _onBeforeManualRetry: function(id) {\r\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\r\n                this._templating.resetProgress(id);\r\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\r\n                this._templating.setStatusText(id);\r\n                this._templating.showSpinner(id);\r\n                this._showCancelLink(id);\r\n                return true;\r\n            }\r\n            else {\r\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\r\n                this._templating.showRetry(id);\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onSubmitDelete: function(id) {\r\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\r\n\r\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\r\n        },\r\n\r\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\r\n            if (this._options.deleteFile.forceConfirm) {\r\n                this._showDeleteConfirm.apply(this, arguments);\r\n            }\r\n            else {\r\n                this._sendDeleteRequest.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        _onDeleteComplete: function(id, xhr, isError) {\r\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\r\n\r\n            this._templating.hideSpinner(id);\r\n\r\n            if (isError) {\r\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\r\n                this._templating.showDeleteButton(id);\r\n            }\r\n            else {\r\n                this._removeFileItem(id);\r\n            }\r\n        },\r\n\r\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\r\n            this._templating.hideDeleteButton(id);\r\n            this._templating.showSpinner(id);\r\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\r\n            this._deleteHandler.sendDelete.apply(this, arguments);\r\n        },\r\n\r\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\r\n            /*jshint -W004 */\r\n            var fileName = this.getName(id),\r\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\r\n                uuid = this.getUuid(id),\r\n                deleteRequestArgs = arguments,\r\n                self = this,\r\n                retVal;\r\n\r\n            retVal = this._options.showConfirm(confirmMessage);\r\n\r\n            if (qq.isGenericPromise(retVal)) {\r\n                retVal.then(function() {\r\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\r\n                });\r\n            }\r\n            else if (retVal !== false) {\r\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\r\n            }\r\n        },\r\n\r\n        _addToList: function(id, name, canned) {\r\n            var prependData,\r\n                prependIndex = 0,\r\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\r\n                record;\r\n\r\n            if (this._options.display.prependFiles) {\r\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\r\n                    prependIndex = this._filesInBatchAddedToUi - 1;\r\n                }\r\n\r\n                prependData = {\r\n                    index: prependIndex\r\n                };\r\n            }\r\n\r\n            if (!canned) {\r\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\r\n                    this._templating.disableCancel();\r\n                }\r\n\r\n                // Cancel all existing (previous) files and clear the list if this file is not part of\r\n                // a scaled file group that has already been accepted, or if this file is not part of\r\n                // a scaled file group at all.\r\n                if (!this._options.multiple) {\r\n                    record = this.getUploads({id: id});\r\n\r\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\r\n\r\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\r\n                        this._handler.cancelAll();\r\n                        this._clearList();\r\n                        this._handledProxyGroup = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (canned) {\r\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\r\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\r\n            }\r\n            else {\r\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\r\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\r\n            }\r\n\r\n            this._filesInBatchAddedToUi += 1;\r\n\r\n            if (canned ||\r\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\r\n\r\n                this._displayFileSize(id);\r\n            }\r\n        },\r\n\r\n        _clearList: function() {\r\n            this._templating.clearFiles();\r\n            this.clearStoredFiles();\r\n        },\r\n\r\n        _displayFileSize: function(id, loadedSize, totalSize) {\r\n            var size = this.getSize(id),\r\n                sizeForDisplay = this._formatSize(size);\r\n\r\n            if (size >= 0) {\r\n                if (loadedSize !== undefined && totalSize !== undefined) {\r\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\r\n                }\r\n\r\n                this._templating.updateSize(id, sizeForDisplay);\r\n            }\r\n        },\r\n\r\n        _formatProgress: function(uploadedSize, totalSize) {\r\n            var message = this._options.text.formatProgress;\r\n            function r(name, replacement) { message = message.replace(name, replacement); }\r\n\r\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\r\n            r(\"{total_size}\", this._formatSize(totalSize));\r\n            return message;\r\n        },\r\n\r\n        _controlFailureTextDisplay: function(id, response) {\r\n            var mode, responseProperty, failureReason;\r\n\r\n            mode = this._options.failedUploadTextDisplay.mode;\r\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\r\n\r\n            if (mode === \"custom\") {\r\n                failureReason = response[responseProperty];\r\n                if (!failureReason) {\r\n                    failureReason = this._options.text.failUpload;\r\n                }\r\n\r\n                this._templating.setStatusText(id, failureReason);\r\n\r\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\r\n                    this._showTooltip(id, failureReason);\r\n                }\r\n            }\r\n            else if (mode === \"default\") {\r\n                this._templating.setStatusText(id, this._options.text.failUpload);\r\n            }\r\n            else if (mode !== \"none\") {\r\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\r\n            }\r\n        },\r\n\r\n        _showTooltip: function(id, text) {\r\n            this._templating.getFileContainer(id).title = text;\r\n        },\r\n\r\n        _showCancelLink: function(id) {\r\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\r\n                this._templating.showCancel(id);\r\n            }\r\n        },\r\n\r\n        _itemError: function(code, name, item) {\r\n            var message = this._parent.prototype._itemError.apply(this, arguments);\r\n            this._options.showMessage(message);\r\n        },\r\n\r\n        _batchError: function(message) {\r\n            this._parent.prototype._batchError.apply(this, arguments);\r\n            this._options.showMessage(message);\r\n        },\r\n\r\n        _setupPastePrompt: function() {\r\n            var self = this;\r\n\r\n            this._options.callbacks.onPasteReceived = function() {\r\n                var message = self._options.paste.namePromptMessage,\r\n                    defaultVal = self._options.paste.defaultName;\r\n\r\n                return self._options.showPrompt(message, defaultVal);\r\n            };\r\n        },\r\n\r\n        _fileOrBlobRejected: function(id, name) {\r\n            this._totalFilesInBatch -= 1;\r\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\r\n        },\r\n\r\n        _prepareItemsForUpload: function(items, params, endpoint) {\r\n            this._totalFilesInBatch = items.length;\r\n            this._filesInBatchAddedToUi = 0;\r\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\r\n        },\r\n\r\n        _maybeUpdateThumbnail: function(fileId) {\r\n            var thumbnailUrl = this._thumbnailUrls[fileId],\r\n                fileStatus = this.getUploads({id: fileId}).status;\r\n\r\n            if (fileStatus !== qq.status.DELETED &&\r\n                (thumbnailUrl ||\r\n                this._options.thumbnails.placeholders.waitUntilResponse ||\r\n                !qq.supportedFeatures.imagePreviews)) {\r\n\r\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\r\n                // if called with a null thumbnailUrl.\r\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\r\n            }\r\n        },\r\n\r\n        _addCannedFile: function(sessionData) {\r\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\r\n\r\n            this._addToList(id, this.getName(id), true);\r\n            this._templating.hideSpinner(id);\r\n            this._templating.hideCancel(id);\r\n            this._markFileAsSuccessful(id);\r\n\r\n            return id;\r\n        },\r\n\r\n        _setSize: function(id, newSize) {\r\n            this._parent.prototype._setSize.apply(this, arguments);\r\n\r\n            this._templating.updateSize(id, this._formatSize(newSize));\r\n        },\r\n\r\n        _sessionRequestComplete: function() {\r\n            this._templating.addCacheToDom();\r\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\r\n        }\r\n    };\r\n}());\r\n","/*globals qq */\r\n/**\r\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\r\n */\r\nqq.FineUploader = function(o, namespace) {\r\n    \"use strict\";\r\n\r\n    var self = this;\r\n\r\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\r\n    // if the (internal) caller defines a different parent.  The parent is also used by\r\n    // the private and public API functions that need to delegate to a parent function.\r\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\r\n    this._parent.apply(this, arguments);\r\n\r\n    // Options provided by FineUploader mode\r\n    qq.extend(this._options, {\r\n        element: null,\r\n\r\n        button: null,\r\n\r\n        listElement: null,\r\n\r\n        dragAndDrop: {\r\n            extraDropzones: [],\r\n            reportDirectoryPaths: false\r\n        },\r\n\r\n        text: {\r\n            formatProgress: \"{percent}% of {total_size}\",\r\n            failUpload: \"Upload failed\",\r\n            waitingForResponse: \"Processing...\",\r\n            paused: \"Paused\"\r\n        },\r\n\r\n        template: \"qq-template\",\r\n\r\n        classes: {\r\n            retrying: \"qq-upload-retrying\",\r\n            retryable: \"qq-upload-retryable\",\r\n            success: \"qq-upload-success\",\r\n            fail: \"qq-upload-fail\",\r\n            editable: \"qq-editable\",\r\n            hide: \"qq-hide\",\r\n            dropActive: \"qq-upload-drop-area-active\"\r\n        },\r\n\r\n        failedUploadTextDisplay: {\r\n            mode: \"default\", //default, custom, or none\r\n            responseProperty: \"error\",\r\n            enableTooltip: true\r\n        },\r\n\r\n        messages: {\r\n            tooManyFilesError: \"You may only drop one file\",\r\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\r\n        },\r\n\r\n        retry: {\r\n            showAutoRetryNote: true,\r\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\r\n        },\r\n\r\n        deleteFile: {\r\n            forceConfirm: false,\r\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\r\n            deletingStatusText: \"Deleting...\",\r\n            deletingFailedText: \"Delete failed\"\r\n\r\n        },\r\n\r\n        display: {\r\n            fileSizeOnSubmit: false,\r\n            prependFiles: false\r\n        },\r\n\r\n        paste: {\r\n            promptForName: false,\r\n            namePromptMessage: \"Please name this image\"\r\n        },\r\n\r\n        thumbnails: {\r\n            customResizer: null,\r\n            maxCount: 0,\r\n            placeholders: {\r\n                waitUntilResponse: false,\r\n                notAvailablePath: null,\r\n                waitingPath: null\r\n            },\r\n            timeBetweenThumbs: 750\r\n        },\r\n\r\n        scaling: {\r\n            hideScaled: false\r\n        },\r\n\r\n        showMessage: function(message) {\r\n            if (self._templating.hasDialog(\"alert\")) {\r\n                return self._templating.showDialog(\"alert\", message);\r\n            }\r\n            else {\r\n                setTimeout(function() {\r\n                    window.alert(message);\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        showConfirm: function(message) {\r\n            if (self._templating.hasDialog(\"confirm\")) {\r\n                return self._templating.showDialog(\"confirm\", message);\r\n            }\r\n            else {\r\n                return window.confirm(message);\r\n            }\r\n        },\r\n\r\n        showPrompt: function(message, defaultValue) {\r\n            if (self._templating.hasDialog(\"prompt\")) {\r\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\r\n            }\r\n            else {\r\n                return window.prompt(message, defaultValue);\r\n            }\r\n        }\r\n    }, true);\r\n\r\n    // Replace any default options with user defined ones\r\n    qq.extend(this._options, o, true);\r\n\r\n    this._templating = new qq.Templating({\r\n        log: qq.bind(this.log, this),\r\n        templateIdOrEl: this._options.template,\r\n        containerEl: this._options.element,\r\n        fileContainerEl: this._options.listElement,\r\n        button: this._options.button,\r\n        imageGenerator: this._imageGenerator,\r\n        classes: {\r\n            hide: this._options.classes.hide,\r\n            editable: this._options.classes.editable\r\n        },\r\n        limits: {\r\n            maxThumbs: this._options.thumbnails.maxCount,\r\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\r\n        },\r\n        placeholders: {\r\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\r\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\r\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\r\n        },\r\n        text: this._options.text\r\n    });\r\n\r\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\r\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\r\n    }\r\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\r\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\r\n    }\r\n    else {\r\n        this._wrapCallbacks();\r\n\r\n        this._templating.render();\r\n\r\n        this._classes = this._options.classes;\r\n\r\n        if (!this._options.button && this._templating.getButton()) {\r\n            this._defaultButtonId = this._createUploadButton({\r\n                element: this._templating.getButton(),\r\n                title: this._options.text.fileInputTitle\r\n            }).getButtonId();\r\n        }\r\n\r\n        this._setupClickAndEditEventHandlers();\r\n\r\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\r\n            this._dnd = this._setupDragAndDrop();\r\n        }\r\n\r\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\r\n            if (qq.PasteSupport) {\r\n                this._setupPastePrompt();\r\n            }\r\n            else {\r\n                this.log(\"Paste support module not found.\", \"error\");\r\n            }\r\n        }\r\n\r\n        this._totalFilesInBatch = 0;\r\n        this._filesInBatchAddedToUi = 0;\r\n    }\r\n};\r\n\r\n// Inherit the base public & private API methods\r\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\r\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\r\n\r\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\r\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\r\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\r\n","/* globals qq */\r\n/* jshint -W065 */\r\n/**\r\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\r\n * a limited amount of control over the template elements after they are added to the DOM.\r\n * Wherever possible, this module asserts total control over template elements present in the DOM.\r\n *\r\n * @param spec Specification object used to control various templating behaviors\r\n * @constructor\r\n */\r\nqq.Templating = function(spec) {\r\n    \"use strict\";\r\n\r\n    var FILE_ID_ATTR = \"qq-file-id\",\r\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\r\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\r\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\r\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\r\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\r\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\r\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\r\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\r\n        fileBatch = {\r\n            content: document.createDocumentFragment(),\r\n            map: {}\r\n        },\r\n        isCancelDisabled = false,\r\n        generatedThumbnails = 0,\r\n        thumbnailQueueMonitorRunning = false,\r\n        thumbGenerationQueue = [],\r\n        thumbnailMaxSize = -1,\r\n        options = {\r\n            log: null,\r\n            limits: {\r\n                maxThumbs: 0,\r\n                timeBetweenThumbs: 750\r\n            },\r\n            templateIdOrEl: \"qq-template\",\r\n            containerEl: null,\r\n            fileContainerEl: null,\r\n            button: null,\r\n            imageGenerator: null,\r\n            classes: {\r\n                hide: \"qq-hide\",\r\n                editable: \"qq-editable\"\r\n            },\r\n            placeholders: {\r\n                waitUntilUpdate: false,\r\n                thumbnailNotAvailable: null,\r\n                waitingForThumbnail: null\r\n            },\r\n            text: {\r\n                paused: \"Paused\"\r\n            }\r\n        },\r\n        selectorClasses = {\r\n            button: \"qq-upload-button-selector\",\r\n            alertDialog: \"qq-alert-dialog-selector\",\r\n            dialogCancelButton: \"qq-cancel-button-selector\",\r\n            confirmDialog: \"qq-confirm-dialog-selector\",\r\n            dialogMessage: \"qq-dialog-message-selector\",\r\n            dialogOkButton: \"qq-ok-button-selector\",\r\n            promptDialog: \"qq-prompt-dialog-selector\",\r\n            uploader: \"qq-uploader-selector\",\r\n            drop: \"qq-upload-drop-area-selector\",\r\n            list: \"qq-upload-list-selector\",\r\n            progressBarContainer: \"qq-progress-bar-container-selector\",\r\n            progressBar: \"qq-progress-bar-selector\",\r\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\r\n            totalProgressBar: \"qq-total-progress-bar-selector\",\r\n            file: \"qq-upload-file-selector\",\r\n            spinner: \"qq-upload-spinner-selector\",\r\n            size: \"qq-upload-size-selector\",\r\n            cancel: \"qq-upload-cancel-selector\",\r\n            pause: \"qq-upload-pause-selector\",\r\n            continueButton: \"qq-upload-continue-selector\",\r\n            deleteButton: \"qq-upload-delete-selector\",\r\n            retry: \"qq-upload-retry-selector\",\r\n            statusText: \"qq-upload-status-text-selector\",\r\n            editFilenameInput: \"qq-edit-filename-selector\",\r\n            editNameIcon: \"qq-edit-filename-icon-selector\",\r\n            dropText: \"qq-upload-drop-area-text-selector\",\r\n            dropProcessing: \"qq-drop-processing-selector\",\r\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\r\n            thumbnail: \"qq-thumbnail-selector\"\r\n        },\r\n        previewGeneration = {},\r\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\r\n        cachedWaitingForThumbnailImg = new qq.Promise(),\r\n        log,\r\n        isEditElementsExist,\r\n        isRetryElementExist,\r\n        templateDom,\r\n        container,\r\n        fileList,\r\n        showThumbnails,\r\n        serverScale,\r\n\r\n        // During initialization of the templating module we should cache any\r\n        // placeholder images so we can quickly swap them into the file list on demand.\r\n        // Any placeholder images that cannot be loaded/found are simply ignored.\r\n        cacheThumbnailPlaceholders = function() {\r\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\r\n                waitingUrl = options.placeholders.waitingForThumbnail,\r\n                spec = {\r\n                    maxSize: thumbnailMaxSize,\r\n                    scale: serverScale\r\n                };\r\n\r\n            if (showThumbnails) {\r\n                if (notAvailableUrl) {\r\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\r\n                        function(updatedImg) {\r\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\r\n                        },\r\n                        function() {\r\n                            cachedThumbnailNotAvailableImg.failure();\r\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\r\n                        }\r\n                    );\r\n                }\r\n                else {\r\n                    cachedThumbnailNotAvailableImg.failure();\r\n                }\r\n\r\n                if (waitingUrl) {\r\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\r\n                        function(updatedImg) {\r\n                            cachedWaitingForThumbnailImg.success(updatedImg);\r\n                        },\r\n                        function() {\r\n                            cachedWaitingForThumbnailImg.failure();\r\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\r\n                        }\r\n                    );\r\n                }\r\n                else {\r\n                    cachedWaitingForThumbnailImg.failure();\r\n                }\r\n            }\r\n        },\r\n\r\n        // Displays a \"waiting for thumbnail\" type placeholder image\r\n        // iff we were able to load it during initialization of the templating module.\r\n        displayWaitingImg = function(thumbnail) {\r\n            var waitingImgPlacement = new qq.Promise();\r\n\r\n            cachedWaitingForThumbnailImg.then(function(img) {\r\n                maybeScalePlaceholderViaCss(img, thumbnail);\r\n                /* jshint eqnull:true */\r\n                if (!thumbnail.src) {\r\n                    thumbnail.src = img.src;\r\n                    thumbnail.onload = function() {\r\n                        thumbnail.onload = null;\r\n                        show(thumbnail);\r\n                        waitingImgPlacement.success();\r\n                    };\r\n                }\r\n                else {\r\n                    waitingImgPlacement.success();\r\n                }\r\n            }, function() {\r\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\r\n                // are displayed as \"broken\" images, so we should just hide the img tag\r\n                // if we aren't going to display the \"waiting\" placeholder.\r\n                hide(thumbnail);\r\n                waitingImgPlacement.success();\r\n            });\r\n\r\n            return waitingImgPlacement;\r\n        },\r\n\r\n        generateNewPreview = function(id, blob, spec) {\r\n            var thumbnail = getThumbnail(id);\r\n\r\n            log(\"Generating new thumbnail for \" + id);\r\n            blob.qqThumbnailId = id;\r\n\r\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\r\n                function() {\r\n                    generatedThumbnails++;\r\n                    show(thumbnail);\r\n                    previewGeneration[id].success();\r\n                },\r\n                function() {\r\n                    previewGeneration[id].failure();\r\n\r\n                    // Display the \"not available\" placeholder img only if we are\r\n                    // not expecting a thumbnail at a later point, such as in a server response.\r\n                    if (!options.placeholders.waitUntilUpdate) {\r\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\r\n                    }\r\n                });\r\n        },\r\n\r\n        generateNextQueuedPreview = function() {\r\n            if (thumbGenerationQueue.length) {\r\n                thumbnailQueueMonitorRunning = true;\r\n\r\n                var queuedThumbRequest = thumbGenerationQueue.shift();\r\n\r\n                if (queuedThumbRequest.update) {\r\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\r\n                }\r\n                else {\r\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\r\n                }\r\n            }\r\n            else {\r\n                thumbnailQueueMonitorRunning = false;\r\n            }\r\n        },\r\n\r\n        getCancel = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\r\n        },\r\n\r\n        getContinue = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\r\n        },\r\n\r\n        getDialog = function(type) {\r\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\r\n        },\r\n\r\n        getDelete = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\r\n        },\r\n\r\n        getDropProcessing = function() {\r\n            return getTemplateEl(container, selectorClasses.dropProcessing);\r\n        },\r\n\r\n        getEditIcon = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\r\n        },\r\n\r\n        getFile = function(id) {\r\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\r\n        },\r\n\r\n        getFilename = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.file);\r\n        },\r\n\r\n        getPause = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.pause);\r\n        },\r\n\r\n        getProgress = function(id) {\r\n            /* jshint eqnull:true */\r\n            // Total progress bar\r\n            if (id == null) {\r\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\r\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\r\n            }\r\n\r\n            // Per-file progress bar\r\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\r\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\r\n        },\r\n\r\n        getRetry = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.retry);\r\n        },\r\n\r\n        getSize = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.size);\r\n        },\r\n\r\n        getSpinner = function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\r\n        },\r\n\r\n        getTemplateEl = function(context, cssClass) {\r\n            return context && qq(context).getFirstByClass(cssClass);\r\n        },\r\n\r\n        getThumbnail = function(id) {\r\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\r\n        },\r\n\r\n        hide = function(el) {\r\n            el && qq(el).addClass(options.classes.hide);\r\n        },\r\n\r\n        // Ensures a placeholder image does not exceed any max size specified\r\n        // via `style` attribute properties iff <canvas> was not used to scale\r\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\r\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\r\n            var maxWidth = placeholder.style.maxWidth,\r\n                maxHeight = placeholder.style.maxHeight;\r\n\r\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\r\n                qq(thumbnail).css({\r\n                    maxWidth: maxWidth,\r\n                    maxHeight: maxHeight\r\n                });\r\n            }\r\n        },\r\n\r\n        // Displays a \"thumbnail not available\" type placeholder image\r\n        // iff we were able to load this placeholder during initialization\r\n        // of the templating module or after preview generation has failed.\r\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\r\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\r\n                notAvailableImgPlacement = new qq.Promise();\r\n\r\n            cachedThumbnailNotAvailableImg.then(function(img) {\r\n                previewing.then(\r\n                    function() {\r\n                        notAvailableImgPlacement.success();\r\n                    },\r\n                    function() {\r\n                        maybeScalePlaceholderViaCss(img, thumbnail);\r\n\r\n                        thumbnail.onload = function() {\r\n                            thumbnail.onload = null;\r\n                            notAvailableImgPlacement.success();\r\n                        };\r\n\r\n                        thumbnail.src = img.src;\r\n                        show(thumbnail);\r\n                    }\r\n                );\r\n            });\r\n\r\n            return notAvailableImgPlacement;\r\n        },\r\n\r\n        /**\r\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\r\n         * some internally-tracked state variables based on the contents of the template.\r\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\r\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\r\n         *\r\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\r\n         */\r\n        parseAndGetTemplate = function() {\r\n            var scriptEl,\r\n                scriptHtml,\r\n                fileListNode,\r\n                tempTemplateEl,\r\n                fileListEl,\r\n                defaultButton,\r\n                dropArea,\r\n                thumbnail,\r\n                dropProcessing,\r\n                dropTextEl,\r\n                uploaderEl;\r\n\r\n            log(\"Parsing template\");\r\n\r\n            /*jshint -W116*/\r\n            if (options.templateIdOrEl == null) {\r\n                throw new Error(\"You MUST specify either a template element or ID!\");\r\n            }\r\n\r\n            // Grab the contents of the script tag holding the template.\r\n            if (qq.isString(options.templateIdOrEl)) {\r\n                scriptEl = document.getElementById(options.templateIdOrEl);\r\n\r\n                if (scriptEl === null) {\r\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\r\n                }\r\n\r\n                scriptHtml = scriptEl.innerHTML;\r\n            }\r\n            else {\r\n                if (options.templateIdOrEl.innerHTML === undefined) {\r\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\r\n                        \"It must be an ID or an Element.\");\r\n                }\r\n\r\n                scriptHtml = options.templateIdOrEl.innerHTML;\r\n            }\r\n\r\n            scriptHtml = qq.trimStr(scriptHtml);\r\n            tempTemplateEl = document.createElement(\"div\");\r\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\r\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\r\n\r\n            // Don't include the default template button in the DOM\r\n            // if an alternate button container has been specified.\r\n            if (options.button) {\r\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\r\n                if (defaultButton) {\r\n                    qq(defaultButton).remove();\r\n                }\r\n            }\r\n\r\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\r\n            // or the drag and drop module is not found.\r\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\r\n            // to support layouts where the drop zone is also a container for visible elements,\r\n            // such as the file list.\r\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\r\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\r\n                if (dropProcessing) {\r\n                    qq(dropProcessing).remove();\r\n                }\r\n            }\r\n\r\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\r\n\r\n            // If DnD is not available then remove\r\n            // it from the DOM as well.\r\n            if (dropArea && !qq.DragAndDrop) {\r\n                log(\"DnD module unavailable.\", \"info\");\r\n                qq(dropArea).remove();\r\n            }\r\n\r\n            if (!qq.supportedFeatures.fileDrop) {\r\n                // don't display any \"drop files to upload\" background text\r\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\r\n\r\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\r\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\r\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\r\n                    // will not do this (since we will not be loading the DnD module)\r\n                    qq(dropArea).css({\r\n                        display: \"none\"\r\n                    });\r\n                }\r\n            }\r\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\r\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\r\n                dropTextEl && qq(dropTextEl).remove();\r\n            }\r\n\r\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\r\n            // is present in the template AND the current UA is capable of generating client-side previews.\r\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\r\n            if (!showThumbnails) {\r\n                thumbnail && qq(thumbnail).remove();\r\n            }\r\n            else if (thumbnail) {\r\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\r\n                // Only enforce max size if the attr value is non-zero\r\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\r\n\r\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\r\n            }\r\n            showThumbnails = showThumbnails && thumbnail;\r\n\r\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\r\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\r\n\r\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\r\n            /*jshint -W116*/\r\n            if (fileListNode == null) {\r\n                throw new Error(\"Could not find the file list container in the template!\");\r\n            }\r\n\r\n            fileListEl = fileListNode.children[0].cloneNode(true);\r\n            fileListNode.innerHTML = \"\";\r\n\r\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\r\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\r\n                document.createElement(\"dialog\");\r\n            }\r\n\r\n            log(\"Template parsing complete\");\r\n\r\n            return {\r\n                template: tempTemplateEl,\r\n                fileTemplate: fileListEl\r\n            };\r\n        },\r\n\r\n        prependFile = function(el, index, fileList) {\r\n            var parentEl = fileList,\r\n                beforeEl = parentEl.firstChild;\r\n\r\n            if (index > 0) {\r\n                beforeEl = qq(parentEl).children()[index].nextSibling;\r\n\r\n            }\r\n\r\n            parentEl.insertBefore(el, beforeEl);\r\n        },\r\n\r\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\r\n            var id = queuedThumbRequest.id,\r\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\r\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\r\n                thumbnail = getThumbnail(id),\r\n                spec = {\r\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\r\n                    maxSize: thumbnailMaxSize,\r\n                    orient: true,\r\n                    scale: true\r\n                };\r\n\r\n            if (qq.supportedFeatures.imagePreviews) {\r\n                if (thumbnail) {\r\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\r\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\r\n                        generateNextQueuedPreview();\r\n                    }\r\n                    else {\r\n                        displayWaitingImg(thumbnail).done(function() {\r\n                            previewGeneration[id] = new qq.Promise();\r\n\r\n                            previewGeneration[id].done(function() {\r\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\r\n                            });\r\n\r\n                            /* jshint eqnull: true */\r\n                            // If we've already generated an <img> for this file, use the one that exists,\r\n                            // don't waste resources generating a new one.\r\n                            if (relatedThumbnailId != null) {\r\n                                useCachedPreview(id, relatedThumbnailId);\r\n                            }\r\n                            else {\r\n                                generateNewPreview(id, optFileOrBlob, spec);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                // File element in template may have been removed, so move on to next item in queue\r\n                else {\r\n                    generateNextQueuedPreview();\r\n                }\r\n            }\r\n            else if (thumbnail) {\r\n                displayWaitingImg(thumbnail);\r\n                generateNextQueuedPreview();\r\n            }\r\n        },\r\n\r\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\r\n            var id = queuedThumbRequest.id,\r\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\r\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\r\n                thumbnail = getThumbnail(id),\r\n                spec = {\r\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\r\n                    scale: serverScale,\r\n                    maxSize: thumbnailMaxSize\r\n                };\r\n\r\n            if (thumbnail) {\r\n                if (thumbnailUrl) {\r\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\r\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\r\n                        generateNextQueuedPreview();\r\n                    }\r\n                    else {\r\n                        if (showWaitingImg) {\r\n                            displayWaitingImg(thumbnail);\r\n                        }\r\n\r\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\r\n                            function() {\r\n                                show(thumbnail);\r\n                                generatedThumbnails++;\r\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\r\n                            },\r\n\r\n                            function() {\r\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\r\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\r\n                            }\r\n                        );\r\n                    }\r\n                }\r\n                else {\r\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\r\n                    generateNextQueuedPreview();\r\n                }\r\n            }\r\n        },\r\n\r\n        setProgressBarWidth = function(id, percent) {\r\n            var bar = getProgress(id),\r\n                /* jshint eqnull:true */\r\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\r\n\r\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\r\n                bar = qq(bar).getFirstByClass(progressBarSelector);\r\n            }\r\n\r\n            if (bar) {\r\n                qq(bar).css({width: percent + \"%\"});\r\n                bar.setAttribute(\"aria-valuenow\", percent);\r\n            }\r\n        },\r\n\r\n        show = function(el) {\r\n            el && qq(el).removeClass(options.classes.hide);\r\n        },\r\n\r\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\r\n            var targetThumbnail = getThumbnail(targetThumbnailId),\r\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\r\n\r\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\r\n\r\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\r\n            previewGeneration[cachedThumbnailId].then(function() {\r\n                generatedThumbnails++;\r\n                previewGeneration[targetThumbnailId].success();\r\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\r\n                targetThumbnail.src = cachedThumbnail.src;\r\n                show(targetThumbnail);\r\n            },\r\n            function() {\r\n                previewGeneration[targetThumbnailId].failure();\r\n                if (!options.placeholders.waitUntilUpdate) {\r\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\r\n                }\r\n            });\r\n        };\r\n\r\n    qq.extend(options, spec);\r\n    log = options.log;\r\n\r\n    // No need to worry about conserving CPU or memory on older browsers,\r\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\r\n    if (!qq.supportedFeatures.imagePreviews) {\r\n        options.limits.timeBetweenThumbs = 0;\r\n        options.limits.maxThumbs = 0;\r\n    }\r\n\r\n    container = options.containerEl;\r\n    showThumbnails = options.imageGenerator !== undefined;\r\n    templateDom = parseAndGetTemplate();\r\n\r\n    cacheThumbnailPlaceholders();\r\n\r\n    qq.extend(this, {\r\n        render: function() {\r\n            log(\"Rendering template in DOM.\");\r\n\r\n            generatedThumbnails = 0;\r\n\r\n            container.appendChild(templateDom.template.cloneNode(true));\r\n            hide(getDropProcessing());\r\n            this.hideTotalProgress();\r\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\r\n\r\n            log(\"Template rendering complete\");\r\n        },\r\n\r\n        renderFailure: function(message) {\r\n            var cantRenderEl = qq.toElement(message);\r\n            container.innerHTML = \"\";\r\n            container.appendChild(cantRenderEl);\r\n        },\r\n\r\n        reset: function() {\r\n            container.innerHTML = \"\";\r\n            this.render();\r\n        },\r\n\r\n        clearFiles: function() {\r\n            fileList.innerHTML = \"\";\r\n        },\r\n\r\n        disableCancel: function() {\r\n            isCancelDisabled = true;\r\n        },\r\n\r\n        addFile: function(id, name, prependInfo, hideForever, batch) {\r\n            var fileEl = templateDom.fileTemplate.cloneNode(true),\r\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\r\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\r\n                fileContainer = batch ? fileBatch.content : fileList,\r\n                thumb;\r\n\r\n            if (batch) {\r\n                fileBatch.map[id] = fileEl;\r\n            }\r\n\r\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\r\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\r\n\r\n            if (fileNameEl) {\r\n                qq(fileNameEl).setText(name);\r\n                fileNameEl.setAttribute(\"title\", name);\r\n            }\r\n\r\n            fileEl.setAttribute(FILE_ID_ATTR, id);\r\n\r\n            if (prependInfo) {\r\n                prependFile(fileEl, prependInfo.index, fileContainer);\r\n            }\r\n            else {\r\n                fileContainer.appendChild(fileEl);\r\n            }\r\n\r\n            if (hideForever) {\r\n                fileEl.style.display = \"none\";\r\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\r\n            }\r\n            else {\r\n                hide(getProgress(id));\r\n                hide(getSize(id));\r\n                hide(getDelete(id));\r\n                hide(getRetry(id));\r\n                hide(getPause(id));\r\n                hide(getContinue(id));\r\n\r\n                if (isCancelDisabled) {\r\n                    this.hideCancel(id);\r\n                }\r\n\r\n                thumb = getThumbnail(id);\r\n                if (thumb && !thumb.src) {\r\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\r\n                        thumb.src = waitingImg.src;\r\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\r\n                            qq(thumb).css({\r\n                                maxHeight: waitingImg.style.maxHeight,\r\n                                maxWidth: waitingImg.style.maxWidth\r\n                            });\r\n                        }\r\n\r\n                        show(thumb);\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        addFileToCache: function(id, name, prependInfo, hideForever) {\r\n            this.addFile(id, name, prependInfo, hideForever, true);\r\n        },\r\n\r\n        addCacheToDom: function() {\r\n            fileList.appendChild(fileBatch.content);\r\n            fileBatch.content = document.createDocumentFragment();\r\n            fileBatch.map = {};\r\n        },\r\n\r\n        removeFile: function(id) {\r\n            qq(getFile(id)).remove();\r\n        },\r\n\r\n        getFileId: function(el) {\r\n            var currentNode = el;\r\n\r\n            if (currentNode) {\r\n                /*jshint -W116*/\r\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\r\n                    currentNode = currentNode.parentNode;\r\n                }\r\n\r\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\r\n            }\r\n        },\r\n\r\n        getFileList: function() {\r\n            return fileList;\r\n        },\r\n\r\n        markFilenameEditable: function(id) {\r\n            var filename = getFilename(id);\r\n\r\n            filename && qq(filename).addClass(options.classes.editable);\r\n        },\r\n\r\n        updateFilename: function(id, name) {\r\n            var filenameEl = getFilename(id);\r\n\r\n            if (filenameEl) {\r\n                qq(filenameEl).setText(name);\r\n                filenameEl.setAttribute(\"title\", name);\r\n            }\r\n        },\r\n\r\n        hideFilename: function(id) {\r\n            hide(getFilename(id));\r\n        },\r\n\r\n        showFilename: function(id) {\r\n            show(getFilename(id));\r\n        },\r\n\r\n        isFileName: function(el) {\r\n            return qq(el).hasClass(selectorClasses.file);\r\n        },\r\n\r\n        getButton: function() {\r\n            return options.button || getTemplateEl(container, selectorClasses.button);\r\n        },\r\n\r\n        hideDropProcessing: function() {\r\n            hide(getDropProcessing());\r\n        },\r\n\r\n        showDropProcessing: function() {\r\n            show(getDropProcessing());\r\n        },\r\n\r\n        getDropZone: function() {\r\n            return getTemplateEl(container, selectorClasses.drop);\r\n        },\r\n\r\n        isEditFilenamePossible: function() {\r\n            return isEditElementsExist;\r\n        },\r\n\r\n        hideRetry: function(id) {\r\n            hide(getRetry(id));\r\n        },\r\n\r\n        isRetryPossible: function() {\r\n            return isRetryElementExist;\r\n        },\r\n\r\n        showRetry: function(id) {\r\n            show(getRetry(id));\r\n        },\r\n\r\n        getFileContainer: function(id) {\r\n            return getFile(id);\r\n        },\r\n\r\n        showEditIcon: function(id) {\r\n            var icon = getEditIcon(id);\r\n\r\n            icon && qq(icon).addClass(options.classes.editable);\r\n        },\r\n\r\n        isHiddenForever: function(id) {\r\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\r\n        },\r\n\r\n        hideEditIcon: function(id) {\r\n            var icon = getEditIcon(id);\r\n\r\n            icon && qq(icon).removeClass(options.classes.editable);\r\n        },\r\n\r\n        isEditIcon: function(el) {\r\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\r\n        },\r\n\r\n        getEditInput: function(id) {\r\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\r\n        },\r\n\r\n        isEditInput: function(el) {\r\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\r\n        },\r\n\r\n        updateProgress: function(id, loaded, total) {\r\n            var bar = getProgress(id),\r\n                percent;\r\n\r\n            if (bar && total > 0) {\r\n                percent = Math.round(loaded / total * 100);\r\n\r\n                if (percent === 100) {\r\n                    hide(bar);\r\n                }\r\n                else {\r\n                    show(bar);\r\n                }\r\n\r\n                setProgressBarWidth(id, percent);\r\n            }\r\n        },\r\n\r\n        updateTotalProgress: function(loaded, total) {\r\n            this.updateProgress(null, loaded, total);\r\n        },\r\n\r\n        hideProgress: function(id) {\r\n            var bar = getProgress(id);\r\n\r\n            bar && hide(bar);\r\n        },\r\n\r\n        hideTotalProgress: function() {\r\n            this.hideProgress();\r\n        },\r\n\r\n        resetProgress: function(id) {\r\n            setProgressBarWidth(id, 0);\r\n            this.hideTotalProgress(id);\r\n        },\r\n\r\n        resetTotalProgress: function() {\r\n            this.resetProgress();\r\n        },\r\n\r\n        showCancel: function(id) {\r\n            if (!isCancelDisabled) {\r\n                var cancel = getCancel(id);\r\n\r\n                cancel && qq(cancel).removeClass(options.classes.hide);\r\n            }\r\n        },\r\n\r\n        hideCancel: function(id) {\r\n            hide(getCancel(id));\r\n        },\r\n\r\n        isCancel: function(el)  {\r\n            return qq(el).hasClass(selectorClasses.cancel, true);\r\n        },\r\n\r\n        allowPause: function(id) {\r\n            show(getPause(id));\r\n            hide(getContinue(id));\r\n        },\r\n\r\n        uploadPaused: function(id) {\r\n            this.setStatusText(id, options.text.paused);\r\n            this.allowContinueButton(id);\r\n            hide(getSpinner(id));\r\n        },\r\n\r\n        hidePause: function(id) {\r\n            hide(getPause(id));\r\n        },\r\n\r\n        isPause: function(el) {\r\n            return qq(el).hasClass(selectorClasses.pause, true);\r\n        },\r\n\r\n        isContinueButton: function(el) {\r\n            return qq(el).hasClass(selectorClasses.continueButton, true);\r\n        },\r\n\r\n        allowContinueButton: function(id) {\r\n            show(getContinue(id));\r\n            hide(getPause(id));\r\n        },\r\n\r\n        uploadContinued: function(id) {\r\n            this.setStatusText(id, \"\");\r\n            this.allowPause(id);\r\n            show(getSpinner(id));\r\n        },\r\n\r\n        showDeleteButton: function(id) {\r\n            show(getDelete(id));\r\n        },\r\n\r\n        hideDeleteButton: function(id) {\r\n            hide(getDelete(id));\r\n        },\r\n\r\n        isDeleteButton: function(el) {\r\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\r\n        },\r\n\r\n        isRetry: function(el) {\r\n            return qq(el).hasClass(selectorClasses.retry, true);\r\n        },\r\n\r\n        updateSize: function(id, text) {\r\n            var size = getSize(id);\r\n\r\n            if (size) {\r\n                show(size);\r\n                qq(size).setText(text);\r\n            }\r\n        },\r\n\r\n        setStatusText: function(id, text) {\r\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\r\n\r\n            if (textEl) {\r\n                /*jshint -W116*/\r\n                if (text == null) {\r\n                    qq(textEl).clearText();\r\n                }\r\n                else {\r\n                    qq(textEl).setText(text);\r\n                }\r\n            }\r\n        },\r\n\r\n        hideSpinner: function(id) {\r\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\r\n            hide(getSpinner(id));\r\n        },\r\n\r\n        showSpinner: function(id) {\r\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\r\n            show(getSpinner(id));\r\n        },\r\n\r\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\r\n            if (!this.isHiddenForever(id)) {\r\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\r\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\r\n            }\r\n        },\r\n\r\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\r\n            if (!this.isHiddenForever(id)) {\r\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\r\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\r\n            }\r\n        },\r\n\r\n        hasDialog: function(type) {\r\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\r\n        },\r\n\r\n        showDialog: function(type, message, defaultValue) {\r\n            var dialog = getDialog(type),\r\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\r\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\r\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\r\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\r\n                promise = new qq.Promise(),\r\n\r\n                closeHandler = function() {\r\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\r\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\r\n                    promise.failure();\r\n                },\r\n\r\n                cancelClickHandler = function() {\r\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\r\n                    dialog.close();\r\n                },\r\n\r\n                okClickHandler = function() {\r\n                    dialog.removeEventListener(\"close\", closeHandler);\r\n                    okBtn.removeEventListener(\"click\", okClickHandler);\r\n                    dialog.close();\r\n\r\n                    promise.success(inputEl && inputEl.value);\r\n                };\r\n\r\n            dialog.addEventListener(\"close\", closeHandler);\r\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\r\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\r\n\r\n            if (inputEl) {\r\n                inputEl.value = defaultValue;\r\n            }\r\n            messageEl.textContent = message;\r\n\r\n            dialog.showModal();\r\n\r\n            return promise;\r\n        }\r\n    });\r\n};\r\n","/*globals qq */\r\n// Base handler for UI (FineUploader mode) events.\r\n// Some more specific handlers inherit from this one.\r\nqq.UiEventHandler = function(s, protectedApi) {\r\n    \"use strict\";\r\n\r\n    var disposer = new qq.DisposeSupport(),\r\n        spec = {\r\n            eventType: \"click\",\r\n            attachTo: null,\r\n            onHandled: function(target, event) {}\r\n        };\r\n\r\n    // This makes up the \"public\" API methods that will be accessible\r\n    // to instances constructing a base or child handler\r\n    qq.extend(this, {\r\n        addHandler: function(element) {\r\n            addHandler(element);\r\n        },\r\n\r\n        dispose: function() {\r\n            disposer.dispose();\r\n        }\r\n    });\r\n\r\n    function addHandler(element) {\r\n        disposer.attach(element, spec.eventType, function(event) {\r\n            // Only in IE: the `event` is a property of the `window`.\r\n            event = event || window.event;\r\n\r\n            // On older browsers, we must check the `srcElement` instead of the `target`.\r\n            var target = event.target || event.srcElement;\r\n\r\n            spec.onHandled(target, event);\r\n        });\r\n    }\r\n\r\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\r\n    qq.extend(protectedApi, {\r\n        getFileIdFromItem: function(item) {\r\n            return item.qqFileId;\r\n        },\r\n\r\n        getDisposeSupport: function() {\r\n            return disposer;\r\n        }\r\n    });\r\n\r\n    qq.extend(spec, s);\r\n\r\n    if (spec.attachTo) {\r\n        addHandler(spec.attachTo);\r\n    }\r\n};\r\n","/* global qq */\r\nqq.FileButtonsClickHandler = function(s) {\r\n    \"use strict\";\r\n\r\n    var inheritedInternalApi = {},\r\n        spec = {\r\n            templating: null,\r\n            log: function(message, lvl) {},\r\n            onDeleteFile: function(fileId) {},\r\n            onCancel: function(fileId) {},\r\n            onRetry: function(fileId) {},\r\n            onPause: function(fileId) {},\r\n            onContinue: function(fileId) {},\r\n            onGetName: function(fileId) {}\r\n        },\r\n        buttonHandlers = {\r\n            cancel: function(id) { spec.onCancel(id); },\r\n            retry:  function(id) { spec.onRetry(id); },\r\n            deleteButton: function(id) { spec.onDeleteFile(id); },\r\n            pause: function(id) { spec.onPause(id); },\r\n            continueButton: function(id) { spec.onContinue(id); }\r\n        };\r\n\r\n    function examineEvent(target, event) {\r\n        qq.each(buttonHandlers, function(buttonType, handler) {\r\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\r\n                fileId;\r\n\r\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\r\n                fileId = spec.templating.getFileId(target);\r\n                qq.preventDefault(event);\r\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\r\n                handler(fileId);\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    qq.extend(spec, s);\r\n\r\n    spec.eventType = \"click\";\r\n    spec.onHandled = examineEvent;\r\n    spec.attachTo = spec.templating.getFileList();\r\n\r\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\r\n};\r\n","/*globals qq */\r\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\r\nqq.FilenameClickHandler = function(s) {\r\n    \"use strict\";\r\n\r\n    var inheritedInternalApi = {},\r\n        spec = {\r\n            templating: null,\r\n            log: function(message, lvl) {},\r\n            classes: {\r\n                file: \"qq-upload-file\",\r\n                editNameIcon: \"qq-edit-filename-icon\"\r\n            },\r\n            onGetUploadStatus: function(fileId) {},\r\n            onGetName: function(fileId) {}\r\n        };\r\n\r\n    qq.extend(spec, s);\r\n\r\n    // This will be called by the parent handler when a `click` event is received on the list element.\r\n    function examineEvent(target, event) {\r\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\r\n            var fileId = spec.templating.getFileId(target),\r\n                status = spec.onGetUploadStatus(fileId);\r\n\r\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\r\n            if (status === qq.status.SUBMITTED) {\r\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\r\n                qq.preventDefault(event);\r\n\r\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    spec.eventType = \"click\";\r\n    spec.onHandled = examineEvent;\r\n\r\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\r\n};\r\n","/*globals qq */\r\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\r\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\r\n    \"use strict\";\r\n\r\n    var spec = {\r\n            templating: null,\r\n            onGetUploadStatus: function(fileId) {},\r\n            log: function(message, lvl) {}\r\n        };\r\n\r\n    if (!inheritedInternalApi) {\r\n        inheritedInternalApi = {};\r\n    }\r\n\r\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\r\n    function handleInputFocus(target, event) {\r\n        if (spec.templating.isEditInput(target)) {\r\n            var fileId = spec.templating.getFileId(target),\r\n                status = spec.onGetUploadStatus(fileId);\r\n\r\n            if (status === qq.status.SUBMITTED) {\r\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\r\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\r\n            }\r\n        }\r\n    }\r\n\r\n    spec.eventType = \"focusin\";\r\n    spec.onHandled = handleInputFocus;\r\n\r\n    qq.extend(spec, s);\r\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\r\n};\r\n","/*globals qq */\r\n/**\r\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\r\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\r\n *\r\n * @param spec Overrides for default specifications\r\n */\r\nqq.FilenameInputFocusHandler = function(spec) {\r\n    \"use strict\";\r\n\r\n    spec.eventType = \"focus\";\r\n    spec.attachTo = null;\r\n\r\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\r\n};\r\n","/*globals qq */\r\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\r\n// Children will delegate to this handler when specific edit-related actions are detected.\r\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\r\n    \"use strict\";\r\n\r\n    var spec = {\r\n            templating: null,\r\n            log: function(message, lvl) {},\r\n            onGetUploadStatus: function(fileId) {},\r\n            onGetName: function(fileId) {},\r\n            onSetName: function(fileId, newName) {},\r\n            onEditingStatusChange: function(fileId, isEditing) {}\r\n        };\r\n\r\n    function getFilenameSansExtension(fileId) {\r\n        var filenameSansExt = spec.onGetName(fileId),\r\n            extIdx = filenameSansExt.lastIndexOf(\".\");\r\n\r\n        if (extIdx > 0) {\r\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\r\n        }\r\n\r\n        return filenameSansExt;\r\n    }\r\n\r\n    function getOriginalExtension(fileId) {\r\n        var origName = spec.onGetName(fileId);\r\n        return qq.getExtension(origName);\r\n    }\r\n\r\n    // Callback iff the name has been changed\r\n    function handleNameUpdate(newFilenameInputEl, fileId) {\r\n        var newName = newFilenameInputEl.value,\r\n            origExtension;\r\n\r\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\r\n            origExtension = getOriginalExtension(fileId);\r\n\r\n            if (origExtension !== undefined) {\r\n                newName = newName + \".\" + origExtension;\r\n            }\r\n\r\n            spec.onSetName(fileId, newName);\r\n        }\r\n\r\n        spec.onEditingStatusChange(fileId, false);\r\n    }\r\n\r\n    // The name has been updated if the filename edit input loses focus.\r\n    function registerInputBlurHandler(inputEl, fileId) {\r\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\r\n            handleNameUpdate(inputEl, fileId);\r\n        });\r\n    }\r\n\r\n    // The name has been updated if the user presses enter.\r\n    function registerInputEnterKeyHandler(inputEl, fileId) {\r\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\r\n\r\n            var code = event.keyCode || event.which;\r\n\r\n            if (code === 13) {\r\n                handleNameUpdate(inputEl, fileId);\r\n            }\r\n        });\r\n    }\r\n\r\n    qq.extend(spec, s);\r\n\r\n    spec.attachTo = spec.templating.getFileList();\r\n\r\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\r\n\r\n    qq.extend(inheritedInternalApi, {\r\n        handleFilenameEdit: function(id, target, focusInput) {\r\n            var newFilenameInputEl = spec.templating.getEditInput(id);\r\n\r\n            spec.onEditingStatusChange(id, true);\r\n\r\n            newFilenameInputEl.value = getFilenameSansExtension(id);\r\n\r\n            if (focusInput) {\r\n                newFilenameInputEl.focus();\r\n            }\r\n\r\n            registerInputBlurHandler(newFilenameInputEl, id);\r\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\r\n        }\r\n    });\r\n};\r\n"]}